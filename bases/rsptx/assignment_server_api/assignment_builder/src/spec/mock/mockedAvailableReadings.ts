export const mockedAvailableReadings = {
  detail: {
    questions: [
      {
        key: "CSPrinTeasers",
        data: {
          title: "1. Chapter 1 - What is this Book About?",
          num: 1
        },
        children: [
          {
            key: "studentBook",
            data: {
              title: "1.1 This Book is for Students",
              num: 100,
              chapter: "CSPrinTeasers",
              subchapter: "studentBook",
              id: 11562,
              numQuestions: 1
            },
            children: [
              {
                key: "1. Chapter 1 - What is this Book About?/1.1 This Book is for Students",
                data: {
                  id: 11562,
                  base_course: "StudentCSP",
                  name: "1. Chapter 1 - What is this Book About?/1.1 This Book is for Students",
                  chapter: "CSPrinTeasers",
                  subchapter: "studentBook",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "pretest",
            data: {
              title: "1.2 Pretest",
              num: 200,
              chapter: "CSPrinTeasers",
              subchapter: "pretest",
              id: 11563,
              numQuestions: 12
            },
            children: [
              {
                key: "pre_1",
                data: {
                  id: 11551,
                  base_course: "StudentCSP",
                  name: "pre_1",
                  chapter: "CSPrinTeasers",
                  subchapter: "pretest",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.2.2" data-multipleanswers="false"  id="pre_1"  style="visibility: hidden;">\n    <p>What will be the values in x, y, and z after the following lines of code execute?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="mi">7</span><span class="p">;</span>\n<span class="n">y</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>\n<span class="n">z</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>\n<span class="n">z</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span>\n<span class="n">x</span> <span class="o">=</span> <span class="n">y</span><span class="p">;</span>\n<span class="n">y</span> <span class="o">=</span> <span class="n">z</span><span class="p">;</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="pre_1_opt_a">x = 7, y = 5, z = 0</li><li data-component="feedback">Those are the original values, but they change.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="pre_1_opt_b">x = 5, y = 7, z = 7</li><li data-component="feedback">x is set to 7 but changed to the value of y which is 5.  y is set to 5 originally, but is changed to the value of z but after z has been set to the value of x which is 7.  z was set to 0 originally but changes to the the value of x which is 7.</li>\n    \n    <li data-component="answer"  id="pre_1_opt_c">x = 5, y = 7, z = 0</li><li data-component="feedback">This would be true if setting y to z reset z to 0, but that is not what happens.</li>\n    \n    <li data-component="answer"  id="pre_1_opt_d">x = 5, y = 5, z = 7</li><li data-component="feedback">y was set to 5 originally, but the value was changed.</li>\n    \n    <li data-component="answer"  id="pre_1_opt_e">I don\'t know</li><li data-component="feedback">That is okay.  We do not expect you to know this.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/pretest",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.2.2",
                  optional: false,
                  description:
                    "What will be the values in x, y, and z after the following lines of code execute",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "pre_2",
                data: {
                  id: 11552,
                  base_course: "StudentCSP",
                  name: "pre_2",
                  chapter: "CSPrinTeasers",
                  subchapter: "pretest",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.2.3" data-multipleanswers="false"  id="pre_2"  style="visibility: hidden;">\n    <p>What is the output from the program below?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">denominator</span> <span class="o">=</span> <span class="mi">4</span>\n<span class="k">if</span> <span class="n">denominator</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;Mere mortals cannot divide by zero.&quot;</span><span class="p">)</span>\n<span class="k">else</span><span class="p">:</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="mi">1000</span> <span class="o">/</span> <span class="n">denominator</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="pre_2_opt_a">Mere morals cannot divide by zero.</li><li data-component="feedback">The sentence prints only if denominator is equal to 0, but it is not.</li>\n    \n    <li data-component="answer"  id="pre_2_opt_b">1000 / 4</li><li data-component="feedback">It will print the result of the division.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="pre_2_opt_c">250.0</li><li data-component="feedback">It only prints the result of dividing 1000 by 4 which is 250.0.</li>\n    \n    <li data-component="answer"  id="pre_2_opt_d">Mere mortals cannot divide by zero. 250.</li><li data-component="feedback">The sentence prints only if denominator is equal to 0, but it is not.</li>\n    \n    <li data-component="answer"  id="pre_2_opt_e">I don’t know</li><li data-component="feedback">That is okay.  We do not expect you to know this.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/pretest",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.2.3",
                  optional: false,
                  description: "What is the output from the program below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "pre_3",
                data: {
                  id: 11553,
                  base_course: "StudentCSP",
                  name: "pre_3",
                  chapter: "CSPrinTeasers",
                  subchapter: "pretest",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.2.4" data-multipleanswers="false"  id="pre_3"  style="visibility: hidden;">\n    <p>What is the output from the program below?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">check_systolic</span><span class="p">(</span><span class="n">num1</span><span class="p">):</span>\n    <span class="k">if</span> <span class="n">num1</span> <span class="o">&lt;</span> <span class="mi">120</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">0</span>\n    <span class="k">elif</span> <span class="n">num1</span> <span class="o">&lt;</span> <span class="mi">140</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">1</span>\n    <span class="k">elif</span> <span class="n">num1</span> <span class="o">&lt;</span> <span class="mi">180</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">2</span>\n    <span class="k">else</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">3</span>\n\n<span class="k">def</span> <span class="nf">check_diastolic</span><span class="p">(</span><span class="n">num2</span><span class="p">):</span>\n    <span class="k">if</span> <span class="n">num2</span> <span class="o">&lt;</span> <span class="mi">80</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">0</span>\n    <span class="k">elif</span> <span class="n">num2</span> <span class="o">&lt;</span> <span class="mi">90</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">1</span>\n    <span class="k">elif</span> <span class="n">num2</span> <span class="o">&lt;</span> <span class="mi">110</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">2</span>\n    <span class="k">else</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">3</span>\n\n<span class="n">syst</span> <span class="o">=</span> <span class="mi">135</span>\n<span class="n">dias</span> <span class="o">=</span> <span class="mi">100</span>\n<span class="k">if</span> <span class="n">check_systolic</span><span class="p">(</span><span class="n">syst</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">check_diastolic</span><span class="p">(</span><span class="n">dias</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;Normal&quot;</span><span class="p">)</span>\n<span class="k">elif</span> <span class="n">check_systolic</span><span class="p">(</span><span class="n">syst</span><span class="p">)</span> <span class="o">==</span> <span class="mi">3</span> <span class="ow">or</span> <span class="n">check_diastolic</span><span class="p">(</span><span class="n">dias</span><span class="p">)</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;Hypertensive Crisis&quot;</span><span class="p">)</span>\n<span class="k">elif</span> <span class="n">check_systolic</span><span class="p">(</span><span class="n">syst</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>\n    <span class="k">if</span> <span class="n">check_diastolic</span><span class="p">(</span><span class="n">dias</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>\n        <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;High Blood Pressure A&quot;</span><span class="p">)</span>\n    <span class="k">else</span><span class="p">:</span>\n        <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;Prehypertension&quot;</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="pre_3_opt_a">Normal</li><li data-component="feedback">This will only print when both check_systolic and check_diastolic return 0 which is when check_systolic is passed a number less than 120 and check_diastolic is passed a number less than 80.</li>\n    \n    <li data-component="answer"  id="pre_3_opt_b">Hypertensive Crisis</li><li data-component="feedback">This will only print when either check_systolic or check_diastolic return 3 which is when check_systolic is passed a number greater or equal to 180 and check_diastolic is passed a number greater than or equal to 110.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="pre_3_opt_c">High Blood Pressure A</li><li data-component="feedback">This will print when check_systolic was 1 and check_diastolic was greater than 1 (but not 3).</li>\n    \n    <li data-component="answer"  id="pre_3_opt_d">Prehypertension</li><li data-component="feedback">This will print when check_systolic was 1 and check_diastolic was less than or equal to 1.</li>\n    \n    <li data-component="answer"  id="pre_3_opt_e">I don’t know</li><li data-component="feedback">That is okay.  We do not expect you to know this.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/pretest",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.2.4",
                  optional: false,
                  description: "What is the output from the program below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "pre_4",
                data: {
                  id: 11554,
                  base_course: "StudentCSP",
                  name: "pre_4",
                  chapter: "CSPrinTeasers",
                  subchapter: "pretest",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.2.5" data-multipleanswers="false"  id="pre_4"  style="visibility: hidden;">\n    <p>What is the output from the program below?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">first</span> <span class="o">=</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">first</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span>\n<span class="n">second</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">second</span><span class="p">)</span>\n<span class="n">second</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="n">second</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">second</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="pre_4_opt_a">10        [3, 1, -2]          -1</li><li data-component="feedback">This would print 10 first if lists started at index 0, but they start at index 1.</li>\n    \n    <li data-component="answer"  id="pre_4_opt_b">6          [3, 1, -2]          2</li><li data-component="feedback">Remember that lists start at index 0.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="pre_4_opt_c">6          [3, 1, -2]         -1</li><li data-component="feedback">Lists start at index 0.  You can modify the value at an index.</li>\n    \n    <li data-component="answer"  id="pre_4_opt_d">6          [3, 1, -2]         -2</li><li data-component="feedback">Notice that second[2] is incremented.</li>\n    \n    <li data-component="answer"  id="pre_4_opt_e">I don’t know</li><li data-component="feedback">That is okay.  We do not expect you to know this.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/pretest",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.2.5",
                  optional: false,
                  description: "What is the output from the program below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "pre_5",
                data: {
                  id: 11555,
                  base_course: "StudentCSP",
                  name: "pre_5",
                  chapter: "CSPrinTeasers",
                  subchapter: "pretest",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.2.6" data-multipleanswers="false"  id="pre_5"  style="visibility: hidden;">\n    <p>What is the output from the program below?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">first</span> <span class="o">=</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span>\n<span class="n">first</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">5</span>\n<span class="n">value</span> <span class="o">=</span> <span class="n">first</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">first</span><span class="p">)</span>\n<span class="n">second</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="n">value</span><span class="p">]</span>\n<span class="n">second</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="mi">100</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">second</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="pre_5_opt_a">[-5, 5, 0]  [3, 1, 3, 5]</li><li data-component="feedback">The first value in first doesn\'t change.  first[1] refers to the second item in the list.</li>\n    \n    <li data-component="answer"  id="pre_5_opt_b">[10, 5, 0]  [3, 1, 3, 100]</li><li data-component="feedback">The second item (the one at index 1) is the first list is changed to -5.</li>\n    \n    <li data-component="answer"  id="pre_5_opt_c">[10, -5, 0]  [3, 1, 3, 5]</li><li data-component="feedback">The last item in the second list is changed to 100.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="pre_5_opt_d">[10, -5, 0]  [3, 1, 3, 100]</li><li data-component="feedback">The second item (the one at index 1) is the first list is changed to -5.  The last item in the second list is changed to 100.</li>\n    \n    <li data-component="answer"  id="pre_5_opt_e">I don’t know</li><li data-component="feedback">That is okay.  We do not expect you to know this.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/pretest",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.2.6",
                  optional: false,
                  description: "What is the output from the program below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "pre_6",
                data: {
                  id: 11556,
                  base_course: "StudentCSP",
                  name: "pre_6",
                  chapter: "CSPrinTeasers",
                  subchapter: "pretest",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.2.7" data-multipleanswers="false"  id="pre_6"  style="visibility: hidden;">\n    <p>Given the following code segment, which of the following statements is true?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">hello</span> <span class="o">=</span> <span class="s2">&quot;Good-bye&quot;</span>\n<span class="n">roger</span> <span class="o">=</span> <span class="s2">&quot;name&quot;</span>\n<span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;Roger&quot;</span>\n<span class="n">greeting</span> <span class="o">=</span> <span class="n">hello</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="n">name</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">greeting</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="pre_6_opt_a">It will print "Hello Roger"</li><li data-component="feedback">It prints the value of hello which is "Good-bye".</li>\n    \n    <li data-component="answer"  id="pre_6_opt_b">It will print "Hello name"</li><li data-component="feedback">It prints the value of hello which is "Good-bye".</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="pre_6_opt_c">It will print "Good-bye Roger"</li><li data-component="feedback">It prints the value of hello which is "Good-bye" and the value of name which is "Roger" with a space between.</li>\n    \n    <li data-component="answer"  id="pre_6_opt_d">It will print hello + " " + name</li><li data-component="feedback">It prints the value of the variables.</li>\n    \n    <li data-component="answer"  id="pre_6_opt_e">I don’t know</li><li data-component="feedback">That is okay.  We do not expect you to know this.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/pretest",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.2.7",
                  optional: false,
                  description:
                    "Given the following code segment, which of the following statements is true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "pre_7",
                data: {
                  id: 11557,
                  base_course: "StudentCSP",
                  name: "pre_7",
                  chapter: "CSPrinTeasers",
                  subchapter: "pretest",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.2.8" data-multipleanswers="false"  id="pre_7"  style="visibility: hidden;">\n    <p>Given the following code segment, which of the following is true?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span> <span class="c1"># Start out with nothing</span>\n<span class="n">thingsToAdd</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">131</span><span class="p">]</span>\n<span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="n">thingsToAdd</span><span class="p">:</span>\n    <span class="nb">sum</span> <span class="o">=</span> <span class="nb">sum</span> <span class="o">+</span> <span class="n">number</span>\n<span class="nb">print</span> <span class="p">(</span><span class="nb">sum</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="pre_7_opt_a">The printed result will be even and will have a decimal point.</li><li data-component="feedback">Adding up an even number of odd numbers results in an even sum, but there won\'t be a decimal point.</li>\n    \n    <li data-component="answer"  id="pre_7_opt_b">The printed result will be odd and will have a decimal point.</li><li data-component="feedback">Adding up an even number of odd numbers results in an even sum.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="pre_7_opt_c">The printed result will be even and will not have a decimal point.</li><li data-component="feedback">Adding up an even number of odd numbers results in an even sum and there won\'t be a decimal point.</li>\n    \n    <li data-component="answer"  id="pre_7_opt_d">The printed result will be odd and will not have a decimal point.</li><li data-component="feedback">Adding up an even number of odd numbers results in an even sum.</li>\n    \n    <li data-component="answer"  id="pre_7_opt_e">I don’t know</li><li data-component="feedback">That is okay.  We do not expect you to know this.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/pretest",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.2.8",
                  optional: false,
                  description: "Given the following code segment, which of the following is true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "pre_8",
                data: {
                  id: 11558,
                  base_course: "StudentCSP",
                  name: "pre_8",
                  chapter: "CSPrinTeasers",
                  subchapter: "pretest",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.2.9" data-multipleanswers="false"  id="pre_8"  style="visibility: hidden;">\n    <p>Given the following code segment, which of the following is true?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">counter</span> <span class="o">=</span> <span class="mi">1</span>\n<span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>\n<span class="k">while</span> <span class="n">counter</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="p">:</span>\n    <span class="nb">sum</span> <span class="o">=</span> <span class="nb">sum</span> <span class="o">+</span> <span class="n">counter</span>\n    <span class="n">counter</span> <span class="o">=</span> <span class="n">counter</span> <span class="o">+</span> <span class="mi">2</span>\n<span class="nb">print</span> <span class="p">(</span><span class="nb">sum</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="pre_8_opt_a">The printed result will be even and will have a decimal point.</li><li data-component="feedback">Adding up an odd number of odd numbers results in an odd sum.</li>\n    \n    <li data-component="answer"  id="pre_8_opt_b">The printed result will be odd and will have a decimal point.</li><li data-component="feedback">Adding up an odd number of odd numbers results in an odd sum. But, another answer is also true.</li>\n    \n    <li data-component="answer"  id="pre_8_opt_c">The printed result will be even and will not have a decimal point.</li><li data-component="feedback">This would be true if any of the numbers being added had a decimal point.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="pre_8_opt_d">The printed result will be odd and will not have a decimal point.</li><li data-component="feedback">Since none of the numbers have a decimal point in them the answer will not have a decimal point. But, another answer is also true.</li>\n    \n    <li data-component="answer"  id="pre_8_opt_e">I don’t know</li><li data-component="feedback">That is okay.  We do not expect you to know this.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/pretest",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.2.9",
                  optional: false,
                  description: "Given the following code segment, which of the following is true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "pre_9",
                data: {
                  id: 11559,
                  base_course: "StudentCSP",
                  name: "pre_9",
                  chapter: "CSPrinTeasers",
                  subchapter: "pretest",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.2.10" data-multipleanswers="false"  id="pre_9"  style="visibility: hidden;">\n    <p>Given the following code segment, which of the statements below is true?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">newString</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>\n<span class="n">phrase</span> <span class="o">=</span> <span class="s2">&quot;Rubber baby buggy bumpers.&quot;</span>\n<span class="k">for</span> <span class="n">letter</span> <span class="ow">in</span> <span class="n">phrase</span><span class="p">:</span>\n    <span class="k">if</span> <span class="n">letter</span> <span class="ow">in</span> <span class="s2">&quot;aeiou&quot;</span><span class="p">:</span>\n        <span class="n">newString</span> <span class="o">=</span> <span class="n">newString</span> <span class="o">+</span> <span class="n">letter</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">newString</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="pre_9_opt_a">The printed result will only contain vowels.</li><li data-component="feedback">This only adds the letter if it is a vowel.</li>\n    \n    <li data-component="answer"  id="pre_9_opt_b">The printed result will only contain consonants.</li><li data-component="feedback">This only adds the letter if it is a vowel.</li>\n    \n    <li data-component="answer"  id="pre_9_opt_c">It will print the empty string.</li><li data-component="feedback">No, it will add vowels to newString and print that.</li>\n    \n    <li data-component="answer"  id="pre_9_opt_d">The printed result will include "y"</li><li data-component="feedback">The letter must be in "aeiou" to be added to newString.</li>\n    \n    <li data-component="answer"  id="pre_9_opt_e">I don\'t know</li><li data-component="feedback">That is okay.  We do not expect you to know this.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/pretest",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.2.10",
                  optional: false,
                  description:
                    "Given the following code segment, which of the statements below is true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "pre_10",
                data: {
                  id: 11560,
                  base_course: "StudentCSP",
                  name: "pre_10",
                  chapter: "CSPrinTeasers",
                  subchapter: "pretest",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.2.11" data-multipleanswers="false"  id="pre_10"  style="visibility: hidden;">\n    <p>Given the following code segment, which of the statements below is true?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>\n<span class="n">space</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>\n<span class="n">alisha</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>\n<span class="n">alisha</span><span class="o">.</span><span class="n">setheading</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n<span class="k">for</span> <span class="n">sides</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">21</span><span class="p">]:</span>\n    <span class="n">alisha</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>\n    <span class="n">alisha</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="pre_10_opt_a">The turtle in this example draws a pentagram.</li><li data-component="feedback">It loops 4 times, how can that be a pentagram?</li>\n    \n    <li data-component="answer"  id="pre_10_opt_b">The turtle draws four lines of length 5, 11, 16, and 21</li><li data-component="feedback">It always moves forward by 100.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="pre_10_opt_c">The turtle draws a square.</li><li data-component="feedback">It draws a square with a side length of 100.</li>\n    \n    <li data-component="answer"  id="pre_10_opt_d">This code will generate an error.</li><li data-component="feedback">No error will be generated.</li>\n    \n    <li data-component="answer"  id="pre_10_opt_e">I don’t know</li><li data-component="feedback">That is okay.  We do not expect you to know this.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/pretest",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.2.11",
                  optional: false,
                  description:
                    "Given the following code segment, which of the statements below is true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "pre_11",
                data: {
                  id: 11561,
                  base_course: "StudentCSP",
                  name: "pre_11",
                  chapter: "CSPrinTeasers",
                  subchapter: "pretest",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.2.12" data-multipleanswers="false"  id="pre_11"  style="visibility: hidden;">\n    <p>Given the following code segment, what will be printed?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span> <span class="c1"># Start out with nothing</span>\n<span class="n">thingsToAdd</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">131</span><span class="p">]</span>\n<span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">thingsToAdd</span><span class="p">),</span><span class="mi">2</span><span class="p">):</span>\n    <span class="nb">sum</span> <span class="o">=</span> <span class="nb">sum</span> <span class="o">+</span> <span class="n">thingsToAdd</span><span class="p">[</span><span class="n">number</span><span class="p">]</span>\n<span class="nb">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="pre_11_opt_a">29</li><li data-component="feedback">This adds up every other number starting with the one at index 1 (second in list).</li>\n    \n    <li data-component="answer"  id="pre_11_opt_b">182</li><li data-component="feedback">This adds up every other number starting with the one at index 1 (second in list).</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="pre_11_opt_c">153</li><li data-component="feedback">This adds up every other number starting with the one at index 1 (second in list).</li>\n    \n    <li data-component="answer"  id="pre_11_opt_d">181</li><li data-component="feedback">This adds up every other number starting with the one at index 1 (second in list).</li>\n    \n    <li data-component="answer"  id="pre_11_opt_e">I don\'t know</li><li data-component="feedback">That is okay.  We do not expect you to know this.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/pretest",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.2.12",
                  optional: false,
                  description: "Given the following code segment, what will be printed?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "1. Chapter 1 - What is this Book About?/1.2 Pretest",
                data: {
                  id: 11563,
                  base_course: "StudentCSP",
                  name: "1. Chapter 1 - What is this Book About?/1.2 Pretest",
                  chapter: "CSPrinTeasers",
                  subchapter: "pretest",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "computeNumbers",
            data: {
              title: "1.3 Compute with Numbers",
              num: 300,
              chapter: "CSPrinTeasers",
              subchapter: "computeNumbers",
              id: 11564,
              numQuestions: 3
            },
            children: [
              {
                key: "BMI",
                data: {
                  id: 11542,
                  base_course: "StudentCSP",
                  name: "BMI",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeNumbers",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=BMI data-question_label="1.3.1">\n<div id=BMI_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="BMI_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: BMI-line1; 2: BMI-line2; 3: BMI-line3; 4: BMI-line4; 5: BMI-line5; 6: BMI-line6; 7: BMI-line7;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nheight = 60    # in inches (60 inches is 5 feet)\nweight = 110   # in pounds\nheightSquared = height * height\nBMI = weight / heightSquared\nBMImetric = BMI * 703\nprint("BMI:")\nprint(BMImetric)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/computeNumbers",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "1_3_1_BMI_Q1",
                data: {
                  id: 11543,
                  base_course: "StudentCSP",
                  name: "1_3_1_BMI_Q1",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeNumbers",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.3.2" data-multipleanswers="false"  id="1_3_1_BMI_Q1"  style="visibility: hidden;">\n    <p>Imagine that you are 5 foot 7 inches and weighed 140 pounds.  What is your BMI?</p>\n\n    <li data-component="answer"  id="1_3_1_BMI_Q1_opt_a">21.9</li><li data-component="feedback">Close, but the computer will give you more digits than that.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="1_3_1_BMI_Q1_opt_b">21.924704834</li><li data-component="feedback">Yes!</li>\n    \n    <li data-component="answer"  id="1_3_1_BMI_Q1_opt_c">21</li><li data-component="feedback">No, the result will be a number with a decimal point and numbers after the decimal point.</li>\n    \n    <li data-component="answer"  id="1_3_1_BMI_Q1_opt_d">22</li><li data-component="feedback">No, the computer does not round the result.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/computeNumbers",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.3.2",
                  optional: false,
                  description:
                    "Imagine that you are 5 foot 7 inches and weighed 140 pounds.  What is your BMI?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "1. Chapter 1 - What is this Book About?/1.3 Compute with Numbers",
                data: {
                  id: 11564,
                  base_course: "StudentCSP",
                  name: "1. Chapter 1 - What is this Book About?/1.3 Compute with Numbers",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeNumbers",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "computeWords",
            data: {
              title: "1.4 Compute with Words",
              num: 400,
              chapter: "CSPrinTeasers",
              subchapter: "computeWords",
              id: 11565,
              numQuestions: 4
            },
            children: [
              {
                key: "String_Operators",
                data: {
                  id: 11548,
                  base_course: "StudentCSP",
                  name: "String_Operators",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeWords",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Operators data-question_label="1.4.1">\n<div id=String_Operators_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Operators_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: str1-line1; 2: str1-line2; 3: str1-line3; 4: str1-line4; 5: str1-line5; 6: str1-line6; 7: str1-line7; 8: str1-line8; 9: str1-line9; 10: str1-line10;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nbasic = "Ma"\nprint(basic)\nbasic3 = basic + basic + basic\nprint(basic3)\nnext = "Mow"\nnext3 = next * 3\nprint(next3)\ntogether = (basic * 3) + (next * 2)\nprint(together)\nprint(together + "Mmm" + together)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/computeWords",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Methods",
                data: {
                  id: 11549,
                  base_course: "StudentCSP",
                  name: "String_Methods",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeWords",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Methods data-question_label="1.4.2">\n<div id=String_Methods_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Methods_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: str2-line1; 2: str2-line2; 3: str2-line3; 4: str2-line4; 5: str2-line5;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsentence = "THIS IS A TEST"\nbetter = sentence.lower()\nprint(better)\nbetterStill = better.capitalize() + "."\nprint(betterStill)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/computeWords",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.4.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "1_4_1_String_Methods_Q1",
                data: {
                  id: 11550,
                  base_course: "StudentCSP",
                  name: "1_4_1_String_Methods_Q1",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeWords",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.4.3" data-multipleanswers="false"  id="1_4_1_String_Methods_Q1"  style="visibility: hidden;">\n    <p>What would the following code print?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">first</span> <span class="o">=</span> <span class="s2">&quot;Hi&quot;</span>\n<span class="nb">next</span> <span class="o">=</span> <span class="s2">&quot;There&quot;</span>\n<span class="nb">print</span> <span class="p">((</span><span class="n">first</span> <span class="o">+</span> <span class="nb">next</span><span class="p">)</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="1_4_1_String_Methods_Q1_opt_a">Hi There</li><li data-component="feedback">When you add strings together you copy the second string right after the first, without any added space</li>\n    \n    <li data-component="answer"  id="1_4_1_String_Methods_Q1_opt_b">HiThere</li><li data-component="feedback">Remember that * 2 repeats two copies of the same string</li>\n    \n    <li data-component="answer"  id="1_4_1_String_Methods_Q1_opt_c">Hi There Hi There</li><li data-component="feedback">Adding strings together and repeating them doesn\'t add spaces between the strings</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="1_4_1_String_Methods_Q1_opt_d">HiThereHiThere</li><li data-component="feedback">Strings are added together without adding any space and they are repeated without adding a space</li>\n    \n    <li data-component="answer"  id="1_4_1_String_Methods_Q1_opt_e">HiThere2</li><li data-component="feedback">The * 2 repeats the string two times</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/computeWords",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.4.3",
                  optional: false,
                  description: "What would the following code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "1. Chapter 1 - What is this Book About?/1.4 Compute with Words",
                data: {
                  id: 11565,
                  base_course: "StudentCSP",
                  name: "1. Chapter 1 - What is this Book About?/1.4 Compute with Words",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeWords",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "computeTurtles",
            data: {
              title: "1.5 Compute with Turtles",
              num: 500,
              chapter: "CSPrinTeasers",
              subchapter: "computeTurtles",
              id: 11566,
              numQuestions: 5
            },
            children: [
              {
                key: "Turtle_1",
                data: {
                  id: 11544,
                  base_course: "StudentCSP",
                  name: "Turtle_1",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeTurtles",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_1 data-question_label="1.5.1">\n<div id=Turtle_1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_1_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: first-turtle-line-1; 2: first-turtle-line-2; 3: first-turtle-line-3; 4: first-turtle-line-4; 5: first-turtle-line-5; 6: first-turtle-line-6;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *        # use the turtle library\nspace = Screen()            # create a turtle space\nalex = Turtle()             # create a turtle named alex\nalex.forward(150)           # move forward by 150 units\nalex.left(90)               # turn by 90 degrees\nalex.forward(75)            # move forward by 75 units\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/computeTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.5.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "1_5_1_Turtle_Q1",
                data: {
                  id: 11545,
                  base_course: "StudentCSP",
                  name: "1_5_1_Turtle_Q1",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeTurtles",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.5.2" data-multipleanswers="false"  id="1_5_1_Turtle_Q1"  style="visibility: hidden;">\n    <p>Which direction will alex move when the code below executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>\n<span class="n">space</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>\n<span class="n">alex</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>\n<span class="n">alex</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="1_5_1_Turtle_Q1_opt_a">North</li><li data-component="feedback">Check which way alex moved first</li>\n    \n    <li data-component="answer"  id="1_5_1_Turtle_Q1_opt_b">West</li><li data-component="feedback">Check which way alex moved first</li>\n    \n    <li data-component="answer"  id="1_5_1_Turtle_Q1_opt_c">South</li><li data-component="feedback">Check which way alex moved first</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="1_5_1_Turtle_Q1_opt_d">East</li><li data-component="feedback">Turtles start off facing east by default</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/computeTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.5.2",
                  optional: false,
                  description: "Which direction will alex move when the code below executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "1_5_2_Shape_fill",
                data: {
                  id: 11546,
                  base_course: "StudentCSP",
                  name: "1_5_2_Shape_fill",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeTurtles",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="1.5.3" id="1_5_2_Shape_fill"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What shape will the program below draw when you click on the Run button?</p>\\n<input type=\\"text\\" name=\'\' />", "dyn_vars": null, "blankNames": {}, "feedbackArray": [[{"regex": "^\\\\s*^square$|^Square$|^SQUARE$\\\\s*$", "regexFlags": "", "feedback": "<p>Correct!</p>\\n"}, {"regex": "^\\\\s*.*\\\\s*$", "regexFlags": "", "feedback": "<p>Did you actually run the program?</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/computeTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.5.3",
                  optional: false,
                  description:
                    "What shape will the program below draw when you click on the Run button?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_2",
                data: {
                  id: 11547,
                  base_course: "StudentCSP",
                  name: "Turtle_2",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeTurtles",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_2 data-question_label="1.5.4">\n<div id=Turtle_2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_2_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: t1-line1; 2: t1-line2; 3: t1-line3; 4: t1-line4; 5: t1-line5; 6: t1-line6; 7: t1-for100-1; 8: t1-right90-1; 9: t1-for100-2; 10: t1-right90-2; 11: t1-for100-3; 12: t1-right90-3;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *        # use the turtle library\nspace = Screen()            # create a turtle screen (space)\nzari = Turtle()             # create a turtle named zari\nzari.setheading(90)         # Point due north\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(90)              # turn by 90 degrees\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(90)              # turn by 90 degrees\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(90)              # turn by 90 degrees\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(90)              # turn by 90 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/computeTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.5.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "1. Chapter 1 - What is this Book About?/1.5 Compute with Turtles",
                data: {
                  id: 11566,
                  base_course: "StudentCSP",
                  name: "1. Chapter 1 - What is this Book About?/1.5 Compute with Turtles",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeTurtles",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "computeImages",
            data: {
              title: "1.6 Compute with Images",
              num: 600,
              chapter: "CSPrinTeasers",
              subchapter: "computeImages",
              id: 11567,
              numQuestions: 4
            },
            children: [
              {
                key: "1_6_1_Image_Q1",
                data: {
                  id: 11539,
                  base_course: "StudentCSP",
                  name: "1_6_1_Image_Q1",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeImages",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.6.1" data-multipleanswers="false"  id="1_6_1_Image_Q1"  style="visibility: hidden;">\n    <p>Which way does y increase on an image?</p>\n\n    <li data-component="answer"  id="1_6_1_Image_Q1_opt_a">From left to right</li><li data-component="feedback">The x value increases from left to right</li>\n    \n    <li data-component="answer"  id="1_6_1_Image_Q1_opt_b">From right to left</li><li data-component="feedback">The horizontal direction is the x direction</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="1_6_1_Image_Q1_opt_c">From top to bottom</li><li data-component="feedback">The y value increases from top to bottom</li>\n    \n    <li data-component="answer"  id="1_6_1_Image_Q1_opt_d">From bottom to top</li><li data-component="feedback">This is common on a Cartesian coordinate system, but it is not true here</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/computeImages",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.6.1",
                  optional: false,
                  description: "Which way does y increase on an image?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Images_1",
                data: {
                  id: 11540,
                  base_course: "StudentCSP",
                  name: "Images_1",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeImages",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Images_1 data-question_label="1.6.2">\n<div id=Images_1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Images_1_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important Lines Tour*doubleq*; 3,6,10,14: timg1-line361014; 4: timg1-line4; 7: timg1-line7; 8: timg1-line8; 11: timg1-line11; 12: timg1-line12; 15-16: timg1-line15-16;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("arch.jpg")\n\n# LOOP THROUGH ALL THE PIXELS\npixels = img.getPixels()\nfor p in pixels:\n\n    # CLEAR THE RED\n    p.setRed(0)\n    img.updatePixel(p)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/computeImages",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.6.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "1_6_2_Image_Black",
                data: {
                  id: 11541,
                  base_course: "StudentCSP",
                  name: "1_6_2_Image_Black",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeImages",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="1.6.3" data-multipleanswers="false"  id="1_6_2_Image_Black"  style="visibility: hidden;">\n    <p>What do you think happens when you set all the colors to 0?  Try adding <code class="docutils literal notranslate"><span class="pre">p.setBlue(0)</span></code> and <code class="docutils literal notranslate"><span class="pre">p.setGreen(0)</span></code> to the program above after the <code class="docutils literal notranslate"><span class="pre">p.setRed(0)</span></code> and run it to check.</p>\n\n    <li data-component="answer"  id="1_6_2_Image_Black_opt_a">You still see the picture, but it is all in shades of gray.</li><li data-component="feedback">Not if you set all the color values to 0.</li>\n    \n    <li data-component="answer"  id="1_6_2_Image_Black_opt_b">The picture is all white.</li><li data-component="feedback">Did you try it?  This would be true if you set all the values to 255 instead of 0.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="1_6_2_Image_Black_opt_c">The picture is all black.</li><li data-component="feedback">Black is the absence of light so setting all colors to 0 results in an all black image since there is no light.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPrinTeasers/computeImages",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "1.6.3",
                  optional: false,
                  description:
                    "What do you think happens when you set all the colors to 0?  Try adding ``p.setB",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "1. Chapter 1 - What is this Book About?/1.6 Compute with Images",
                data: {
                  id: 11567,
                  base_course: "StudentCSP",
                  name: "1. Chapter 1 - What is this Book About?/1.6 Compute with Images",
                  chapter: "CSPrinTeasers",
                  subchapter: "computeImages",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "standards",
            data: {
              title: "1.7 Standards - Big Ideas",
              num: 700,
              chapter: "CSPrinTeasers",
              subchapter: "standards",
              id: 11568,
              numQuestions: 1
            },
            children: [
              {
                key: "1. Chapter 1 - What is this Book About?/1.7 Standards - Big Ideas",
                data: {
                  id: 11568,
                  base_course: "StudentCSP",
                  name: "1. Chapter 1 - What is this Book About?/1.7 Standards - Big Ideas",
                  chapter: "CSPrinTeasers",
                  subchapter: "standards",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "ch1_summary",
            data: {
              title: "1.8 Chapter 1 - Concept Summary",
              num: 800,
              chapter: "CSPrinTeasers",
              subchapter: "ch1_summary",
              id: 11569,
              numQuestions: 1
            },
            children: [
              {
                key: "1. Chapter 1 - What is this Book About?/1.8 Chapter 1 - Concept Summary",
                data: {
                  id: 11569,
                  base_course: "StudentCSP",
                  name: "1. Chapter 1 - What is this Book About?/1.8 Chapter 1 - Concept Summary",
                  chapter: "CSPrinTeasers",
                  subchapter: "ch1_summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "1.9 Chapter 1 Exercises",
              num: 900,
              chapter: "CSPrinTeasers",
              subchapter: "Exercises",
              id: 30293,
              numQuestions: 1
            },
            children: [
              {
                key: "1. Chapter 1 - What is this Book About?/1.9 Chapter 1 Exercises",
                data: {
                  id: 30293,
                  base_course: "StudentCSP",
                  name: "1. Chapter 1 - What is this Book About?/1.9 Chapter 1 Exercises",
                  chapter: "CSPrinTeasers",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPTuring",
        data: {
          title: "2. Chapter 2 - What can Computers Do?",
          num: 2
        },
        children: [
          {
            key: "whatIsComputer",
            data: {
              title: "2.1 What is a Computer?",
              num: 100,
              chapter: "CSPTuring",
              subchapter: "whatIsComputer",
              id: 11570,
              numQuestions: 1
            },
            children: [
              {
                key: "2. Chapter 2 - What can Computers Do?/2.1 What is a Computer?",
                data: {
                  id: 11570,
                  base_course: "StudentCSP",
                  name: "2. Chapter 2 - What can Computers Do?/2.1 What is a Computer?",
                  chapter: "CSPTuring",
                  subchapter: "whatIsComputer",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "turingMachines",
            data: {
              title: "2.2 Turing Machines",
              num: 200,
              chapter: "CSPTuring",
              subchapter: "turingMachines",
              id: 11571,
              numQuestions: 3
            },
            children: [
              {
                key: "2_2_1_Turing_Q1",
                data: {
                  id: 11410,
                  base_course: "StudentCSP",
                  name: "2_2_1_Turing_Q1",
                  chapter: "CSPTuring",
                  subchapter: "turingMachines",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="2.2.1" data-multipleanswers="false"  id="2_2_1_Turing_Q1"  style="visibility: hidden;">\n    <p>Use the following link to learn more about <a class="reference external" href="http://en.wikipedia.org/wiki/Alan_Turing">Alan Turing</a>.  Which of the following is <strong>false</strong> about him?</p>\n\n    <li data-component="answer"  id="2_2_1_Turing_Q1_opt_a">He occasionally ran 40 miles to London for meetings.</li><li data-component="feedback">This is true.  He was a talented runner and even tried out for the olympics.</li>\n    \n    <li data-component="answer"  id="2_2_1_Turing_Q1_opt_b">He proposed the Turing Test to decide if a computer was intelligent.</li><li data-component="feedback">This is true.  He said that if a computer could fool a person into thinking it was a person, that that computer was intelligent.</li>\n    \n    <li data-component="answer"  id="2_2_1_Turing_Q1_opt_c">He worked on breaking Enigma ciphers in World War II.</li><li data-component="feedback">This is true.  Winston Churchill said that Alan Turing made the single biggest contribution to winning World War II.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="2_2_1_Turing_Q1_opt_d">He went to school in Oxford, England.</li><li data-component="feedback">This is false.  He attended King\'s College at Cambridge and Princeton University.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTuring/turingMachines",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "2.2.1",
                  optional: false,
                  description:
                    "Use the following link to learn more about `Alan Turing <http://en.wikipedia.org",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "2_2_2_Computers_Q1",
                data: {
                  id: 11411,
                  base_course: "StudentCSP",
                  name: "2_2_2_Computers_Q1",
                  chapter: "CSPTuring",
                  subchapter: "turingMachines",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="2.2.2" data-multipleanswers="false"  id="2_2_2_Computers_Q1"  style="visibility: hidden;">\n    <p>Which of the following is <strong>false</strong> about computers?</p>\n\n    <li data-component="answer"  id="2_2_2_Computers_Q1_opt_a">There were female computers.</li><li data-component="feedback">This is true.  Look for information on the Harvard Computers and Secret Rosies.</li>\n    \n    <li data-component="answer"  id="2_2_2_Computers_Q1_opt_b">You can make a computer with Tinkertoys.</li><li data-component="feedback">This is true.  Some students at MIT did this in the 1980s.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="2_2_2_Computers_Q1_opt_c">Computers can solve any problem.</li><li data-component="feedback">This is false.  Turing provide that there are problems computers cannot solve.</li>\n    \n    <li data-component="answer"  id="2_2_2_Computers_Q1_opt_d">Computers use sequences of voltages on wires to represent numbers.</li><li data-component="feedback">This is true.  Computers use patterns of on and off voltages to represent numbers.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTuring/turingMachines",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "2.2.2",
                  optional: false,
                  description: "Which of the following is **false** about computers?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "2. Chapter 2 - What can Computers Do?/2.2 Turing Machines",
                data: {
                  id: 11571,
                  base_course: "StudentCSP",
                  name: "2. Chapter 2 - What can Computers Do?/2.2 Turing Machines",
                  chapter: "CSPTuring",
                  subchapter: "turingMachines",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "itsallbits",
            data: {
              title: "2.3 It’s All Bits",
              num: 300,
              chapter: "CSPTuring",
              subchapter: "itsallbits",
              id: 31832,
              numQuestions: 5
            },
            children: [
              {
                key: "2_3_1_itsallbits_Q1",
                data: {
                  id: 31828,
                  base_course: "StudentCSP",
                  name: "2_3_1_itsallbits_Q1",
                  chapter: "CSPTuring",
                  subchapter: "itsallbits",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="2.3.1.1" id="2_3_1_itsallbits_Q1"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What is the 8-bit binary code for number 12? Use the above Binary Calculator. <input type=\\"text\\" name=\'x\' /></p>\\n", "dyn_vars": null, "blankNames": {"x": 0}, "feedbackArray": [[{"regex": "^\\\\s*00001100\\\\s*$", "regexFlags": "", "feedback": "<p>Correct!</p>\\n"}, {"regex": "^\\\\s*x\\\\s*$", "regexFlags": "", "feedback": "<p>Try again!</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTuring/itsallbits",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "2.3.1.1",
                  optional: false,
                  description:
                    "What is the 8-bit binary code for number 12? Use the above Binary Calculator. |b",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "2_3_2_itsallbits_Q2",
                data: {
                  id: 31829,
                  base_course: "StudentCSP",
                  name: "2_3_2_itsallbits_Q2",
                  chapter: "CSPTuring",
                  subchapter: "itsallbits",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="2.3.1.2" id="2_3_2_itsallbits_Q2"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What is the maximum decimal value that can be expressed with 8 bits? Use the above Binary Calculator to find out! <input type=\\"text\\" name=\'x\' /></p>\\n", "dyn_vars": null, "blankNames": {"x": 0}, "feedbackArray": [[{"number": [255, 255], "feedback": "<p>Correct!</p>\\n"}, {"regex": "^\\\\s*x\\\\s*$", "regexFlags": "", "feedback": "<p>Try again!</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTuring/itsallbits",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "2.3.1.2",
                  optional: false,
                  description:
                    "What is the maximum decimal value that can be expressed with 8 bits? Use the abo",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "2_3_3_itsallbits_Q3",
                data: {
                  id: 31830,
                  base_course: "StudentCSP",
                  name: "2_3_3_itsallbits_Q3",
                  chapter: "CSPTuring",
                  subchapter: "itsallbits",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="2.3.2.1" id="2_3_3_itsallbits_Q3"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What is the 8-bit binary code for the upper-case B? Use the above ASCII table. <input type=\\"text\\" name=\'x\' /></p>\\n", "dyn_vars": null, "blankNames": {"x": 0}, "feedbackArray": [[{"regex": "^\\\\s*01000010\\\\s*$", "regexFlags": "", "feedback": "<p>Correct!</p>\\n"}, {"regex": "^\\\\s*x\\\\s*$", "regexFlags": "", "feedback": "<p>Try again!</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTuring/itsallbits",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "2.3.2.1",
                  optional: false,
                  description:
                    "What is the 8-bit binary code for the upper-case B? Use the above ASCII table. |",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "2_3_4_itsallbits_Q4",
                data: {
                  id: 31831,
                  base_course: "StudentCSP",
                  name: "2_3_4_itsallbits_Q4",
                  chapter: "CSPTuring",
                  subchapter: "itsallbits",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="2.3.2.2" id="2_3_4_itsallbits_Q4"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What two-letter word does the following sequence of bits represent? Use the above ASCII table. 01110100 01101111 <input type=\\"text\\" name=\'x\' /></p>\\n", "dyn_vars": null, "blankNames": {"x": 0}, "feedbackArray": [[{"regex": "^\\\\s*to\\\\s*$", "regexFlags": "", "feedback": "<p>Correct!</p>\\n"}, {"regex": "^\\\\s*x\\\\s*$", "regexFlags": "", "feedback": "<p>Try again!</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTuring/itsallbits",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "2.3.2.2",
                  optional: false,
                  description:
                    "What two-letter word does the following sequence of bits represent? Use the abov",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "2. Chapter 2 - What can Computers Do?/2.3 It’s All Bits",
                data: {
                  id: 31832,
                  base_course: "StudentCSP",
                  name: "2. Chapter 2 - What can Computers Do?/2.3 It’s All Bits",
                  chapter: "CSPTuring",
                  subchapter: "itsallbits",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "abilities",
            data: {
              title: "2.4 Computer Abilities",
              num: 400,
              chapter: "CSPTuring",
              subchapter: "abilities",
              id: 11572,
              numQuestions: 1
            },
            children: [
              {
                key: "2. Chapter 2 - What can Computers Do?/2.4 Computer Abilities",
                data: {
                  id: 11572,
                  base_course: "StudentCSP",
                  name: "2. Chapter 2 - What can Computers Do?/2.4 Computer Abilities",
                  chapter: "CSPTuring",
                  subchapter: "abilities",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "2.5 Chapter 2 - Concept Summary",
              num: 500,
              chapter: "CSPTuring",
              subchapter: "summary",
              id: 11573,
              numQuestions: 1
            },
            children: [
              {
                key: "2. Chapter 2 - What can Computers Do?/2.5 Chapter 2 - Concept Summary",
                data: {
                  id: 11573,
                  base_course: "StudentCSP",
                  name: "2. Chapter 2 - What can Computers Do?/2.5 Chapter 2 - Concept Summary",
                  chapter: "CSPTuring",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "2.6 Exam Questions for Chapters 1 and 2",
              num: 600,
              chapter: "CSPTuring",
              subchapter: "Exercises",
              id: 11574,
              numQuestions: 6
            },
            children: [
              {
                key: "e1a2_1",
                data: {
                  id: 11405,
                  base_course: "StudentCSP",
                  name: "e1a2_1",
                  chapter: "CSPTuring",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="2.6.2" data-multipleanswers="false"  id="e1a2_1"  style="visibility: hidden;">\n    <p>What is the value of var3 after the following code executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">var1</span> <span class="o">=</span> <span class="s2">&quot;cat&quot;</span>\n<span class="n">var2</span> <span class="o">=</span> <span class="s2">&quot;dog&quot;</span>\n<span class="n">var3</span> <span class="o">=</span> <span class="s2">&quot;bird&quot;</span>\n<span class="n">var1</span> <span class="o">=</span> <span class="n">var2</span>\n<span class="n">var3</span> <span class="o">=</span> <span class="n">var1</span>\n<span class="n">var2</span> <span class="o">=</span> <span class="s2">&quot;fish&quot;</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="e1a2_1_opt_a">dog</li><li data-component="feedback">The value of var3 is first set to "bird" but then changed to be the value of var1.  The value of var1 is first set to "cat" but later changed to the value of var2 which was set to "dog".</li>\n    \n    <li data-component="answer"  id="e1a2_1_opt_b">fish</li><li data-component="feedback">Only var2 has the value of fish.  When you assign the value of a variable to the value of another variable the value is copied to the new variable.  No relationship is created between the two variables.</li>\n    \n    <li data-component="answer"  id="e1a2_1_opt_c">cat</li><li data-component="feedback">The value of var3 is first set to "bird" but then changed to be the value of var1.  However, the value of var1 also is changed after it is originally set.</li>\n    \n    <li data-component="answer"  id="e1a2_1_opt_d">bird</li><li data-component="feedback">While var3 is originally set to "bird" the value is changed later.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTuring/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "2.6.2",
                  optional: false,
                  description: "What is the value of var3 after the following code executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e1a2_2",
                data: {
                  id: 11406,
                  base_course: "StudentCSP",
                  name: "e1a2_2",
                  chapter: "CSPTuring",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="2.6.3" data-multipleanswers="false"  id="e1a2_2"  style="visibility: hidden;">\n    <p>A named space that can hold a value is which of the following?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e1a2_2_opt_a">variable</li><li data-component="feedback">A variable is a name associated with space (computer memory) that holds a value.  That value can change or vary.</li>\n    \n    <li data-component="answer"  id="e1a2_2_opt_b">turtle</li><li data-component="feedback">A turtle is an object that can move forward and turn.  As it moves it can draw with a pen.</li>\n    \n    <li data-component="answer"  id="e1a2_2_opt_c">string</li><li data-component="feedback">A string is a sequence of characters.</li>\n    \n    <li data-component="answer"  id="e1a2_2_opt_d">program</li><li data-component="feedback">A program is a set of instructions that a computer can execute.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTuring/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "2.6.3",
                  optional: false,
                  description: "A named space that can hold a value is which of the following?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e1a2_3",
                data: {
                  id: 11407,
                  base_course: "StudentCSP",
                  name: "e1a2_3",
                  chapter: "CSPTuring",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="2.6.4" data-multipleanswers="false"  id="e1a2_3"  style="visibility: hidden;">\n    <p>The kind of data that can be letters, digits, and other characters inside a pair of single or double quotes is which of the following?</p>\n\n    <li data-component="answer"  id="e1a2_3_opt_a">integer</li><li data-component="feedback">An integer is a positive or negative whole number like -30 or 23028.</li>\n    \n    <li data-component="answer"  id="e1a2_3_opt_b">turtle</li><li data-component="feedback">A turtle is an object that can move forward and turn.  As it moves it can draw with a pen.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e1a2_3_opt_c">string</li><li data-component="feedback">A string is a sequence of characters.</li>\n    \n    <li data-component="answer"  id="e1a2_3_opt_d">image</li><li data-component="feedback">An image is a representation of a digital picture and you can get and change the color values at pixels in the image.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTuring/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "2.6.4",
                  optional: false,
                  description:
                    "The kind of data that can be letters, digits, and other characters inside a pair",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e1a2_4",
                data: {
                  id: 11408,
                  base_course: "StudentCSP",
                  name: "e1a2_4",
                  chapter: "CSPTuring",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="2.6.5" data-multipleanswers="false"  id="e1a2_4"  style="visibility: hidden;">\n    <p>What is the value of var2 after the following code executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">var1</span> <span class="o">=</span> <span class="mi">3</span>\n<span class="n">var2</span> <span class="o">=</span> <span class="mi">2</span>\n<span class="n">var3</span> <span class="o">=</span> <span class="mi">5</span>\n<span class="n">var1</span> <span class="o">=</span> <span class="n">var2</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e1a2_4_opt_a">3</li><li data-component="feedback">That is the original value of var1.  What is the value of var2?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e1a2_4_opt_b">2</li><li data-component="feedback">When var1 is assigned to have the same value as var2 the value from var2 is copied and not changed.</li>\n    \n    <li data-component="answer"  id="e1a2_4_opt_c">5</li><li data-component="feedback">That is the original value of var3.  What is the value of var2?</li>\n    \n    <li data-component="answer"  id="e1a2_4_opt_d">0</li><li data-component="feedback">When one variable (var1) is set to the value of another (var2) it copies the value from the other (var2).  It does\'t change the value in the other (var2).</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTuring/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "2.6.5",
                  optional: false,
                  description: "What is the value of var2 after the following code executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e1a2_5",
                data: {
                  id: 11409,
                  base_course: "StudentCSP",
                  name: "e1a2_5",
                  chapter: "CSPTuring",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="2.6.6" data-multipleanswers="false"  id="e1a2_5"  style="visibility: hidden;">\n    <p>What shape would the following code draw?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>        <span class="c1"># use the turtle library</span>\n<span class="n">space</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>            <span class="c1"># create a turtle screen (space)</span>\n<span class="n">zari</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>             <span class="c1"># create a turtle named zari</span>\n<span class="n">zari</span><span class="o">.</span><span class="n">setheading</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n<span class="n">zari</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>           <span class="c1"># tell zari to move forward by 100 units</span>\n<span class="n">zari</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>              <span class="c1"># turn by 90 degrees</span>\n<span class="n">zari</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>           <span class="c1"># tell zari to move forward by 50 units</span>\n<span class="n">zari</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>              <span class="c1"># turn by 90 degrees</span>\n<span class="n">zari</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>           <span class="c1"># tell zari to move forward by 100 units</span>\n<span class="n">zari</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>              <span class="c1"># turn by 90 degrees</span>\n<span class="n">zari</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>           <span class="c1"># tell zari to move forward by 50 units</span>\n<span class="n">zari</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>              <span class="c1"># turn by 90 degrees</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e1a2_5_opt_a">A square</li><li data-component="feedback">This would be true if all the forward amounts were the same.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e1a2_5_opt_b">A rectangle that is taller than it is wide</li><li data-component="feedback">Zari\'s heading is set to 90 which turns her to point due north.  So, the rectangle is taller than it is high.</li>\n    \n    <li data-component="answer"  id="e1a2_5_opt_c">A diamond</li><li data-component="feedback">This would be true if all the forward amounts were the same and the heading was 45 to start.</li>\n    \n    <li data-component="answer"  id="e1a2_5_opt_d">A rectangle that is wider than it is tall</li><li data-component="feedback">Turtles start off facing east and setting the heading to 90 turns it to face north.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTuring/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "2.6.6",
                  optional: false,
                  description: "What shape would the following code draw?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "2. Chapter 2 - What can Computers Do?/2.6 Exam Questions for Chapters 1 and 2",
                data: {
                  id: 11574,
                  base_course: "StudentCSP",
                  name: "2. Chapter 2 - What can Computers Do?/2.6 Exam Questions for Chapters 1 and 2",
                  chapter: "CSPTuring",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPNameNumbers",
        data: {
          title: "3. Chapter 3 - Names for Numbers",
          num: 3
        },
        children: [
          {
            key: "assignName",
            data: {
              title: "3.1 Assigning a Name",
              num: 100,
              chapter: "CSPNameNumbers",
              subchapter: "assignName",
              id: 11575,
              numQuestions: 4
            },
            children: [
              {
                key: "3_1_1_varNames_Q1",
                data: {
                  id: 10933,
                  base_course: "StudentCSP",
                  name: "3_1_1_varNames_Q1",
                  chapter: "CSPNameNumbers",
                  subchapter: "assignName",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.1.1.1" data-multipleanswers="false"  id="3_1_1_varNames_Q1"  style="visibility: hidden;">\n    <p>Which of the following is <em>not</em> a legal variable name?</p>\n\n    <li data-component="answer"  id="3_1_1_varNames_Q1_opt_a">_a1</li><li data-component="feedback">You can use an underscore as the first character in a variable name</li>\n    \n    <li data-component="answer"  id="3_1_1_varNames_Q1_opt_b">my_name</li><li data-component="feedback">You can use an underscore between words in a variable name.</li>\n    \n    <li data-component="answer"  id="3_1_1_varNames_Q1_opt_c">amountOfStuff</li><li data-component="feedback">You can use both uppercase and lowercase letters in a variable name.</li>\n    \n    <li data-component="answer"  id="3_1_1_varNames_Q1_opt_d">BMP</li><li data-component="feedback">You can use only uppercase letters in a variable name.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="3_1_1_varNames_Q1_opt_e">1A</li><li data-component="feedback">You can\'t use a digit as the first letter in a variable name.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/assignName",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.1.1.1",
                  optional: false,
                  description: "Which of the following is *not* a legal variable name?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_1_2_varNames_Q2",
                data: {
                  id: 10934,
                  base_course: "StudentCSP",
                  name: "3_1_2_varNames_Q2",
                  chapter: "CSPNameNumbers",
                  subchapter: "assignName",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.1.1.2" data-multipleanswers="false"  id="3_1_2_varNames_Q2"  style="visibility: hidden;">\n    <p>Which of the following is <em>not</em> a legal variable name?</p>\n\n    <li data-component="answer"  id="3_1_2_varNames_Q2_opt_a">_my_name</li><li data-component="feedback">This is legal, but you don\'t usually start a variable name with an underscore.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="3_1_2_varNames_Q2_opt_b">my name</li><li data-component="feedback">You can\'t have a space in a variable name.</li>\n    \n    <li data-component="answer"  id="3_1_2_varNames_Q2_opt_c">myname</li><li data-component="feedback">This may be hard to read, but it is legal.</li>\n    \n    <li data-component="answer"  id="3_1_2_varNames_Q2_opt_d">myName</li><li data-component="feedback">Since you can\'t have spaces in names, one way to make variable names easier to read is to use camel case (uppercase the first letter of each new word).</li>\n    \n    <li data-component="answer"  id="3_1_2_varNames_Q2_opt_e">my_name</li><li data-component="feedback">Since you can\'t have spaces in names, one way to make variable names easier to read is to use an underscore between two words.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/assignName",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.1.1.2",
                  optional: false,
                  description: "Which of the following is *not* a legal variable name?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3. Chapter 3 - Names for Numbers/3.1 Assigning a Name",
                data: {
                  id: 11575,
                  base_course: "StudentCSP",
                  name: "3. Chapter 3 - Names for Numbers/3.1 Assigning a Name",
                  chapter: "CSPNameNumbers",
                  subchapter: "assignName",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "tULT-Nqunlc",
                data: {
                  id: 23165,
                  base_course: "StudentCSP",
                  name: "tULT-Nqunlc",
                  chapter: "CSPNameNumbers",
                  subchapter: "assignName",
                  author: "bmiller",
                  question_type: "youtube",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone " style="margin-left: auto; margin-right:auto">\n        <div id="tULT-Nqunlc" data-component="youtube" class="align-center youtube-video"\n            data-video-height="480" data-question_label="3.1.1"\n            data-video-width="640" data-video-videoid="tULT-Nqunlc"\n            data-video-divid="tULT-Nqunlc" data-video-start="0"\n            data-video-end="-1" ></div>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/assignName",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.1.1",
                  optional: false,
                  description: "",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "expression",
            data: {
              title: "3.2 Expressions",
              num: 200,
              chapter: "CSPNameNumbers",
              subchapter: "expression",
              id: 11576,
              numQuestions: 7
            },
            children: [
              {
                key: "3_2_1_Mult_fill",
                data: {
                  id: 10960,
                  base_course: "StudentCSP",
                  name: "3_2_1_Mult_fill",
                  chapter: "CSPNameNumbers",
                  subchapter: "expression",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="3.2.1" id="3_2_1_Mult_fill"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What will be printed when you click on the Run button in the code below?</p>\\n<input type=\\"text\\" name=\'\' />", "dyn_vars": null, "blankNames": {}, "feedbackArray": [[{"regex": "^\\\\s*^4$\\\\s*$", "regexFlags": "", "feedback": "<p>Correct. 2 times 2 = 4</p>\\n"}, {"regex": "^\\\\s*.*\\\\s*$", "regexFlags": "", "feedback": "<p>Did you actually run the program?</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/expression",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.2.1",
                  optional: false,
                  description:
                    "What will be printed when you click on the Run button in the code below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Expression_Mult",
                data: {
                  id: 10961,
                  base_course: "StudentCSP",
                  name: "Expression_Mult",
                  chapter: "CSPNameNumbers",
                  subchapter: "expression",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Expression_Mult data-question_label="3.2.2">\n<div id=Expression_Mult_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Expression_Mult_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: ex1-line1; 2: ex1-line2;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nresult = 2 * 2\nprint(result)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/expression",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.2.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_2_2_Div_fill",
                data: {
                  id: 10962,
                  base_course: "StudentCSP",
                  name: "3_2_2_Div_fill",
                  chapter: "CSPNameNumbers",
                  subchapter: "expression",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="3.2.1.1" id="3_2_2_Div_fill"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What will be printed when you click on the Run button in the code below?</p>\\n<input type=\\"text\\" name=\'\' />", "dyn_vars": null, "blankNames": {}, "feedbackArray": [[{"regex": "^\\\\s*^0.333333333333$\\\\s*$", "regexFlags": "", "feedback": "<p>Correct!  The computer can only store a certain number of digits for a fractional amount that repeats.</p>\\n"}, {"regex": "^\\\\s*.*\\\\s*$", "regexFlags": "", "feedback": "<p>Did you actually run the program?</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/expression",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.2.1.1",
                  optional: false,
                  description:
                    "What will be printed when you click on the Run button in the code below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Expression_Div",
                data: {
                  id: 10963,
                  base_course: "StudentCSP",
                  name: "Expression_Div",
                  chapter: "CSPNameNumbers",
                  subchapter: "expression",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Expression_Div data-question_label="3.2.1.2">\n<div id=Expression_Div_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Expression_Div_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: ex2-line1; 2: ex1-line2;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nresult = 1 / 3\nprint(result)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/expression",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.2.1.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_2_3_Mod_fill",
                data: {
                  id: 10964,
                  base_course: "StudentCSP",
                  name: "3_2_3_Mod_fill",
                  chapter: "CSPNameNumbers",
                  subchapter: "expression",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="3.2.2.1" id="3_2_3_Mod_fill"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What will be printed when you click on the Run button in the code below?</p>\\n<input type=\\"text\\" name=\'\' />", "dyn_vars": null, "blankNames": {}, "feedbackArray": [[{"regex": "^\\\\s*^0$\\\\s*$", "regexFlags": "", "feedback": "<p>Correct!  The 4 is evenly divisible by 2 with no remainder.</p>\\n"}, {"regex": "^\\\\s*.*\\\\s*$", "regexFlags": "", "feedback": "<p>Did you actually run the program?</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/expression",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.2.2.1",
                  optional: false,
                  description:
                    "What will be printed when you click on the Run button in the code below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Expression_Mod",
                data: {
                  id: 10965,
                  base_course: "StudentCSP",
                  name: "Expression_Mod",
                  chapter: "CSPNameNumbers",
                  subchapter: "expression",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Expression_Mod data-question_label="3.2.2.2">\n<div id=Expression_Mod_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Expression_Mod_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: ex3-line1; 2: ex1-line2;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nresult = 4 % 2\nprint(result)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/expression",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.2.2.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3. Chapter 3 - Names for Numbers/3.2 Expressions",
                data: {
                  id: 11576,
                  base_course: "StudentCSP",
                  name: "3. Chapter 3 - Names for Numbers/3.2 Expressions",
                  chapter: "CSPNameNumbers",
                  subchapter: "expression",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "expressionTable",
            data: {
              title: "3.3 Summary of Expression Types",
              num: 300,
              chapter: "CSPNameNumbers",
              subchapter: "expressionTable",
              id: 11577,
              numQuestions: 4
            },
            children: [
              {
                key: "3_3_1_intDiv_Q1",
                data: {
                  id: 10966,
                  base_course: "StudentCSP",
                  name: "3_3_1_intDiv_Q1",
                  chapter: "CSPNameNumbers",
                  subchapter: "expressionTable",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.3.1" data-multipleanswers="false"  id="3_3_1_intDiv_Q1"  style="visibility: hidden;">\n    <p>What is the result of <code class="docutils literal notranslate"><span class="pre">3</span> <span class="pre">/</span> <span class="pre">4</span></code>?</p>\n\n    <li data-component="answer"  id="3_3_1_intDiv_Q1_opt_a">0</li><li data-component="feedback">If the two values are both integers (whole numbers) you will normally get an integer (whole number) result in older Python environments.  But, this book is using Python 3 so you get a decimal result.</li>\n    \n    <li data-component="answer"  id="3_3_1_intDiv_Q1_opt_b">1</li><li data-component="feedback">This would be correct if the result was rounded up before the values after the decimal point were thrown away, but it does not do this.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="3_3_1_intDiv_Q1_opt_c">0.75</li><li data-component="feedback">While this isn\'t the what older Pyton development environments would return, in this book we are using Python 3 so it returns a decimal result.</li>\n    \n    <li data-component="answer"  id="3_3_1_intDiv_Q1_opt_d">0.25</li><li data-component="feedback">This would be correct if it was <code>1 / 4</code>, <code>1.0 / 4</code>, or <code>1 / 4.0</code></li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/expressionTable",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.3.1",
                  optional: false,
                  description: "What is the result of ``3 / 4``?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_3_2_mod_Q1",
                data: {
                  id: 10967,
                  base_course: "StudentCSP",
                  name: "3_3_2_mod_Q1",
                  chapter: "CSPNameNumbers",
                  subchapter: "expressionTable",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.3.2" data-multipleanswers="false"  id="3_3_2_mod_Q1"  style="visibility: hidden;">\n    <p>What is the result of <code class="docutils literal notranslate"><span class="pre">18</span> <span class="pre">%</span> <span class="pre">5</span></code>?</p>\n\n    <li data-component="answer"  id="3_3_2_mod_Q1_opt_a">0</li><li data-component="feedback">This would be correct if it was <code>18 % 2</code>, but what is the remainder of 18 divided by 5?</li>\n    \n    <li data-component="answer"  id="3_3_2_mod_Q1_opt_b">1</li><li data-component="feedback">This would be correct if it was <code>18 % 17</code>, since 17 goes into 18 one time and the remainder is 18 - 17 = 1.</li>\n    \n    <li data-component="answer"  id="3_3_2_mod_Q1_opt_c">2</li><li data-component="feedback">What is the highest multiple of 5 that is less than or equal to 18? The remainder is 18 - that number.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="3_3_2_mod_Q1_opt_d">3</li><li data-component="feedback">The reminder is 3 since 5 goes into 18 three times (15) and 18 - 15 = 3.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/expressionTable",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.3.2",
                  optional: false,
                  description: "What is the result of ``18 % 5``?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_3_3_mod_Q2",
                data: {
                  id: 10968,
                  base_course: "StudentCSP",
                  name: "3_3_3_mod_Q2",
                  chapter: "CSPNameNumbers",
                  subchapter: "expressionTable",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.3.3" data-multipleanswers="false"  id="3_3_3_mod_Q2"  style="visibility: hidden;">\n    <p>What is the result of <code class="docutils literal notranslate"><span class="pre">2</span> <span class="pre">%</span> <span class="pre">6</span></code>?</p>\n\n    <li data-component="answer"  id="3_3_3_mod_Q2_opt_a">0</li><li data-component="feedback">This would be correct if it was <code>6 % 2</code>.</li>\n    \n    <li data-component="answer"  id="3_3_3_mod_Q2_opt_b">1</li><li data-component="feedback">This would be correct if it was some odd number divided by 2, but it is not.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="3_3_3_mod_Q2_opt_c">2</li><li data-component="feedback">6 goes into 2 zero times with 2 left over.</li>\n    \n    <li data-component="answer"  id="3_3_3_mod_Q2_opt_d">6</li><li data-component="feedback">If you have a smaller number divided by a larger number the remainder is always the smaller number.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/expressionTable",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.3.3",
                  optional: false,
                  description: "What is the result of ``2 % 6``?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3. Chapter 3 - Names for Numbers/3.3 Summary of Expression Types",
                data: {
                  id: 11577,
                  base_course: "StudentCSP",
                  name: "3. Chapter 3 - Names for Numbers/3.3 Summary of Expression Types",
                  chapter: "CSPNameNumbers",
                  subchapter: "expressionTable",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "orderOfOperations",
            data: {
              title: "3.4 How Expressions are Evaluated",
              num: 400,
              chapter: "CSPNameNumbers",
              subchapter: "orderOfOperations",
              id: 11578,
              numQuestions: 5
            },
            children: [
              {
                key: "3_4_1_Order1_fill",
                data: {
                  id: 10980,
                  base_course: "StudentCSP",
                  name: "3_4_1_Order1_fill",
                  chapter: "CSPNameNumbers",
                  subchapter: "orderOfOperations",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="3.4.1" id="3_4_1_Order1_fill"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What is printed when you click on the Run button in the code below?</p>\\n<input type=\\"text\\" name=\'\' />", "dyn_vars": null, "blankNames": {}, "feedbackArray": [[{"regex": "^\\\\s*^-2$\\\\s*$", "regexFlags": "", "feedback": "<p>Correct!</p>\\n"}, {"regex": "^\\\\s*.*\\\\s*$", "regexFlags": "", "feedback": "<p>Did you actually run the program?</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/orderOfOperations",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.4.1",
                  optional: false,
                  description:
                    "What is printed when you click on the Run button in the code below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Expression_Order1",
                data: {
                  id: 10981,
                  base_course: "StudentCSP",
                  name: "Expression_Order1",
                  chapter: "CSPNameNumbers",
                  subchapter: "orderOfOperations",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Expression_Order1 data-question_label="3.4.2">\n<div id=Expression_Order1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Expression_Order1_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nresult = 4 + -2 * 3\nprint(result)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/orderOfOperations",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.4.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_4_2_Order2_fill",
                data: {
                  id: 10982,
                  base_course: "StudentCSP",
                  name: "3_4_2_Order2_fill",
                  chapter: "CSPNameNumbers",
                  subchapter: "orderOfOperations",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="3.4.3" id="3_4_2_Order2_fill"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What is printed when you click on the Run button in the code below?</p>\\n<input type=\\"text\\" name=\'\' />", "dyn_vars": null, "blankNames": {}, "feedbackArray": [[{"regex": "^\\\\s*^6$\\\\s*$", "regexFlags": "", "feedback": "<p>Correct!</p>\\n"}, {"regex": "^\\\\s*.*\\\\s*$", "regexFlags": "", "feedback": "<p>Did you actually run the program</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/orderOfOperations",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.4.3",
                  optional: false,
                  description:
                    "What is printed when you click on the Run button in the code below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Expression_Order2",
                data: {
                  id: 10983,
                  base_course: "StudentCSP",
                  name: "Expression_Order2",
                  chapter: "CSPNameNumbers",
                  subchapter: "orderOfOperations",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Expression_Order2 data-question_label="3.4.4">\n<div id=Expression_Order2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Expression_Order2_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nresult = (4 + -2) * 3\nprint(result)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/orderOfOperations",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.4.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3. Chapter 3 - Names for Numbers/3.4 How Expressions are Evaluated",
                data: {
                  id: 11578,
                  base_course: "StudentCSP",
                  name: "3. Chapter 3 - Names for Numbers/3.4 How Expressions are Evaluated",
                  chapter: "CSPNameNumbers",
                  subchapter: "orderOfOperations",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "driving",
            data: {
              title: "3.5 Driving from Chicago to Dallas",
              num: 500,
              chapter: "CSPNameNumbers",
              subchapter: "driving",
              id: 11579,
              numQuestions: 6
            },
            children: [
              {
                key: "Chicago_2_Dallas",
                data: {
                  id: 10955,
                  base_course: "StudentCSP",
                  name: "Chicago_2_Dallas",
                  chapter: "CSPNameNumbers",
                  subchapter: "driving",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="3.5.1">\n        <div id=Chicago_2_Dallas_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Chicago_2_Dallas"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 3.5.1 (Chicago_2_Dallas)</span> </p>\n    </div>\n\n<script>\nvar Chicago_2_Dallas_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Chicago_2_Dallas"] = {"code": "distance = 924.7\\nmpg = 35.5\\ngallons = distance / mpg", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"distance": 924.7}, "ordered_globals": ["distance"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"distance": 924.7, "mpg": 35.5}, "ordered_globals": ["distance", "mpg"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "return", "func_name": "<module>", "globals": {"distance": 924.7, "mpg": 35.5, "gallons": 26.0479}, "ordered_globals": ["distance", "mpg", "gallons"], "stack_to_render": [], "heap": {}, "stdout": ""}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/driving",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.5.1",
                  optional: false,
                  description: "distance = 924.7 mpg = 35.5 gallons = distance / mpg",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Chicago_2_Dallas_Cost",
                data: {
                  id: 10956,
                  base_course: "StudentCSP",
                  name: "Chicago_2_Dallas_Cost",
                  chapter: "CSPNameNumbers",
                  subchapter: "driving",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="3.5.2">\n        <div id=Chicago_2_Dallas_Cost_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Chicago_2_Dallas_Cost"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 3.5.2 (Chicago_2_Dallas_Cost)</span> </p>\n    </div>\n\n<script>\nvar Chicago_2_Dallas_Cost_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Chicago_2_Dallas_Cost"] = {"code": "distance = 924.7\\nmpg = 35.5\\ngallons = distance / mpg\\ncostPerGallon = 3.65\\ncostTrip = gallons * costPerGallon", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"distance": 924.7}, "ordered_globals": ["distance"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"distance": 924.7, "mpg": 35.5}, "ordered_globals": ["distance", "mpg"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"distance": 924.7, "mpg": 35.5, "gallons": 26.0479}, "ordered_globals": ["distance", "mpg", "gallons"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"distance": 924.7, "mpg": 35.5, "gallons": 26.0479, "costPerGallon": 3.65}, "ordered_globals": ["distance", "mpg", "gallons", "costPerGallon"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "return", "func_name": "<module>", "globals": {"distance": 924.7, "mpg": 35.5, "gallons": 26.0479, "costPerGallon": 3.65, "costTrip": 95.0748}, "ordered_globals": ["distance", "mpg", "gallons", "costPerGallon", "costTrip"], "stack_to_render": [], "heap": {}, "stdout": ""}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/driving",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.5.2",
                  optional: false,
                  description:
                    "distance = 924.7 mpg = 35.5 gallons = distance / mpg costPerGallon = 3.65 costTr",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Trip_Calculator",
                data: {
                  id: 10957,
                  base_course: "StudentCSP",
                  name: "Trip_Calculator",
                  chapter: "CSPNameNumbers",
                  subchapter: "driving",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Trip_Calculator data-question_label="3.5.3">\n<div id=Trip_Calculator_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Trip_Calculator_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 1: trp-line1; 2: trp-line2; 3: trp-line3; 4: trp-line4; 5: trp-line5; 6: trp-line6; 7: trp-line7;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndistance = 924.7\nmpg = 35.5\ngallons = distance / mpg\ncostPerGallon = 3.65\ncostTrip = gallons * costPerGallon\nprint("Cost to get from Chicago to Dallas")\nprint(costTrip)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/driving",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.5.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_5_1_Chicago_2_Dallas_Q1",
                data: {
                  id: 10958,
                  base_course: "StudentCSP",
                  name: "3_5_1_Chicago_2_Dallas_Q1",
                  chapter: "CSPNameNumbers",
                  subchapter: "driving",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.5.4" data-multipleanswers="false"  id="3_5_1_Chicago_2_Dallas_Q1"  style="visibility: hidden;">\n    <p>If the cost per gallon drops to $3.45, can we drive from Chicago to Dallas for less than $90 in gas?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="3_5_1_Chicago_2_Dallas_Q1_opt_a">Yes</li><li data-component="feedback">Yes, the cost would be $89.86 (which you knew by editing the program above and running it)</li>\n    \n    <li data-component="answer"  id="3_5_1_Chicago_2_Dallas_Q1_opt_b">No</li><li data-component="feedback">Try it -- it\'s just under $90.</li>\n    \n    <li data-component="answer"  id="3_5_1_Chicago_2_Dallas_Q1_opt_c">We should fly instead.</li><li data-component="feedback">You might be right, but figure out the cost by editing the above program</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/driving",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.5.4",
                  optional: false,
                  description:
                    "If the cost per gallon drops to $3.45, can we drive from Chicago to Dallas for l",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_5_2_Chicago_2_Dallas_Q2",
                data: {
                  id: 10959,
                  base_course: "StudentCSP",
                  name: "3_5_2_Chicago_2_Dallas_Q2",
                  chapter: "CSPNameNumbers",
                  subchapter: "driving",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.5.5" data-multipleanswers="false"  id="3_5_2_Chicago_2_Dallas_Q2"  style="visibility: hidden;">\n    <p>What would be printed by <code class="docutils literal notranslate"><span class="pre">print(&quot;costPerGallon&quot;)</span></code> if this line was added to the end of the last program?</p>\n\n    <li data-component="answer"  id="3_5_2_Chicago_2_Dallas_Q2_opt_a">3.45</li><li data-component="feedback">This would be true if it was printing the value of original variable.</li>\n    \n    <li data-component="answer"  id="3_5_2_Chicago_2_Dallas_Q2_opt_b">3.65</li><li data-component="feedback">This would be true if it was printing the value of the variable after you changed it to figure out the previous question.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="3_5_2_Chicago_2_Dallas_Q2_opt_c">costPerGallon</li><li data-component="feedback">Since <code>costPerGallon</code> is in double quotes it is a string, and it will print out those exact characters.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/driving",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.5.5",
                  optional: false,
                  description:
                    'What would be printed by ``print("costPerGallon")`` if this line was added to th',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3. Chapter 3 - Names for Numbers/3.5 Driving from Chicago to Dallas",
                data: {
                  id: 11579,
                  base_course: "StudentCSP",
                  name: "3. Chapter 3 - Names for Numbers/3.5 Driving from Chicago to Dallas",
                  chapter: "CSPNameNumbers",
                  subchapter: "driving",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "ketchup",
            data: {
              title: "3.6 Following the Ketchup Ooze",
              num: 600,
              chapter: "CSPNameNumbers",
              subchapter: "ketchup",
              id: 11580,
              numQuestions: 4
            },
            children: [
              {
                key: "Ketchup_Speed",
                data: {
                  id: 10977,
                  base_course: "StudentCSP",
                  name: "Ketchup_Speed",
                  chapter: "CSPNameNumbers",
                  subchapter: "ketchup",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="3.6.1">\n        <div id=Ketchup_Speed_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Ketchup_Speed"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 3.6.1 (Ketchup_Speed)</span> </p>\n    </div>\n\n<script>\nvar Ketchup_Speed_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Ketchup_Speed"] = {"code": "dripMPH = .028\\nFPM = 5280.0\\ndripFPH = dripMPH * FPM\\nMPH = 60\\ndripFPM = dripFPH / MPH\\nprint(\\"Ketchup speed in feet per minute:\\")\\nprint(dripFPM)\\nprint(\\"Time to move 4 feet in minutes:\\")\\nprint(4 / dripFPM)", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"dripMPH": 0.028}, "ordered_globals": ["dripMPH"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"dripMPH": 0.028, "FPM": ["SPECIAL_FLOAT", "5280.0"]}, "ordered_globals": ["dripMPH", "FPM"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"dripMPH": 0.028, "FPM": ["SPECIAL_FLOAT", "5280.0"], "dripFPH": 147.84}, "ordered_globals": ["dripMPH", "FPM", "dripFPH"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"dripMPH": 0.028, "FPM": ["SPECIAL_FLOAT", "5280.0"], "dripFPH": 147.84, "MPH": 60}, "ordered_globals": ["dripMPH", "FPM", "dripFPH", "MPH"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"dripMPH": 0.028, "FPM": ["SPECIAL_FLOAT", "5280.0"], "dripFPH": 147.84, "MPH": 60, "dripFPM": 2.464}, "ordered_globals": ["dripMPH", "FPM", "dripFPH", "MPH", "dripFPM"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"dripMPH": 0.028, "FPM": ["SPECIAL_FLOAT", "5280.0"], "dripFPH": 147.84, "MPH": 60, "dripFPM": 2.464}, "ordered_globals": ["dripMPH", "FPM", "dripFPH", "MPH", "dripFPM"], "stack_to_render": [], "heap": {}, "stdout": "Ketchup speed in feet per minute:\\n"}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"dripMPH": 0.028, "FPM": ["SPECIAL_FLOAT", "5280.0"], "dripFPH": 147.84, "MPH": 60, "dripFPM": 2.464}, "ordered_globals": ["dripMPH", "FPM", "dripFPH", "MPH", "dripFPM"], "stack_to_render": [], "heap": {}, "stdout": "Ketchup speed in feet per minute:\\n2.464\\n"}, {"line": 9, "event": "step_line", "func_name": "<module>", "globals": {"dripMPH": 0.028, "FPM": ["SPECIAL_FLOAT", "5280.0"], "dripFPH": 147.84, "MPH": 60, "dripFPM": 2.464}, "ordered_globals": ["dripMPH", "FPM", "dripFPH", "MPH", "dripFPM"], "stack_to_render": [], "heap": {}, "stdout": "Ketchup speed in feet per minute:\\n2.464\\nTime to move 4 feet in minutes:\\n"}, {"line": 9, "event": "return", "func_name": "<module>", "globals": {"dripMPH": 0.028, "FPM": ["SPECIAL_FLOAT", "5280.0"], "dripFPH": 147.84, "MPH": 60, "dripFPM": 2.464}, "ordered_globals": ["dripMPH", "FPM", "dripFPH", "MPH", "dripFPM"], "stack_to_render": [], "heap": {}, "stdout": "Ketchup speed in feet per minute:\\n2.464\\nTime to move 4 feet in minutes:\\n1.6233766233766234\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/ketchup",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.6.1",
                  optional: false,
                  description:
                    "dripMPH = .028 FPM = 5280.0 dripFPH = dripMPH * FPM MPH = 60 dripFPM = dripFPH /",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_6_1_Ketchup_Speed",
                data: {
                  id: 10979,
                  base_course: "StudentCSP",
                  name: "3_6_1_Ketchup_Speed",
                  chapter: "CSPNameNumbers",
                  subchapter: "ketchup",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="3_6_1_Ketchup_Speed" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program figures out the ketchup speed in feet per &lt;i&gt;seconds&lt;/i&gt;.  Drag the blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.6.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        dripMPH = .028\nFPM= 5280.0\ndripFPH = dripMPH * FPM\n---\nMPH = 60\ndripFPM = dripFPH / MPH\n---\nSPM = 60\ndripFPS = dripFPM / SPM\n---\nprint("Ketchup speed:")\nprint(dripFPS)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/ketchup",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.6.3",
                  optional: false,
                  description:
                    "The following program figures out the ketchup speed in feet per <i>seconds</i>. ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3. Chapter 3 - Names for Numbers/3.6 Following the Ketchup Ooze",
                data: {
                  id: 11580,
                  base_course: "StudentCSP",
                  name: "3. Chapter 3 - Names for Numbers/3.6 Following the Ketchup Ooze",
                  chapter: "CSPNameNumbers",
                  subchapter: "ketchup",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "X5SCf9AV_oo",
                data: {
                  id: 23166,
                  base_course: "StudentCSP",
                  name: "X5SCf9AV_oo",
                  chapter: "CSPNameNumbers",
                  subchapter: "ketchup",
                  author: "bmiller",
                  question_type: "youtube",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone " style="margin-left: auto; margin-right:auto">\n        <div id="X5SCf9AV_oo" data-component="youtube" class="align-center youtube-video"\n            data-video-height="480" data-question_label="3.6.2"\n            data-video-width="640" data-video-videoid="X5SCf9AV_oo"\n            data-video-divid="X5SCf9AV_oo" data-video-start="0"\n            data-video-end="-1" ></div>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/ketchup",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.6.2",
                  optional: false,
                  description: "",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "walkAssign",
            data: {
              title: "3.7 Walking through Assignment more Generally",
              num: 700,
              chapter: "CSPNameNumbers",
              subchapter: "walkAssign",
              id: 11581,
              numQuestions: 10
            },
            children: [
              {
                key: "Assign_Basic",
                data: {
                  id: 10984,
                  base_course: "StudentCSP",
                  name: "Assign_Basic",
                  chapter: "CSPNameNumbers",
                  subchapter: "walkAssign",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="3.7.1">\n        <div id=Assign_Basic_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Assign_Basic"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 3.7.1 (Assign_Basic)</span> </p>\n    </div>\n\n<script>\nvar Assign_Basic_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Assign_Basic"] = {"code": "a = 1\\nb = 12.3\\nc = \\"Fred\\"\\nd = b", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"a": 1}, "ordered_globals": ["a"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"a": 1, "b": 12.3}, "ordered_globals": ["a", "b"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"a": 1, "b": 12.3, "c": "Fred"}, "ordered_globals": ["a", "b", "c"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "return", "func_name": "<module>", "globals": {"a": 1, "b": 12.3, "c": "Fred", "d": 12.3}, "ordered_globals": ["a", "b", "c", "d"], "stack_to_render": [], "heap": {}, "stdout": ""}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/walkAssign",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.7.1",
                  optional: false,
                  description: 'a = 1 b = 12.3 c = "Fred" d = b',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_7_1_Assignment_Q1",
                data: {
                  id: 10985,
                  base_course: "StudentCSP",
                  name: "3_7_1_Assignment_Q1",
                  chapter: "CSPNameNumbers",
                  subchapter: "walkAssign",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.7.2" data-multipleanswers="false"  id="3_7_1_Assignment_Q1"  style="visibility: hidden;">\n    <p>What is the value of variable <code class="docutils literal notranslate"><span class="pre">d</span></code> when this program is finished running?</p>\n\n    <li data-component="answer"  id="3_7_1_Assignment_Q1_opt_a">1</li><li data-component="feedback">The variable a is not used in defining the variable b.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="3_7_1_Assignment_Q1_opt_b">12.3</li><li data-component="feedback">The variable d is set to a copy of the value in variable b.  The variable b still holds the value 12.3 as well.</li>\n    \n    <li data-component="answer"  id="3_7_1_Assignment_Q1_opt_c">"b"</li><li data-component="feedback">The variable d gets assigned the same value as the one stored in b.</li>\n    \n    <li data-component="answer"  id="3_7_1_Assignment_Q1_opt_d">"d"</li><li data-component="feedback">The variable d gets its value from the variable b.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/walkAssign",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.7.2",
                  optional: false,
                  description:
                    "What is the value of variable ``d`` when this program is finished running?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Assign_Multiple",
                data: {
                  id: 10986,
                  base_course: "StudentCSP",
                  name: "Assign_Multiple",
                  chapter: "CSPNameNumbers",
                  subchapter: "walkAssign",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="3.7.3">\n        <div id=Assign_Multiple_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Assign_Multiple"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 3.7.3 (Assign_Multiple)</span> </p>\n    </div>\n\n<script>\nvar Assign_Multiple_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Assign_Multiple"] = {"code": "var1 = 45\\nvar1 = 17.3\\nvar2 = var1", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"var1": 45}, "ordered_globals": ["var1"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"var1": 17.3}, "ordered_globals": ["var1"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "return", "func_name": "<module>", "globals": {"var1": 17.3, "var2": 17.3}, "ordered_globals": ["var1", "var2"], "stack_to_render": [], "heap": {}, "stdout": ""}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/walkAssign",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.7.3",
                  optional: false,
                  description: "var1 = 45 var1 = 17.3 var2 = var1",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_7_2_Assignment_Multiple_Q1",
                data: {
                  id: 10987,
                  base_course: "StudentCSP",
                  name: "3_7_2_Assignment_Multiple_Q1",
                  chapter: "CSPNameNumbers",
                  subchapter: "walkAssign",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.7.4" data-multipleanswers="false"  id="3_7_2_Assignment_Multiple_Q1"  style="visibility: hidden;">\n    <p>What are the values in <code class="docutils literal notranslate"><span class="pre">var1</span></code> and <code class="docutils literal notranslate"><span class="pre">var2</span></code> after this program runs?</p>\n\n    <li data-component="answer"  id="3_7_2_Assignment_Multiple_Q1_opt_a">var1 is 45, var2 is 45</li><li data-component="feedback">The variable var1 was set to 45, but that gets changed in line 2, before var2 gets set to any value at all.</li>\n    \n    <li data-component="answer"  id="3_7_2_Assignment_Multiple_Q1_opt_b">var1 is 45, var2 is var1</li><li data-component="feedback">Both variables contain numeric values, because those are the only values in this program.</li>\n    \n    <li data-component="answer"  id="3_7_2_Assignment_Multiple_Q1_opt_c">var1 is 17.3, var2 is 45</li><li data-component="feedback">The variable var2 never gets set to 45 in this program.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="3_7_2_Assignment_Multiple_Q1_opt_d">var1 is 17.3, var2 is 17.3</li><li data-component="feedback">The variable var1 is first set to 45 and then changed to 17.3, and then, var2 gets the value from var1.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/walkAssign",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.7.4",
                  optional: false,
                  description:
                    "What are the values in ``var1`` and ``var2`` after this program runs?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Assign_Days",
                data: {
                  id: 10988,
                  base_course: "StudentCSP",
                  name: "Assign_Days",
                  chapter: "CSPNameNumbers",
                  subchapter: "walkAssign",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Assign_Days data-question_label="3.7.5">\n<div id=Assign_Days_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Assign_Days_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 1: calcDays-line1; 2: calcDays-line2; 3: calcDays-line3; 4: calcDays-line4; 5: calcDays-line5; 6: calcDays-line6;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndaysInWeek = 7\nprint(daysInWeek)\nnumDays = 7 * 3\nprint(numDays)\nnumDays2 = daysInWeek * 3\nprint(numDays2)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/walkAssign",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.7.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_7_3_Assign_Days_Q1",
                data: {
                  id: 10989,
                  base_course: "StudentCSP",
                  name: "3_7_3_Assign_Days_Q1",
                  chapter: "CSPNameNumbers",
                  subchapter: "walkAssign",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.7.6" data-multipleanswers="false"  id="3_7_3_Assign_Days_Q1"  style="visibility: hidden;">\n    <p>What three values are printed when this program runs?</p>\n\n    <li data-component="answer"  id="3_7_3_Assign_Days_Q1_opt_a">7, 7*3, daysInWeek*3</li><li data-component="feedback">The values will actually be computed and numbers will be printed.</li>\n    \n    <li data-component="answer"  id="3_7_3_Assign_Days_Q1_opt_b">daysInWeek, numDays, numDays2</li><li data-component="feedback">The variable names will not be printed.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="3_7_3_Assign_Days_Q1_opt_c">7, 21, 21</li><li data-component="feedback">The first print will print the value of daysInWeek (7), the second the value of numDays (21), and the third the value of numDays2 (21).</li>\n    \n    <li data-component="answer"  id="3_7_3_Assign_Days_Q1_opt_d">7, 21, 3</li><li data-component="feedback">The value for daysInWeek will be computed and assigned.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/walkAssign",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.7.6",
                  optional: false,
                  description: "What three values are printed when this program runs?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_7_4_Per_Person_Cost",
                data: {
                  id: 10990,
                  base_course: "StudentCSP",
                  name: "3_7_4_Per_Person_Cost",
                  chapter: "CSPNameNumbers",
                  subchapter: "walkAssign",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="3_7_4_Per_Person_Cost" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program should figure out the cost per person for a dinner including the tip. But the blocks have been mixed up.  Drag the blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.7.7"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        bill = 89.23\n---\ntip = bill * 0.20\n---\ntotal = bill + tip\n---\nnumPeople = 3\nperPersonCost = total / numPeople\n---\nprint(perPersonCost)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/walkAssign",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.7.7",
                  optional: false,
                  description:
                    "The following program should figure out the cost per person for a dinner includi",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_7_5_WSq",
                data: {
                  id: 10991,
                  base_course: "StudentCSP",
                  name: "3_7_5_WSq",
                  chapter: "CSPNameNumbers",
                  subchapter: "walkAssign",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=3_7_5_WSq data-question_label="3.7.8">\n<div id=3_7_5_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="3_7_5_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# Fill in the missing values from the description above\nnumPeople = ???\n\nappetizer = ???\nentree = ???\ndessert = ???\n\nbill = (??? + ???) * numPeople + ???\n\nprint (bill)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/walkAssign",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.7.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_7_5_WSa",
                data: {
                  id: 10992,
                  base_course: "StudentCSP",
                  name: "3_7_5_WSa",
                  chapter: "CSPNameNumbers",
                  subchapter: "walkAssign",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=3_7_5_WSa data-question_label="3.7.9">\n<div id=3_7_5_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="3_7_5_WSa_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnumPeople = 10\nappetizer = 2\nentree = 9.89\ndessert = 7.99\n\nbill = (appetizer + entree) * numPeople + dessert\n\nprint (bill)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/walkAssign",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.7.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3. Chapter 3 - Names for Numbers/3.7 Walking through Assignment more Generally",
                data: {
                  id: 11581,
                  base_course: "StudentCSP",
                  name: "3. Chapter 3 - Names for Numbers/3.7 Walking through Assignment more Generally",
                  chapter: "CSPNameNumbers",
                  subchapter: "walkAssign",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "invoice",
            data: {
              title: "3.8 Figuring out an Invoice",
              num: 800,
              chapter: "CSPNameNumbers",
              subchapter: "invoice",
              id: 11582,
              numQuestions: 9
            },
            children: [
              {
                key: "Invoice1",
                data: {
                  id: 10969,
                  base_course: "StudentCSP",
                  name: "Invoice1",
                  chapter: "CSPNameNumbers",
                  subchapter: "invoice",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Invoice1 data-question_label="3.8.1">\n<div id=Invoice1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Invoice1_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 1: inv-line1; 2: inv-line2; 3: inv-line3; 4: inv-line4; 5: inv-line5; 6: inv-line6; 7: inv-line7; 8: inv-line8;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nquantity1 = 2\nunitPrice1 = 7.56\ntotal1 = quantity1 * unitPrice1\nquantity2 = 4\nunitPrice2 = 4.71\ntotal2 = quantity2 * unitPrice2\ninvoiceTotal = total1 + total2\nprint(invoiceTotal)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/invoice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.8.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_8_1_Invoice1_Q1",
                data: {
                  id: 10970,
                  base_course: "StudentCSP",
                  name: "3_8_1_Invoice1_Q1",
                  chapter: "CSPNameNumbers",
                  subchapter: "invoice",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.8.2" data-multipleanswers="false"  id="3_8_1_Invoice1_Q1"  style="visibility: hidden;">\n    <p>How many variables are in this program?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="3_8_1_Invoice1_Q1_opt_a">7</li><li data-component="feedback">Yes, quantity1, unitPrice1, total1, quantity2, unitPrice2, total2, invoiceTotal.</li>\n    \n    <li data-component="answer"  id="3_8_1_Invoice1_Q1_opt_b">6</li><li data-component="feedback">There are three variables per line, two lines, and one total.</li>\n    \n    <li data-component="answer"  id="3_8_1_Invoice1_Q1_opt_c">5</li><li data-component="feedback">There are three variables per line, two lines, and one total.</li>\n    \n    <li data-component="answer"  id="3_8_1_Invoice1_Q1_opt_d">2</li><li data-component="feedback">There are three variables per line, two lines, and one total.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/invoice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.8.2",
                  optional: false,
                  description: "How many variables are in this program?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Invoice2",
                data: {
                  id: 10971,
                  base_course: "StudentCSP",
                  name: "Invoice2",
                  chapter: "CSPNameNumbers",
                  subchapter: "invoice",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="3.8.3">\n        <div id=Invoice2_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Invoice2"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 3.8.3 (Invoice2)</span> </p>\n    </div>\n\n<script>\nvar Invoice2_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Invoice2"] = {"code": "quantity = 2\\nunitPrice = 7.56\\ntotal1 = quantity * unitPrice\\nquantity = 4\\nunitPrice = 4.71\\ntotal2 = quantity * unitPrice\\ninvoiceTotal = total1 + total2\\nprint(invoiceTotal)", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"quantity": 2}, "ordered_globals": ["quantity"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"quantity": 2, "unitPrice": 7.56}, "ordered_globals": ["quantity", "unitPrice"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"quantity": 2, "unitPrice": 7.56, "total1": 15.12}, "ordered_globals": ["quantity", "unitPrice", "total1"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"quantity": 4, "unitPrice": 7.56, "total1": 15.12}, "ordered_globals": ["quantity", "unitPrice", "total1"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"quantity": 4, "unitPrice": 4.71, "total1": 15.12}, "ordered_globals": ["quantity", "unitPrice", "total1"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"quantity": 4, "unitPrice": 4.71, "total1": 15.12, "total2": 18.84}, "ordered_globals": ["quantity", "unitPrice", "total1", "total2"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"quantity": 4, "unitPrice": 4.71, "total1": 15.12, "total2": 18.84, "invoiceTotal": 33.96}, "ordered_globals": ["quantity", "unitPrice", "total1", "total2", "invoiceTotal"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 8, "event": "return", "func_name": "<module>", "globals": {"quantity": 4, "unitPrice": 4.71, "total1": 15.12, "total2": 18.84, "invoiceTotal": 33.96}, "ordered_globals": ["quantity", "unitPrice", "total1", "total2", "invoiceTotal"], "stack_to_render": [], "heap": {}, "stdout": "33.96\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/invoice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.8.3",
                  optional: false,
                  description:
                    "quantity = 2 unitPrice = 7.56 total1 = quantity * unitPrice quantity = 4 unitPri",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_8_2_Invoice2_Q1",
                data: {
                  id: 10972,
                  base_course: "StudentCSP",
                  name: "3_8_2_Invoice2_Q1",
                  chapter: "CSPNameNumbers",
                  subchapter: "invoice",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.8.4" data-multipleanswers="false"  id="3_8_2_Invoice2_Q1"  style="visibility: hidden;">\n    <p>How many variables are in this program?</p>\n\n    <li data-component="answer"  id="3_8_2_Invoice2_Q1_opt_a">7</li><li data-component="feedback">We have two fewer variables now.</li>\n    \n    <li data-component="answer"  id="3_8_2_Invoice2_Q1_opt_b">6</li><li data-component="feedback">We have a total for each line (two), a quantity, a unitPrice, and an invoiceTotal.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="3_8_2_Invoice2_Q1_opt_c">5</li><li data-component="feedback">The variables are quantity, unitPrice, total1, total2, and invoiceTotal.</li>\n    \n    <li data-component="answer"  id="3_8_2_Invoice2_Q1_opt_d">2</li><li data-component="feedback">We have a total for each line (two), a quantity, a unitPrice, and an invoiceTotal.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/invoice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.8.4",
                  optional: false,
                  description: "How many variables are in this program?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Complete_Assignment",
                data: {
                  id: 10973,
                  base_course: "StudentCSP",
                  name: "Complete_Assignment",
                  chapter: "CSPNameNumbers",
                  subchapter: "invoice",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Complete_Assignment data-question_label="3.8.5">\n<div id=Complete_Assignment_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Complete_Assignment_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnumApples = 4\nnumPears = 3\n\ncostPerApple =\ncostPerPear =\n\ntotalCost =\nprint(totalCost)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/invoice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.8.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_8_3_Make_An_Assignment_Q1",
                data: {
                  id: 10974,
                  base_course: "StudentCSP",
                  name: "3_8_3_Make_An_Assignment_Q1",
                  chapter: "CSPNameNumbers",
                  subchapter: "invoice",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="3.8.6" data-multipleanswers="false"  id="3_8_3_Make_An_Assignment_Q1"  style="visibility: hidden;">\n    <blockquote>\n<div><p>Which line of code will compute the correct <code class="docutils literal notranslate"><span class="pre">totalCost</span></code> if put into the program above?</p>\n</div></blockquote>\n\n    <li data-component="answer"  id="3_8_3_Make_An_Assignment_Q1_opt_a">totalCost = numApples + numPears</li><li data-component="feedback">That does not consider the cost of the apples or pears.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="3_8_3_Make_An_Assignment_Q1_opt_b">totalCost = (costPerApple * numApples) + (costPerPear * numPears)</li><li data-component="feedback">We need to multiply the cost per apple times the number of apples and add it to the cost per pear times the number of pears.</li>\n    \n    <li data-component="answer"  id="3_8_3_Make_An_Assignment_Q1_opt_c">totalCost = (costPerApple * numPears) + (costPerPear * numApples)</li><li data-component="feedback">That gets the costs backwards</li>\n    \n    <li data-component="answer"  id="3_8_3_Make_An_Assignment_Q1_opt_d">totalCost = (0.4 * numApples) + (0.65 + numPears)</li><li data-component="feedback">That would work, but giving names to numbers makes code easier to understand.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/invoice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.8.6",
                  optional: false,
                  description:
                    " Which line of code will compute the correct ``totalCost`` if put into the progr",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_8_4_WSq",
                data: {
                  id: 10975,
                  base_course: "StudentCSP",
                  name: "3_8_4_WSq",
                  chapter: "CSPNameNumbers",
                  subchapter: "invoice",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=3_8_4_WSq data-question_label="3.8.7">\n<div id=3_8_4_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="3_8_4_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/invoice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.8.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3_8_4_WSa",
                data: {
                  id: 10976,
                  base_course: "StudentCSP",
                  name: "3_8_4_WSa",
                  chapter: "CSPNameNumbers",
                  subchapter: "invoice",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=3_8_4_WSa data-question_label="3.8.8">\n<div id=3_8_4_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="3_8_4_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# DECLARE VARIABLES AND ASSIGN VALUES\ncostPerClip = .05\nbudget = 4.00\n# 2. CREATE FORMULA\nnumPaperclips = budget / costPerClip\n# 3. PRINT RESULT\nprint(numPaperclips)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/invoice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.8.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3. Chapter 3 - Names for Numbers/3.8 Figuring out an Invoice",
                data: {
                  id: 11582,
                  base_course: "StudentCSP",
                  name: "3. Chapter 3 - Names for Numbers/3.8 Figuring out an Invoice",
                  chapter: "CSPNameNumbers",
                  subchapter: "invoice",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "3.9 Chapter 3 - Summary",
              num: 900,
              chapter: "CSPNameNumbers",
              subchapter: "summary",
              id: 11583,
              numQuestions: 1
            },
            children: [
              {
                key: "3. Chapter 3 - Names for Numbers/3.9 Chapter 3 - Summary",
                data: {
                  id: 11583,
                  base_course: "StudentCSP",
                  name: "3. Chapter 3 - Names for Numbers/3.9 Chapter 3 - Summary",
                  chapter: "CSPNameNumbers",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "3.10 Chapter 3 Exercises",
              num: 1000,
              chapter: "CSPNameNumbers",
              subchapter: "Exercises",
              id: 11584,
              numQuestions: 21
            },
            children: [
              {
                key: "ch3ex1",
                data: {
                  id: 10935,
                  base_course: "StudentCSP",
                  name: "ch3ex1",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex1 data-question_label="3.10.1">\n<div id=ch3ex1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex1_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nprint(9 * 5)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex2q",
                data: {
                  id: 10936,
                  base_course: "StudentCSP",
                  name: "ch3ex2q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex2q data-question_label="3.10.2">\n<div id=ch3ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nprint(16 # 7 == 2)\nprint((7 # 2) # 10 == 35)\nprint(2 # 4 == 0.5)\nprint(5 # 2 # 3 == -1)\nprint(3 # 2 # 1 == 7)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex3q",
                data: {
                  id: 10937,
                  base_course: "StudentCSP",
                  name: "ch3ex3q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex3q data-question_label="3.10.3">\n<div id=ch3ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 6 * 1 - 2\nprint(x)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex4q",
                data: {
                  id: 10938,
                  base_course: "StudentCSP",
                  name: "ch3ex4q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex4q data-question_label="3.10.4">\n<div id=ch3ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 12 * 2 - 3 + 4 * 2\nprint(x)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex5q",
                data: {
                  id: 10939,
                  base_course: "StudentCSP",
                  name: "ch3ex5q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex5q data-question_label="3.10.5">\n<div id=ch3ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nmiles = 500\nmilesPerGallon = 26\nnumGallons =\npricePerGallon = 3.45\ntotal =\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex6q",
                data: {
                  id: 10940,
                  base_course: "StudentCSP",
                  name: "ch3ex6q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex6q data-question_label="3.10.6">\n<div id=ch3ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ntoday = 1\nnumberOfDays = 82\nthatDayNumber = today + numberOfDays\nthatDay = thatDayNumber ...\nprint(thatDay)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex7q",
                data: {
                  id: 10941,
                  base_course: "StudentCSP",
                  name: "ch3ex7q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex7q data-question_label="3.10.7">\n<div id=ch3ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfunds = 25\nmilesPerGallon = 40\npricePerGallon = 3.65\nnumGallons =\nnumMiles =\nprint(numMiles)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex8q",
                data: {
                  id: 10942,
                  base_course: "StudentCSP",
                  name: "ch3ex8q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex8q data-question_label="3.10.8">\n<div id=ch3ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\na Number = 12\n3 = bNumber\na Number * b Number = cNumber\nprint(cNumber)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex9q",
                data: {
                  id: 10943,
                  base_course: "StudentCSP",
                  name: "ch3ex9q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex9q data-question_label="3.10.9">\n<div id=ch3ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nprice = 68\namountOff = 0.4\nsaleReduction =\nsalePrice = price - saleReduction\namountOff = 0.2\ncouponReduction = salePrice * amountOff\ncouponPrice =\nprint(couponPrice)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex10q",
                data: {
                  id: 10944,
                  base_course: "StudentCSP",
                  name: "ch3ex10q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex10q data-question_label="3.10.10">\n<div id=ch3ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n7 = a\nb = 2\na / b = c\nprint (c)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex11q",
                data: {
                  id: 10945,
                  base_course: "StudentCSP",
                  name: "ch3ex11q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex11q data-question_label="3.10.11">\n<div id=ch3ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnumPeople = 5\namountPerPerson = 4\nprice = 0.5\ntotal =\nnumWings =\nprint(numWings)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex12q",
                data: {
                  id: 10946,
                  base_course: "StudentCSP",
                  name: "ch3ex12q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex12q data-question_label="3.10.12">\n<div id=ch3ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ncurrentTime = 10\nnewTime = 10 + 123\nclockTime =\nprint(clockTime)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex13q",
                data: {
                  id: 10947,
                  base_course: "StudentCSP",
                  name: "ch3ex13q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex13q data-question_label="3.10.13">\n<div id=ch3ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ntotalMinutes = 270\nnumMinutes =\nnumHours =\nprint(numHours)\nprint(numMinutes)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex14q",
                data: {
                  id: 10948,
                  base_course: "StudentCSP",
                  name: "ch3ex14q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex14q data-question_label="3.10.14">\n<div id=ch3ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsubTotal =\ntax = 0.07\ntotal =\nprint (total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex15q",
                data: {
                  id: 10949,
                  base_course: "StudentCSP",
                  name: "ch3ex15q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex15q data-question_label="3.10.15">\n<div id=ch3ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n8 = payPerHour\namount = 100\namount / payPerHour = numHours\nprint(numHours)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex16q",
                data: {
                  id: 10950,
                  base_course: "StudentCSP",
                  name: "ch3ex16q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex16q data-question_label="3.10.16">\n<div id=ch3ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ntotalDays =\nnumHours = totalDays * 24\nnumMinutes =\nnumSeconds =\nprint(numMinutes)\nprint(numSeconds)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex17q",
                data: {
                  id: 10951,
                  base_course: "StudentCSP",
                  name: "ch3ex17q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex17q data-question_label="3.10.17">\n<div id=ch3ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\npricePerApple = 0.6\nnumPears = 3\npricePerPear = 1.2\nfunds = 8\nfundsAfterPears =\nnumApples =\nprint(numApples)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex18q",
                data: {
                  id: 10952,
                  base_course: "StudentCSP",
                  name: "ch3ex18q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex18q data-question_label="3.10.18">\n<div id=ch3ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ngasRate = 23\namountGas = 15\ndistance =\ngasConsumed =\ngasRemaining =\nprint(gasRemaining)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex19q",
                data: {
                  id: 10953,
                  base_course: "StudentCSP",
                  name: "ch3ex19q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex19q data-question_label="3.10.19">\n<div id=ch3ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex20q",
                data: {
                  id: 10954,
                  base_course: "StudentCSP",
                  name: "ch3ex20q",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch3ex20q data-question_label="3.10.20">\n<div id=ch3ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch3ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.10.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3. Chapter 3 - Names for Numbers/3.10 Chapter 3 Exercises",
                data: {
                  id: 11584,
                  base_course: "StudentCSP",
                  name: "3. Chapter 3 - Names for Numbers/3.10 Chapter 3 Exercises",
                  chapter: "CSPNameNumbers",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "VariablePracticeParsons",
            data: {
              title: "3.11 Mixed Up Code Practice",
              num: 1100,
              chapter: "CSPNameNumbers",
              subchapter: "VariablePracticeParsons",
              id: 15553,
              numQuestions: 13
            },
            children: [
              {
                key: "ch3ex1muc",
                data: {
                  id: 15543,
                  base_course: "StudentCSP",
                  name: "ch3ex1muc",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch3ex1muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print out the cost for each shirt if they are to buy 2 and get the third free but were originally $45 each.  The blocks have been mixed up.  Drag the blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.11.1"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        price = 45\n---\ntotalCost = price * 2\n---\npricePerShirt = totalCost / 3\n---\nprint(pricePerShirt)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/VariablePracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.11.1",
                  optional: false,
                  description:
                    "The following program segment should print out the cost for each shirt if they a",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex2muc",
                data: {
                  id: 15544,
                  base_course: "StudentCSP",
                  name: "ch3ex2muc",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch3ex2muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print out the cost per person for a dinner including the tip. But the blocks have been mixed up and include an extra block that isn’t needed in the solution. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution. Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.11.2"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        bill = 89.23\n---\ntip = bill * 0.20\n---\ntotal = bill + tip\n---\nnumPeople = 3\nperPersonCost = total / numPeople\n---\nprint(perPersonCost)\n---\nprint(perpersoncost) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/VariablePracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.11.2",
                  optional: false,
                  description:
                    "The following program segment should print out the cost per person for a dinner ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex3muc",
                data: {
                  id: 15545,
                  base_course: "StudentCSP",
                  name: "ch3ex3muc",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch3ex3muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print the amount of punch left in a two gallon punch bowl if 12oz is poured into as many cups as possible. One gallon contains 128oz and the punch bowl is full. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.11.3"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        oInGallon = 128\noInCup = 12\n---\ntotalPunch = 2 * oInGallon\n---\namountLeft = totalPunch % oInCup\n---\nprint(amountLeft)\n---\namountLeft = totalPunch / oInCup #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/VariablePracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.11.3",
                  optional: false,
                  description:
                    "The following program segment should print the amount of punch left in a two gal",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex4muc",
                data: {
                  id: 15546,
                  base_course: "StudentCSP",
                  name: "ch3ex4muc",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch3ex4muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print the number of seconds in 5 days. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.11.4"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        sInMin = 60\nmInHour = 60\nhInDay = 24\n---\nsInDay = sInMin * mInHour * hInDay\n---\ntotal = sInDay * 5\n---\nprint(total)\n---\ntotal = sInDay / 5 #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/VariablePracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.11.4",
                  optional: false,
                  description:
                    "The following program segment should print the number of seconds in 5 days. But,",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex5muc",
                data: {
                  id: 15547,
                  base_course: "StudentCSP",
                  name: "ch3ex5muc",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch3ex5muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print the number of months it would take you to save 500 if you make 50 a week. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.11.5"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        weeklyRate = 50\ngoal = 500\n---\nnumWeeks = goal / weeklyRate\n---\nnumMonths = numWeeks / 4\n---\nprint(numMonths)\n---\nnumWeeks = weeklyRate / goal #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/VariablePracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.11.5",
                  optional: false,
                  description:
                    "The following program segment should print the number of months it would take yo",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex6muc",
                data: {
                  id: 15548,
                  base_course: "StudentCSP",
                  name: "ch3ex6muc",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch3ex6muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print the cost of a trip that is 200 miles when the price of gas is 2.20 and the miles per gallon is 42. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.11.6"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        miles = 200\nprice = 2.20\nmpg = 42\n---\nnumGalls = miles / mpg\n---\ncost = numGalls * price\n---\nprint(cost)\n---\nprint(totalCost) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/VariablePracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.11.6",
                  optional: false,
                  description:
                    "The following program segment should print the cost of a trip that is 200 miles ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex7muc",
                data: {
                  id: 15549,
                  base_course: "StudentCSP",
                  name: "ch3ex7muc",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch3ex7muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print how many miles you can go on half a tank of gas if the miles per gallon is 26 and your tank holds 15 gallons. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.11.7"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        mpg = 26\ntankHolds = 15\n---\nnumGalls = tankHolds / 2\n---\nmiles = numGalls * mpg\n---\nprint(miles)\n---\nmpg = 15\ntankHolds = 26 #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/VariablePracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.11.7",
                  optional: false,
                  description:
                    "The following program segment should print how many miles you can go on half a t",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex8muc",
                data: {
                  id: 15550,
                  base_course: "StudentCSP",
                  name: "ch3ex8muc",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch3ex8muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print how many chicken wings you can buy with $3.50 if the wings are $.60 each. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.11.8"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        cost = 0.6\nmoney = 3.5\n---\nnumWings = cost / money\n---\nprint(numWings)\n---\nprint(NumWings) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/VariablePracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.11.8",
                  optional: false,
                  description:
                    "The following program segment should print how many chicken wings you can buy wi",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex9muc",
                data: {
                  id: 15551,
                  base_course: "StudentCSP",
                  name: "ch3ex9muc",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch3ex9muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print how much you will have to pay for an item that is 60% off the original price of $52.99. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.11.9"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        price = 52.99\ndiscount = 0.6\n---\nsavings = price * discount\n---\nfinalPrice = price - savings\n---\nprint(finalPrice)\n---\nfinalPrice = price - discount #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/VariablePracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.11.9",
                  optional: false,
                  description:
                    "The following program segment should print how much you will have to pay for an ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex10muc",
                data: {
                  id: 15552,
                  base_course: "StudentCSP",
                  name: "ch3ex10muc",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch3ex10muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print how much each pair of shorts cost when they are buy 2 and get the third free.  The shorts are originally $39.99 each. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.11.10"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        price = 39.99\n---\npriceForTwo = price * 2\n---\nitemPrice = priceForTwo / 3\n---\nprint(itemPrice)\n---\nitemPrice = priceForTwo / 2 #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/VariablePracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.11.10",
                  optional: false,
                  description:
                    "The following program segment should print how much each pair of shorts cost whe",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3. Chapter 3 - Names for Numbers/3.11 Mixed Up Code Practice",
                data: {
                  id: 15553,
                  base_course: "StudentCSP",
                  name: "3. Chapter 3 - Names for Numbers/3.11 Mixed Up Code Practice",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex11muc",
                data: {
                  id: 29689,
                  base_course: "StudentCSP",
                  name: "ch3ex11muc",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch3ex11muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>Arrange the code so the following is displayed in order: 55, “computer science”, 0. The blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.11.11"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        apple <- "computer science"\nnumber <- 55\nMichigan <- 0\n---\nDISPLAY(number)\n---\nDISPLAY(apple)\n---\nDISPLAY(Michigan)\n---\nDISPLAY(0) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/VariablePracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.11.11",
                  optional: false,
                  description:
                    'Arrange the code so the following is displayed in order: 55, "computer science",',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch3ex12muc",
                data: {
                  id: 29690,
                  base_course: "StudentCSP",
                  name: "ch3ex12muc",
                  chapter: "CSPNameNumbers",
                  subchapter: "VariablePracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch3ex12muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should swap the values of x and y after val1 and val 2 are assigned to x and y, respectively. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="3.11.12"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        x <- val1\ny <- val2\n---\ntemp <- x\n---\nx <- y\n---\ny <- temp\n---\ntemp <- y #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNumbers/VariablePracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "3.11.12",
                  optional: false,
                  description:
                    "The following program segment should swap the values of x and y after val1 and v",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPNameStrings",
        data: {
          title: "4. Chapter 4 - Names for Strings",
          num: 4
        },
        children: [
          {
            key: "assignNameStr",
            data: {
              title: "4.1 Assign a Name to a String",
              num: 100,
              chapter: "CSPNameStrings",
              subchapter: "assignNameStr",
              id: 11585,
              numQuestions: 9
            },
            children: [
              {
                key: "String_Assign",
                data: {
                  id: 10993,
                  base_course: "StudentCSP",
                  name: "String_Assign",
                  chapter: "CSPNameStrings",
                  subchapter: "assignNameStr",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Assign data-question_label="4.1.1.1">\n<div id=String_Assign_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Assign_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: sa1-line1; 2: sa1-line2; 3: sa1-line3; 4: sa1-line4;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfirst = "Jorge"\nlast = "Garcia"\nfullName = first + " " + last\nprint(fullName)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/assignNameStr",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.1.1.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Assign2",
                data: {
                  id: 10994,
                  base_course: "StudentCSP",
                  name: "String_Assign2",
                  chapter: "CSPNameStrings",
                  subchapter: "assignNameStr",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Assign2 data-question_label="4.1.1.2">\n<div id=String_Assign2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Assign2_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfirst = \'Jorge\'\nlast = "Garcia"\nfullName = first + last\nprint(fullName)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/assignNameStr",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.1.1.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Assign3",
                data: {
                  id: 10995,
                  base_course: "StudentCSP",
                  name: "String_Assign3",
                  chapter: "CSPNameStrings",
                  subchapter: "assignNameStr",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Assign3 data-question_label="4.1.1.3">\n<div id=String_Assign3_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Assign3_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfirst = \'Jorge"\nlast = \'Garcia"\nfullName = first " " last\nprint(fullName)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/assignNameStr",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.1.1.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Input",
                data: {
                  id: 10996,
                  base_course: "StudentCSP",
                  name: "String_Input",
                  chapter: "CSPNameStrings",
                  subchapter: "assignNameStr",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Input data-question_label="4.1.1.4">\n<div id=String_Input_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Input_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfirst = input("What is your first name?")\nlast = input("What is your last name?")\nfullName = first + " " + last\nprint("Your full name is " + fullName)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/assignNameStr",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.1.1.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Convert",
                data: {
                  id: 10997,
                  base_course: "StudentCSP",
                  name: "String_Convert",
                  chapter: "CSPNameStrings",
                  subchapter: "assignNameStr",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Convert data-question_label="4.1.2.1">\n<div id=String_Convert_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Convert_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: sa3-line1; 2: sa3-line2; 3: sa3-line3; 4: sa3-line4;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nFred = 5\nprint("Fred")\nprint(Fred)\nprint("Fred" + " is " + str(Fred))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/assignNameStr",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.1.2.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Trip_Calculator2",
                data: {
                  id: 10998,
                  base_course: "StudentCSP",
                  name: "Trip_Calculator2",
                  chapter: "CSPNameStrings",
                  subchapter: "assignNameStr",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Trip_Calculator2 data-question_label="4.1.2.2">\n<div id=Trip_Calculator2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Trip_Calculator2_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 1: trp-line1; 2: trp-line2; 3: trp-line3; 4: trp-line4; 5: trp-line5; 6: trp2-line6;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndistance = 924.7\nmpg = 35.5\ngallons = distance / mpg\ncostPerGallon = 3.65\ncostTrip = gallons * costPerGallon\nprint("Cost to get from Chicago to Dallas: $" + str(costTrip))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/assignNameStr",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.1.2.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_1_1_stringVsValue",
                data: {
                  id: 10999,
                  base_course: "StudentCSP",
                  name: "4_1_1_stringVsValue",
                  chapter: "CSPNameStrings",
                  subchapter: "assignNameStr",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.1.2.3" data-multipleanswers="false"  id="4_1_1_stringVsValue"  style="visibility: hidden;">\n    <p>Given the following code segment, what will be printed?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">street</span> <span class="o">=</span> <span class="s2">&quot;125 Main Street&quot;</span>\n<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;The address is &quot;</span> <span class="o">+</span> <span class="s2">&quot;street&quot;</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="4_1_1_stringVsValue_opt_a">The address is street</li><li data-component="feedback">Since street is in double quotes it will print the string street rather than the value of the variable street.</li>\n    \n    <li data-component="answer"  id="4_1_1_stringVsValue_opt_b">The address is 125 Main Street</li><li data-component="feedback">This would be true if it was print("The address is " + street)</li>\n    \n    <li data-component="answer"  id="4_1_1_stringVsValue_opt_c">It won\'t execute</li><li data-component="feedback">While this isn\'t printing what we probably want it to, it will print something.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/assignNameStr",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.1.2.3",
                  optional: false,
                  description: "Given the following code segment, what will be printed?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_1_2_noSpace",
                data: {
                  id: 11000,
                  base_course: "StudentCSP",
                  name: "4_1_2_noSpace",
                  chapter: "CSPNameStrings",
                  subchapter: "assignNameStr",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.1.2.4" data-multipleanswers="false"  id="4_1_2_noSpace"  style="visibility: hidden;">\n    <p>What will be printed when the following executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">street</span> <span class="o">=</span> <span class="s2">&quot;125 Main Street&quot;</span>\n<span class="n">cityState</span> <span class="o">=</span> <span class="s2">&quot;Atlanta, GA&quot;</span>\n<span class="nb">print</span><span class="p">(</span><span class="n">street</span> <span class="o">+</span> <span class="s2">&quot;,&quot;</span> <span class="o">+</span> <span class="n">cityState</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="4_1_2_noSpace_opt_a">125 Main Street, Atlanta, GA</li><li data-component="feedback">This would be true if it was street + ", ".</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="4_1_2_noSpace_opt_b">125 Main Street,Atlanta, GA</li><li data-component="feedback">There isn\'t a space after the comma and one isn\'t added automatically.</li>\n    \n    <li data-component="answer"  id="4_1_2_noSpace_opt_c">125 Main Street Atlanta, GA</li><li data-component="feedback">What about the comma?</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/assignNameStr",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.1.2.4",
                  optional: false,
                  description: "What will be printed when the following executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4. Chapter 4 - Names for Strings/4.1 Assign a Name to a String",
                data: {
                  id: 11585,
                  base_course: "StudentCSP",
                  name: "4. Chapter 4 - Names for Strings/4.1 Assign a Name to a String",
                  chapter: "CSPNameStrings",
                  subchapter: "assignNameStr",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "strObjects",
            data: {
              title: "4.2 Strings are Objects",
              num: 200,
              chapter: "CSPNameStrings",
              subchapter: "strObjects",
              id: 11586,
              numQuestions: 12
            },
            children: [
              {
                key: "String_Methods2",
                data: {
                  id: 11040,
                  base_course: "StudentCSP",
                  name: "String_Methods2",
                  chapter: "CSPNameStrings",
                  subchapter: "strObjects",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Methods2 data-question_label="4.2.1">\n<div id=String_Methods2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Methods2_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: str2-line1; 2: str2-line2; 3: str2-line3; 4: str2-line4; 5: str2-line5;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsentence = "THIS IS A TEST"\nbetter = sentence.lower()\nprint(better)\nbetterStill = better.capitalize() + "."\nprint(betterStill)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/strObjects",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.2.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Slice1",
                data: {
                  id: 11041,
                  base_course: "StudentCSP",
                  name: "String_Slice1",
                  chapter: "CSPNameStrings",
                  subchapter: "strObjects",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Slice1 data-question_label="4.2.1.1">\n<div id=String_Slice1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Slice1_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsentence = "This is a test"\ns1 = sentence[1]\nprint(s1)\ns2 = sentence[5]\nprint(s2)\ns3 = sentence[8]\nprint(s3)\ns4 = sentence[10]\nprint(s4)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/strObjects",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.2.1.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Slice2",
                data: {
                  id: 11042,
                  base_course: "StudentCSP",
                  name: "String_Slice2",
                  chapter: "CSPNameStrings",
                  subchapter: "strObjects",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Slice2 data-question_label="4.2.1.2">\n<div id=String_Slice2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Slice2_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsentence = "This is a test"\ns1 = sentence[1:3]\nprint(s1)\ns2 = sentence[5:7]\nprint(s2)\ns3 = sentence[8:11]\nprint(s3)\ns4 = sentence[10:14]\nprint(s4)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/strObjects",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.2.1.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_2_1_Slice",
                data: {
                  id: 11043,
                  base_course: "StudentCSP",
                  name: "4_2_1_Slice",
                  chapter: "CSPNameStrings",
                  subchapter: "strObjects",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.2.1.3" data-multipleanswers="false"  id="4_2_1_Slice"  style="visibility: hidden;">\n    <p>What will be printed when the following executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="nb">str</span> <span class="o">=</span> <span class="s2">&quot;This is the end&quot;</span>\n<span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="p">[</span><span class="mi">1</span><span class="p">:</span><span class="mi">4</span><span class="p">]</span>\n<span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="4_2_1_Slice_opt_a">This is the end</li><li data-component="feedback">This would be true if we were printing the value of str and we hand\'t changed it on line 2.</li>\n    \n    <li data-component="answer"  id="4_2_1_Slice_opt_b">This</li><li data-component="feedback">This would be true if the first position was 1 and the substring included the character at the end position, but the first character in a string is at position 0 and the substring won\'t include the character at the last position.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="4_2_1_Slice_opt_c">his</li><li data-component="feedback">This will return a string that starts at position 1 and ends at position 3.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/strObjects",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.2.1.3",
                  optional: false,
                  description: "What will be printed when the following executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_2_2_Slice2",
                data: {
                  id: 11044,
                  base_course: "StudentCSP",
                  name: "4_2_2_Slice2",
                  chapter: "CSPNameStrings",
                  subchapter: "strObjects",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.2.1.4" data-multipleanswers="false"  id="4_2_2_Slice2"  style="visibility: hidden;">\n    <p>What will be printed when the following executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="nb">str</span> <span class="o">=</span> <span class="s2">&quot;This is the end&quot;</span>\n<span class="nb">str</span> <span class="o">=</span> <span class="nb">str</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span>\n<span class="nb">print</span><span class="p">(</span><span class="nb">str</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="4_2_2_Slice2_opt_a">i</li><li data-component="feedback">This will print the character at position 5 in the string which is i.  Remember that the first character is at position 0.</li>\n    \n    <li data-component="answer"  id="4_2_2_Slice2_opt_b">s</li><li data-component="feedback">This would be true if the first character was at position 1 instead of 0.</li>\n    \n    <li data-component="answer"  id="4_2_2_Slice2_opt_c">is the end</li><li data-component="feedback">This would be true if it returned from the given position to the end of the string, but that isn\'t what it does.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/strObjects",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.2.1.4",
                  optional: false,
                  description: "What will be printed when the following executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Length",
                data: {
                  id: 11045,
                  base_course: "StudentCSP",
                  name: "String_Length",
                  chapter: "CSPNameStrings",
                  subchapter: "strObjects",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Length data-question_label="4.2.2.1">\n<div id=String_Length_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Length_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsentence = "This is a test"\nlength = len(sentence)\nprint(length)\nsentence = "Hi"\nlength = len(sentence)\nprint(length)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/strObjects",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.2.2.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Find",
                data: {
                  id: 11046,
                  base_course: "StudentCSP",
                  name: "String_Find",
                  chapter: "CSPNameStrings",
                  subchapter: "strObjects",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Find data-question_label="4.2.2.2">\n<div id=String_Find_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Find_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsentence = "This is a test"\npos = sentence.find("is")\nprint(pos)\npos = sentence.find("love")\nprint(pos)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/strObjects",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.2.2.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_2_3_stringLen",
                data: {
                  id: 11047,
                  base_course: "StudentCSP",
                  name: "4_2_3_stringLen",
                  chapter: "CSPNameStrings",
                  subchapter: "strObjects",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.2.2.3" data-multipleanswers="false"  id="4_2_3_stringLen"  style="visibility: hidden;">\n    <p>Given the following code segment, what will be printed?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">street</span> <span class="o">=</span> <span class="s2">&quot;125 Main Street&quot;</span>\n<span class="nb">print</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">street</span><span class="p">))</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="4_2_3_stringLen_opt_a">13</li><li data-component="feedback">Don\'t forget to include the spaces in the count.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="4_2_3_stringLen_opt_b">15</li><li data-component="feedback">The len function returns the number of elements in the string including spaces.</li>\n    \n    <li data-component="answer"  id="4_2_3_stringLen_opt_c">10</li><li data-component="feedback">This would be true if the len function only returned the number of alphabetic characters, but it includes all including spaces.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/strObjects",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.2.2.3",
                  optional: false,
                  description: "Given the following code segment, what will be printed?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_2_4_Find",
                data: {
                  id: 11048,
                  base_course: "StudentCSP",
                  name: "4_2_4_Find",
                  chapter: "CSPNameStrings",
                  subchapter: "strObjects",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.2.2.4" data-multipleanswers="false"  id="4_2_4_Find"  style="visibility: hidden;">\n    <p>What will be printed when the following executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="nb">str</span> <span class="o">=</span> <span class="s2">&quot;His shirt is red&quot;</span>\n<span class="n">pos</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s2">&quot;is&quot;</span><span class="p">)</span>\n<span class="nb">print</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="4_2_4_Find_opt_a">1</li><li data-component="feedback">The find function returns the index of the first position that contains the given string.</li>\n    \n    <li data-component="answer"  id="4_2_4_Find_opt_b">9</li><li data-component="feedback">This would be true if it was pos = str.find(" is").</li>\n    \n    <li data-component="answer"  id="4_2_4_Find_opt_c">10</li><li data-component="feedback">This would be true if it was pos = str.find(" is") and the first position was 1, but it is 0.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/strObjects",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.2.2.4",
                  optional: false,
                  description: "What will be printed when the following executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_2_5_WSq",
                data: {
                  id: 11049,
                  base_course: "StudentCSP",
                  name: "4_2_5_WSq",
                  chapter: "CSPNameStrings",
                  subchapter: "strObjects",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=4_2_5_WSq data-question_label="4.2.2.5">\n<div id=4_2_5_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="4_2_5_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/strObjects",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.2.2.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_2_5_WSa",
                data: {
                  id: 11050,
                  base_course: "StudentCSP",
                  name: "4_2_5_WSa",
                  chapter: "CSPNameStrings",
                  subchapter: "strObjects",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=4_2_5_WSa data-question_label="4.2.2.6">\n<div id=4_2_5_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="4_2_5_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# DECLARE VARIABLES\nsentence = \'I like green eggs\'\n# PRINT RESULT\nprint(\'The length is \' + str(len(sentence)))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/strObjects",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.2.2.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4. Chapter 4 - Names for Strings/4.2 Strings are Objects",
                data: {
                  id: 11586,
                  base_course: "StudentCSP",
                  name: "4. Chapter 4 - Names for Strings/4.2 Strings are Objects",
                  chapter: "CSPNameStrings",
                  subchapter: "strObjects",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "immutable",
            data: {
              title: "4.3 Strings are Immutable",
              num: 300,
              chapter: "CSPNameStrings",
              subchapter: "immutable",
              id: 11587,
              numQuestions: 5
            },
            children: [
              {
                key: "String_Immutable",
                data: {
                  id: 11027,
                  base_course: "StudentCSP",
                  name: "String_Immutable",
                  chapter: "CSPNameStrings",
                  subchapter: "immutable",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Immutable data-question_label="4.3.1">\n<div id=String_Immutable_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Immutable_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: str2-line1; 2: str2-line2; 3: str2-line3; 4: str2-line4; 5: str2-line5; 6: str2-line6;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsentence = "THIS IS A TEST"\nbetter = sentence.lower()\nprint(better)\nbetterStill = better.capitalize() + "."\nprint(betterStill)\nprint(sentence)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/immutable",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Reassign",
                data: {
                  id: 11028,
                  base_course: "StudentCSP",
                  name: "String_Reassign",
                  chapter: "CSPNameStrings",
                  subchapter: "immutable",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Reassign data-question_label="4.3.2">\n<div id=String_Reassign_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Reassign_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: sa2-line1; 2: sa2-line3; 3: sa2-line2; 4: str2-line6;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsentence = "THIS IS A TEST"\nprint(sentence)\nsentence = "Hi there"\nprint(sentence)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/immutable",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.3.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_3_1_s1",
                data: {
                  id: 11029,
                  base_course: "StudentCSP",
                  name: "4_3_1_s1",
                  chapter: "CSPNameStrings",
                  subchapter: "immutable",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.3.3" data-multipleanswers="false"  id="4_3_1_s1"  style="visibility: hidden;">\n    <p>Given the following code segment, what is the value of the string s1 after these are executed?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">s1</span> <span class="o">=</span> <span class="s2">&quot;xy&quot;</span>\n<span class="n">s2</span> <span class="o">=</span> <span class="n">s1</span>\n<span class="n">s1</span> <span class="o">=</span> <span class="n">s1</span> <span class="o">+</span> <span class="n">s2</span> <span class="o">+</span> <span class="s2">&quot;z&quot;</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="4_3_1_s1_opt_a">xyz</li><li data-component="feedback">s1 will equal "xy" plus another "xy" then z at the end.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="4_3_1_s1_opt_b">xyxyz</li><li data-component="feedback">s1 contains the original value, plus itself, plus "z"</li>\n    \n    <li data-component="answer"  id="4_3_1_s1_opt_c">xy xy z</li><li data-component="feedback">No spaces are added during concatenation.</li>\n    \n    <li data-component="answer"  id="4_3_1_s1_opt_d">xy z</li><li data-component="feedback">No spaces are added during concatenation, and an additional "xy" should be included at the beginning.</li>\n    \n    <li data-component="answer"  id="4_3_1_s1_opt_e">z</li><li data-component="feedback">s1 was set to "xy" initially, so the final answer will be "xyxyz"</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/immutable",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.3.3",
                  optional: false,
                  description:
                    "Given the following code segment, what is the value of the string s1 after these",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_3_2_s2",
                data: {
                  id: 11030,
                  base_course: "StudentCSP",
                  name: "4_3_2_s2",
                  chapter: "CSPNameStrings",
                  subchapter: "immutable",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.3.4" data-multipleanswers="false"  id="4_3_2_s2"  style="visibility: hidden;">\n    <p>What is the value of s1 after the following code executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">s1</span> <span class="o">=</span> <span class="s2">&quot;HEY&quot;</span>\n<span class="n">s2</span> <span class="o">=</span> <span class="n">s1</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>\n<span class="n">s3</span> <span class="o">=</span> <span class="n">s2</span><span class="o">.</span><span class="n">capitalize</span><span class="p">()</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="4_3_2_s2_opt_a">Hey</li><li data-component="feedback">This would be correct if we had asked what the value of s3 was. What is the value of s1?</li>\n    \n    <li data-component="answer"  id="4_3_2_s2_opt_b">hey</li><li data-component="feedback">This would be true if we asked what the value of s2 was after the code executes.  What is the value of s1?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="4_3_2_s2_opt_c">HEY</li><li data-component="feedback">Strings are immutable, meaning they don\'t change.  Any function that changes a string returns a new string.  So s1 never changes unless you set it to a different string.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/immutable",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.3.4",
                  optional: false,
                  description: "What is the value of s1 after the following code executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4. Chapter 4 - Names for Strings/4.3 Strings are Immutable",
                data: {
                  id: 11587,
                  base_course: "StudentCSP",
                  name: "4. Chapter 4 - Names for Strings/4.3 Strings are Immutable",
                  chapter: "CSPNameStrings",
                  subchapter: "immutable",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "madlib",
            data: {
              title: "4.4 Making a MadLib story",
              num: 400,
              chapter: "CSPNameStrings",
              subchapter: "madlib",
              id: 11588,
              numQuestions: 10
            },
            children: [
              {
                key: "Story1",
                data: {
                  id: 11031,
                  base_course: "StudentCSP",
                  name: "Story1",
                  chapter: "CSPNameStrings",
                  subchapter: "madlib",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Story1 data-question_label="4.4.1">\n<div id=Story1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Story1_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 1: StEx-line1; 2: StEx-line2; 3: StEx-line3; 4: StEx-line4; 5: StEx-line5; 6: StEx-line6; 7: StEx-line7; 8: StEx-line8; 9: StEx-line9; 10: StEx-line10; 11: StEx-line11; 12: StEx-line12; 13: StEx-line13; 14: StEx-line14; 15: StEx-line15;*atype**doubleq*Structural tour*doubleq*; 1-5: StEx-line1-5; 6-10: StEx-line6-10; 11-15: StEx-line11-15;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfirstName = "Pat"\nlastName = "Smith"\ngender = "girl"\naddress = "65 Elm Street"\nverb = "eat"\nstart = "Once there was a " + gender + " named " + firstName + "."\nnext1 = "A good " + gender + " living at " + address + "."\nnext2 = "One day, a wicked witch came to the " + lastName + " house."\nnext3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\nending = "But " + firstName + " was smart and avoided the wicked witch."\nprint(start)\nprint(next1)\nprint(next2)\nprint (next3)\nprint(ending)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/madlib",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_4_1_Story1_Q1",
                data: {
                  id: 11032,
                  base_course: "StudentCSP",
                  name: "4_4_1_Story1_Q1",
                  chapter: "CSPNameStrings",
                  subchapter: "madlib",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.4.2" data-multipleanswers="false"  id="4_4_1_Story1_Q1"  style="visibility: hidden;">\n    <p>Now you want to add more to the story. You want it to say: “Pat called the police who took the witch away.”  Adding which of these lines to the end of the program will make that happen?  (Hint: It is okay to <em>try</em> each one!)</p>\n\n    <li data-component="answer"  id="4_4_1_Story1_Q1_opt_a">realEnding = firstName + " called the police who took the witch away."</li><li data-component="feedback">This would only work if you also put <code>print(realEnding)</code> after this line.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="4_4_1_Story1_Q1_opt_b">print(firstName + " called the police who took the witch away.")</li><li data-component="feedback">This is a good way to do this since the line that is printed will have the correct first name.  You could also make a string named <code>realEnding</code> first, and then print it.</li>\n    \n    <li data-component="answer"  id="4_4_1_Story1_Q1_opt_c">print("Pat called the police who took the witch away.")</li><li data-component="feedback">This <i>would</i> work.  But if you changed the <code>firstName</code> variable, this line would not change.  A different answer is better.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/madlib",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.4.2",
                  optional: false,
                  description:
                    'Now you want to add more to the story. You want it to say: "Pat called the polic',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Story2",
                data: {
                  id: 11033,
                  base_course: "StudentCSP",
                  name: "Story2",
                  chapter: "CSPNameStrings",
                  subchapter: "madlib",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Story2 data-question_label="4.4.3">\n<div id=Story2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Story2_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 1: story-line1; 2: story-line2; 3: story-line3; 4: story-line4; 5: story-line5; 6: story-line6; 7: story-line7; 8: story-line8; 9: story-line9; 10: story-line10; 11: story-line11; 12: story-line12; 13: story-line13; 14: story-line14; 15: story-line15;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfirstName = "Sofia"\nlastName = "Diaz"\ngender = "girl"\naddress = "1600 Pennsylvania Avenue"\nverb = "burp at"\nstart = "Once there was a " + gender + " named " + firstName + "."\nnext1 = "A good " + gender + " living at " + address + "."\nnext2 = "One day, a wicked witch came to the " + lastName + " house."\nnext3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\nending = "But " + firstName + " was smart and avoided the wicked witch."\nprint(start)\nprint(next1)\nprint(next2)\nprint(next3)\nprint(ending)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/madlib",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.4.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_4_2_Story2_Q1",
                data: {
                  id: 11034,
                  base_course: "StudentCSP",
                  name: "4_4_2_Story2_Q1",
                  chapter: "CSPNameStrings",
                  subchapter: "madlib",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.4.4" data-multipleanswers="false"  id="4_4_2_Story2_Q1"  style="visibility: hidden;">\n    <p>Would the following code print the same story as shown above?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">firstName</span> <span class="o">=</span> <span class="s2">&quot;Sofia&quot;</span>\n<span class="n">lastName</span> <span class="o">=</span> <span class="s2">&quot;Diaz&quot;</span>\n<span class="n">gender</span> <span class="o">=</span> <span class="s2">&quot;girl&quot;</span>\n<span class="n">address</span> <span class="o">=</span> <span class="s2">&quot;1600 Pennsylvania Avenue&quot;</span>\n<span class="n">verb</span> <span class="o">=</span> <span class="s2">&quot;burp at&quot;</span>\n<span class="n">start</span> <span class="o">=</span> <span class="s2">&quot;Once there was a &quot;</span> <span class="o">+</span> <span class="n">gender</span> <span class="o">+</span> <span class="s2">&quot; named &quot;</span> <span class="o">+</span> <span class="n">firstName</span> <span class="o">+</span> <span class="s2">&quot;.&quot;</span>\n<span class="nb">print</span><span class="p">(</span><span class="n">start</span><span class="p">)</span>\n<span class="n">next1</span> <span class="o">=</span> <span class="s2">&quot;A good &quot;</span> <span class="o">+</span> <span class="n">gender</span> <span class="o">+</span> <span class="s2">&quot; living at &quot;</span> <span class="o">+</span> <span class="n">address</span> <span class="o">+</span> <span class="s2">&quot;.&quot;</span>\n<span class="nb">print</span><span class="p">(</span><span class="n">next1</span><span class="p">)</span>\n<span class="n">next2</span> <span class="o">=</span> <span class="s2">&quot;One day, a wicked witch came to the &quot;</span> <span class="o">+</span> <span class="n">lastName</span> <span class="o">+</span> <span class="s2">&quot; house.&quot;</span>\n<span class="nb">print</span><span class="p">(</span><span class="n">next2</span><span class="p">)</span>\n<span class="n">next3</span> <span class="o">=</span> <span class="s2">&quot;The wicked witch was planning to &quot;</span> <span class="o">+</span> <span class="n">verb</span> <span class="o">+</span> <span class="s2">&quot; &quot;</span> <span class="o">+</span> <span class="n">firstName</span> <span class="o">+</span> <span class="s2">&quot;!&quot;</span>\n<span class="nb">print</span><span class="p">(</span><span class="n">next3</span><span class="p">)</span>\n<span class="n">ending</span> <span class="o">=</span> <span class="s2">&quot;But &quot;</span> <span class="o">+</span> <span class="n">firstName</span> <span class="o">+</span> <span class="s2">&quot; was smart and avoided the wicked witch.&quot;</span>\n<span class="nb">print</span><span class="p">(</span><span class="n">ending</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="4_4_2_Story2_Q1_opt_a">Yes</li><li data-component="feedback">The only thing that is different is when the lines are printed, but the lines are the same.</li>\n    \n    <li data-component="answer"  id="4_4_2_Story2_Q1_opt_b">No</li><li data-component="feedback">Did you try it?  Copy the code into the program area above and run it.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/madlib",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.4.4",
                  optional: false,
                  description: "Would the following code print the same story as shown above?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_4_3_StringVsVariableName",
                data: {
                  id: 11035,
                  base_course: "StudentCSP",
                  name: "4_4_3_StringVsVariableName",
                  chapter: "CSPNameStrings",
                  subchapter: "madlib",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.4.5" data-multipleanswers="false"  id="4_4_3_StringVsVariableName"  style="visibility: hidden;">\n    <p>What would the following code print?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">Mali</span> <span class="o">=</span> <span class="mi">5</span>\n<span class="nb">print</span><span class="p">(</span><span class="s2">&quot;Mali&quot;</span> <span class="o">+</span> <span class="s2">&quot; is &quot;</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">Mali</span><span class="p">))</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="4_4_3_StringVsVariableName_opt_a">Mali is Mali</li><li data-component="feedback">There are no double quotes around the last Mali so it will use the value of the variable Mali.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="4_4_3_StringVsVariableName_opt_b">Mali is 5</li><li data-component="feedback">The first Mali is in double quotes so it will print the string Mali and the second Mali is not in double quotes so it will print the value of the variable Mali.</li>\n    \n    <li data-component="answer"  id="4_4_3_StringVsVariableName_opt_c">5 is Mali</li><li data-component="feedback">The first Mali is in double quotes and the second is not.</li>\n    \n    <li data-component="answer"  id="4_4_3_StringVsVariableName_opt_d">5 is 5</li><li data-component="feedback">The first Mali is in double quotes so it is a string and the characters in the string will be printed.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/madlib",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.4.5",
                  optional: false,
                  description: "What would the following code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_4_4_Poem",
                data: {
                  id: 11036,
                  base_course: "StudentCSP",
                  name: "4_4_4_Poem",
                  chapter: "CSPNameStrings",
                  subchapter: "madlib",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="4_4_4_Poem" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>Put the blocks below into the correct order to print a twist on a famous poem.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="4.4.6"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        print("Roses are red.")\n---\nprint("Violets are blue.)\n---\nprint("Sugar is sweet.")\n---\nprint("And so is Sue.")\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/madlib",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.4.6",
                  optional: false,
                  description:
                    "Put the blocks below into the correct order to print a twist on a famous poem. -",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_4_5_Story",
                data: {
                  id: 11037,
                  base_course: "StudentCSP",
                  name: "4_4_5_Story",
                  chapter: "CSPNameStrings",
                  subchapter: "madlib",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="4_4_5_Story" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>Put the blocks below into the correct order to declare the variables and then print the following story. One day Jay went shopping.  He wanted to buy shoes.  But, he didn’t like any.  So, Jay went home.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="4.4.7"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        name = "Jay"\nitem = "shoes"\n---\nprint("One day " + name + " went shopping.")\n---\nprint("He wanted to buy " + item + ".")\n---\nprint("But, he didn\'t like any.")\n---\nprint("So, " + name + " went home.")\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/madlib",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.4.7",
                  optional: false,
                  description:
                    "Put the blocks below into the correct order to declare the variables and then pr",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_4_6_WSq",
                data: {
                  id: 11038,
                  base_course: "StudentCSP",
                  name: "4_4_6_WSq",
                  chapter: "CSPNameStrings",
                  subchapter: "madlib",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=4_4_6_WSq data-question_label="4.4.8">\n<div id=4_4_6_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="4_4_6_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/madlib",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.4.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4_4_6_WSa",
                data: {
                  id: 11039,
                  base_course: "StudentCSP",
                  name: "4_4_6_WSa",
                  chapter: "CSPNameStrings",
                  subchapter: "madlib",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=4_4_6_WSa data-question_label="4.4.9">\n<div id=4_4_6_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="4_4_6_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# DECLARE VARIABLES\nratePerMinute = .3\nminutesPerHour = 60\n# CREATE FORMULA\ntotalBlocks = ratePerMinute * minutesPerHour\n# PROCESS AND DISPLAY RESULT\nprint("I will travel " + str(totalBlocks) + " blocks in an hour if I walk " + str(ratePerMinute) + " blocks every minute.")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/madlib",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.4.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4. Chapter 4 - Names for Strings/4.4 Making a MadLib story",
                data: {
                  id: 11588,
                  base_course: "StudentCSP",
                  name: "4. Chapter 4 - Names for Strings/4.4 Making a MadLib story",
                  chapter: "CSPNameStrings",
                  subchapter: "madlib",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "4.5 Chapter 4 - Summary",
              num: 500,
              chapter: "CSPNameStrings",
              subchapter: "summary",
              id: 11589,
              numQuestions: 1
            },
            children: [
              {
                key: "4. Chapter 4 - Names for Strings/4.5 Chapter 4 - Summary",
                data: {
                  id: 11589,
                  base_course: "StudentCSP",
                  name: "4. Chapter 4 - Names for Strings/4.5 Chapter 4 - Summary",
                  chapter: "CSPNameStrings",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "4.6 Chapter 4 Exercises",
              num: 600,
              chapter: "CSPNameStrings",
              subchapter: "Exercises",
              id: 11590,
              numQuestions: 21
            },
            children: [
              {
                key: "ch4ex1q",
                data: {
                  id: 11001,
                  base_course: "StudentCSP",
                  name: "ch4ex1q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex1q data-question_label="4.6.1">\n<div id=ch4ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ncolor = "red\'\nname = \'Carly\'\nprint("Your name is " + name +\n      and your favorite color is" + color + ".")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex2q",
                data: {
                  id: 11002,
                  base_course: "StudentCSP",
                  name: "ch4ex2q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex2q data-question_label="4.6.2">\n<div id=ch4ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nname = Sam\nage = 12\nprint("My name is name and I am" + age + "years old".)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex3q",
                data: {
                  id: 11003,
                  base_course: "StudentCSP",
                  name: "ch4ex3q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex3q data-question_label="4.6.3">\n<div id=ch4ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nage = 5\nname = \'Carly\'\nprint("Your name is" + name +\n      "and your age is" + age + ".")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex4q",
                data: {
                  id: 11004,
                  base_course: "StudentCSP",
                  name: "ch4ex4q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex4q data-question_label="4.6.4">\n<div id=ch4ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nmilesPerHour = 70\ndistanceTravelled = 140\ntimeTaken = milesPerHour / distanceTravelled\nprint(timeTaken)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex5q",
                data: {
                  id: 11005,
                  base_course: "StudentCSP",
                  name: "ch4ex5q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex5q data-question_label="4.6.5">\n<div id=ch4ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nage = input("How old are you?")\nname = input ("What is your first name?")\nprint ("Your name is " + Name\n       " and you are "  age "years old.")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex6q",
                data: {
                  id: 11006,
                  base_course: "StudentCSP",
                  name: "ch4ex6q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex6q data-question_label="4.6.6">\n<div id=ch4ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfruit = apple\nprice = 5\nprint("The" fruit "costs $" + "price")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex7q",
                data: {
                  id: 11007,
                  base_course: "StudentCSP",
                  name: "ch4ex7q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex7q data-question_label="4.6.7">\n<div id=ch4ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfunds = 25\nmilesPerGallon = 40\npricePerGallon = 3.65\nnumGallons = funds / pricePerGallon\nnumMiles = milesPerGallon * numGallons\nprint(numMiles)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex8q",
                data: {
                  id: 11008,
                  base_course: "StudentCSP",
                  name: "ch4ex8q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex8q data-question_label="4.6.8">\n<div id=ch4ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsentence = "There is a giant alligator over there."\ns1 =\nprint(s1)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex9q",
                data: {
                  id: 11009,
                  base_course: "StudentCSP",
                  name: "ch4ex9q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex9q data-question_label="4.6.9">\n<div id=ch4ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnumPeople = 5\namountPerPerson = 4\nprice = 0.5\ntotal = numPeople * amountPerPerson\nnumWings =  total / price\nprint(numWings)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex10q",
                data: {
                  id: 11010,
                  base_course: "StudentCSP",
                  name: "ch4ex10q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex10q data-question_label="4.6.10">\n<div id=ch4ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsentence = "The cat goes meow."\ns2 = [16:13]sentence\nprint(s2)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex11q",
                data: {
                  id: 11011,
                  base_course: "StudentCSP",
                  name: "ch4ex11q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex11q data-question_label="4.6.11">\n<div id=ch4ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ntotalMinutes = 270\nnumMinutes = totalMinutes % 60\nnumHours = (totalMinutes - numMinutes) / 60\nprint(numHours)\nprint(numMinutes)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex12q",
                data: {
                  id: 11012,
                  base_course: "StudentCSP",
                  name: "ch4ex12q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex12q data-question_label="4.6.12">\n<div id=ch4ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsentence = "This is his wish."\nsentence2 = "His only wish is this."\npos =  .find("is")\nlength = len( )\nprint(length)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex13q",
                data: {
                  id: 11013,
                  base_course: "StudentCSP",
                  name: "ch4ex13q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex13q data-question_label="4.6.13">\n<div id=ch4ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ntankCapacity = 10\nnumGallons =\nmilesPerGallon = 32\nnumMiles =\nprint()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex14q",
                data: {
                  id: 11014,
                  base_course: "StudentCSP",
                  name: "ch4ex14q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex14q data-question_label="4.6.14">\n<div id=ch4ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ns1 = "hi"\ns1.capitalize()\nprint(s1)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex15q",
                data: {
                  id: 11015,
                  base_course: "StudentCSP",
                  name: "ch4ex15q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex15q data-question_label="4.6.15">\n<div id=ch4ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex16q",
                data: {
                  id: 11016,
                  base_course: "StudentCSP",
                  name: "ch4ex16q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex16q data-question_label="4.6.16">\n<div id=ch4ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex17q",
                data: {
                  id: 11017,
                  base_course: "StudentCSP",
                  name: "ch4ex17q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex17q data-question_label="4.6.17">\n<div id=ch4ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex18q",
                data: {
                  id: 11018,
                  base_course: "StudentCSP",
                  name: "ch4ex18q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex18q data-question_label="4.6.18">\n<div id=ch4ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ns1 = "hi"\ns2 = "My namesake is Bob, and he and I love to eat ham."\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex19q",
                data: {
                  id: 11019,
                  base_course: "StudentCSP",
                  name: "ch4ex19q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex19q data-question_label="4.6.19">\n<div id=ch4ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex20q",
                data: {
                  id: 11020,
                  base_course: "StudentCSP",
                  name: "ch4ex20q",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch4ex20q data-question_label="4.6.20">\n<div id=ch4ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch4ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.6.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4. Chapter 4 - Names for Strings/4.6 Chapter 4 Exercises",
                data: {
                  id: 11590,
                  base_course: "StudentCSP",
                  name: "4. Chapter 4 - Names for Strings/4.6 Chapter 4 Exercises",
                  chapter: "CSPNameStrings",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "StringPracticeParsons",
            data: {
              title: "4.7 Mixed Up Code Practice",
              num: 700,
              chapter: "CSPNameStrings",
              subchapter: "StringPracticeParsons",
              id: 52400,
              numQuestions: 11
            },
            children: [
              {
                key: "ch4ex1muc",
                data: {
                  id: 30172,
                  base_course: "StudentCSP",
                  name: "ch4ex1muc",
                  chapter: "CSPNameStrings",
                  subchapter: "StringPracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch4ex1muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following code should print Maria’s first name on one line and her last name on the next line.  But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the blocks from the left and put them in the correct order on the right.  Click the <em>Check Me</em> button to check your solution.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="4.7.1"   data-adaptive="true"    data-noindent="true"     style="visibility: hidden;">\n        firstName = "Maria"\nlastName = "Hernandez"\n---\nprint(firstName)\n---\nprint(lastName)\n---\nprint(Maria) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/StringPracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.7.1",
                  optional: false,
                  description:
                    "The following code should print Maria's first name on one line and her last name",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex2muc",
                data: {
                  id: 30173,
                  base_course: "StudentCSP",
                  name: "ch4ex2muc",
                  chapter: "CSPNameStrings",
                  subchapter: "StringPracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch4ex2muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following code should print the words to a famous poem. But the blocks have been mixed up.  Drag the blocks from the left and put them in the correct order on the right.  Click the <em>Check Me</em> button to check your solution.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="4.7.2"   data-adaptive="true"    data-noindent="true"     style="visibility: hidden;">\n        print("Roses are red")\n---\nprint("Violets are blue")\n---\nprint("Sugar is sweet")\n---\nprint("And so are you")\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/StringPracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.7.2",
                  optional: false,
                  description:
                    "The following code should print the words to a famous poem. But the blocks have ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex3muc",
                data: {
                  id: 30174,
                  base_course: "StudentCSP",
                  name: "ch4ex3muc",
                  chapter: "CSPNameStrings",
                  subchapter: "StringPracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch4ex3muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following code should print a sentence about Marcus’ favorite color on one line. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the <em>Check Me</em> button to check your solution.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="4.7.3"   data-adaptive="true"    data-noindent="true"     style="visibility: hidden;">\n        name = "Marcus"\ncolor = "Blue"\n---\nsentence = name + " likes " + color + "."\n---\nprint(sentence)\n---\nprint(name, color) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/StringPracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.7.3",
                  optional: false,
                  description:
                    "The following code should print a sentence about Marcus' favorite color on one l",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex4muc",
                data: {
                  id: 30175,
                  base_course: "StudentCSP",
                  name: "ch4ex4muc",
                  chapter: "CSPNameStrings",
                  subchapter: "StringPracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch4ex4muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following code should print the first 2 characters of the message followed by the last 2 characters of the message. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the <em>Check Me</em> button to check your solution.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="4.7.4"   data-adaptive="true"    data-noindent="true"     style="visibility: hidden;">\n        message = "I hope this works"\nlength = len(message)\n---\npart1 = message[0:2]\npart2 = message[length - 2: length]\n---\nprint(part1 + part2)\n---\nprint(part1 * part2) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/StringPracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.7.4",
                  optional: false,
                  description:
                    "The following code should print the first 2 characters of the message followed b",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex5muc",
                data: {
                  id: 30176,
                  base_course: "StudentCSP",
                  name: "ch4ex5muc",
                  chapter: "CSPNameStrings",
                  subchapter: "StringPracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch4ex5muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following code should print the name in upper case letters on one line followed by the age on the next line. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the <em>Check Me</em> button to check your solution.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="4.7.5"   data-adaptive="true"    data-noindent="true"     style="visibility: hidden;">\n        name = "Layla"\nage = "16"\n---\nnameUp = name.upper()\n---\nprint("Your name is " + nameUp)\n---\nprint("Your age is " + age)\n---\nprint("Your name is " name) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/StringPracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.7.5",
                  optional: false,
                  description:
                    "The following code should print the name in upper case letters on one line follo",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex6muc",
                data: {
                  id: 30177,
                  base_course: "StudentCSP",
                  name: "ch4ex6muc",
                  chapter: "CSPNameStrings",
                  subchapter: "StringPracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch4ex6muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following code should print out the index of the name Tom in a sentence. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the <em>Check Me</em> button to check your solution.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="4.7.6"   data-adaptive="true"    data-noindent="true"     style="visibility: hidden;">\n        sentence = "Karl gave Tom the new bike lock this morning"\n---\nplace = sentence.find("Tom")\n---\nprint(place)\n---\nplace = sentence.slice("Tom") #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/StringPracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.7.6",
                  optional: false,
                  description:
                    "The following code should print out the index of the name Tom in a sentence. But",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex7muc",
                data: {
                  id: 30178,
                  base_course: "StudentCSP",
                  name: "ch4ex7muc",
                  chapter: "CSPNameStrings",
                  subchapter: "StringPracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch4ex7muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following code should print the initials in lowercase letters. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the <em>Check Me</em> button to check your solution.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="4.7.7"   data-adaptive="true"    data-noindent="true"     style="visibility: hidden;">\n        first = "Gerald"\nmiddle = "Foster"\nlast= "Jones"\n---\ninitials = first[0:1] + middle[0:1] + last[0:1]\n---\nlowerInitials = initials.lower()\n---\nprint(lowerInitials)\n---\nprint(initials) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/StringPracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.7.7",
                  optional: false,
                  description:
                    "The following code should print the initials in lowercase letters. But, the bloc",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex8muc",
                data: {
                  id: 30179,
                  base_course: "StudentCSP",
                  name: "ch4ex8muc",
                  chapter: "CSPNameStrings",
                  subchapter: "StringPracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch4ex8muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following code should print the message in all uppercase letters. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the <em>Check Me</em> button to check your solution.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="4.7.8"   data-adaptive="true"    data-noindent="true"     style="visibility: hidden;">\n        message = "Don\'t Pokemon and drive!"\n---\nupperMessage = message.upper()\n---\nprint(upperMessage)\n---\nprint(Message) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/StringPracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.7.8",
                  optional: false,
                  description:
                    "The following code should print the message in all uppercase letters. But, the b",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex9muc",
                data: {
                  id: 30180,
                  base_course: "StudentCSP",
                  name: "ch4ex9muc",
                  chapter: "CSPNameStrings",
                  subchapter: "StringPracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch4ex9muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following code should print the first 3 letters of message in uppercase letters. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the <em>Check Me</em> button to check your solution.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="4.7.9"   data-adaptive="true"    data-noindent="true"     style="visibility: hidden;">\n        message = "Have a nice day!"\n---\npart = message[0:3]\n---\nupper = part.upper()\n---\nprint(upper)\n---\npart = message[0:4] #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/StringPracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.7.9",
                  optional: false,
                  description:
                    "The following code should print the first 3 letters of message in uppercase lett",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch4ex10muc",
                data: {
                  id: 30181,
                  base_course: "StudentCSP",
                  name: "ch4ex10muc",
                  chapter: "CSPNameStrings",
                  subchapter: "StringPracticeParsons",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch4ex10muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following code should print the part of the message starting with the word “nice”.  But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the <em>Check Me</em> button to check your solution.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="4.7.10"   data-adaptive="true"    data-noindent="true"     style="visibility: hidden;">\n        message = "Have a nice day!"\n---\npos = message.find("nice")\nend = len(message)\n---\nprint(message[pos:end])\n---\npos = message.find("Nice")\nend = len(message) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameStrings/StringPracticeParsons",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.7.10",
                  optional: false,
                  description:
                    'The following code should print the part of the message starting with the word "',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4. Chapter 4 - Names for Strings/4.7 Mixed Up Code Practice",
                data: {
                  id: 52400,
                  base_course: "StudentCSP",
                  name: "4. Chapter 4 - Names for Strings/4.7 Mixed Up Code Practice",
                  chapter: "CSPNameStrings",
                  subchapter: "StringPracticeParsons",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam3a4",
            data: {
              title: "4.8 Exam Questions for Chapters 3 and 4",
              num: 800,
              chapter: "CSPNameStrings",
              subchapter: "exam3a4",
              id: 11591,
              numQuestions: 7
            },
            children: [
              {
                key: "e3a4_1",
                data: {
                  id: 11021,
                  base_course: "StudentCSP",
                  name: "e3a4_1",
                  chapter: "CSPNameStrings",
                  subchapter: "exam3a4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.8.2" data-multipleanswers="false"  id="e3a4_1"  style="visibility: hidden;">\n    <p>What is printed after the following code is run?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;John Smith&quot;</span>\n<span class="n">words</span> <span class="o">=</span> <span class="s2">&quot; likes to play outside.&quot;</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">name</span> <span class="o">+</span> <span class="n">words</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e3a4_1_opt_a">namewords</li><li data-component="feedback">This would be true if it was print ("name" + "words"), but name and words are not in quotes so the value of each will be printed.</li>\n    \n    <li data-component="answer"  id="e3a4_1_opt_b">name + words</li><li data-component="feedback">This would be true if it was print ("name + words").</li>\n    \n    <li data-component="answer"  id="e3a4_1_opt_c">John Smith + likes to play outside.</li><li data-component="feedback">The would be true if it was print (name + " +" + words).</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e3a4_1_opt_d">John Smith likes to play outside.</li><li data-component="feedback">When you use a variable name in a print statement the value of the variable is printed.  The + sign is used to join strings together.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/exam3a4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.8.2",
                  optional: false,
                  description: "What is printed after the following code is run?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e3a4_2",
                data: {
                  id: 11022,
                  base_course: "StudentCSP",
                  name: "e3a4_2",
                  chapter: "CSPNameStrings",
                  subchapter: "exam3a4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.8.3" data-multipleanswers="false"  id="e3a4_2"  style="visibility: hidden;">\n    <p>In the following code, what does the “=” do?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">cat</span> <span class="o">=</span> <span class="s2">&quot;meow&quot;</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e3a4_2_opt_a">Tests to see if the values on each side of the expression are equal</li><li data-component="feedback">This would be true if it was cat == "meow"</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e3a4_2_opt_b">Assigns the name on the left to the value on the right</li><li data-component="feedback">A name on the left and a value on the right creates a variable with that name and that value.</li>\n    \n    <li data-component="answer"  id="e3a4_2_opt_c">Copies the value from the right to the left</li><li data-component="feedback">This would be true if it was a variable name on the right instead of a string.</li>\n    \n    <li data-component="answer"  id="e3a4_2_opt_d">Creates two new objects, one named cat and one named meow</li><li data-component="feedback">This creates a variable and sets its value.  It doesn\'t create an object.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/exam3a4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.8.3",
                  optional: false,
                  description: 'In the following code, what does the "=" do?',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e3a4_3",
                data: {
                  id: 11023,
                  base_course: "StudentCSP",
                  name: "e3a4_3",
                  chapter: "CSPNameStrings",
                  subchapter: "exam3a4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.8.4" data-multipleanswers="false"  id="e3a4_3"  style="visibility: hidden;">\n    <p>Which of the following line(s) of code will print out “My name is Morrissey”?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">I</span><span class="o">.</span>   <span class="nb">print</span> <span class="p">(</span><span class="n">My</span> <span class="n">name</span> <span class="ow">is</span> <span class="n">Morrissey</span><span class="p">)</span>\n<span class="n">II</span><span class="o">.</span>  <span class="n">var1</span> <span class="o">=</span> <span class="s2">&quot;My name is &quot;</span>\n     <span class="n">var2</span> <span class="o">=</span> <span class="s2">&quot;Morrissey&quot;</span>\n     <span class="n">var3</span> <span class="o">=</span> <span class="n">var1</span> <span class="o">+</span> <span class="n">var2</span>\n     <span class="nb">print</span> <span class="p">(</span><span class="n">var3</span><span class="p">)</span>\n<span class="n">III</span><span class="o">.</span> <span class="n">M</span> <span class="o">=</span> <span class="s2">&quot;M&quot;</span>\n     <span class="n">orrissey</span> <span class="o">=</span> <span class="s2">&quot;orrissey&quot;</span>\n     <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;My name is &quot;</span> <span class="o">+</span> <span class="n">Morrissey</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e3a4_3_opt_a">I only</li><li data-component="feedback">There are no quotes around the string so this gives an error.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e3a4_3_opt_b">II only</li><li data-component="feedback">When you use \'+\' it appends the strings together so this will print the correct string</li>\n    \n    <li data-component="answer"  id="e3a4_3_opt_c">III only</li><li data-component="feedback">Answer III will not work since there is no variable called Morrissey.</li>\n    \n    <li data-component="answer"  id="e3a4_3_opt_d">all of them</li><li data-component="feedback">Answer II will work, but not answer I or answer III.  Number I has no quotes around the string. In III there is no variable called Morrissey.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/exam3a4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.8.4",
                  optional: false,
                  description:
                    'Which of the following line(s) of code will print out "My name is Morrissey"?',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e3a4_4",
                data: {
                  id: 11024,
                  base_course: "StudentCSP",
                  name: "e3a4_4",
                  chapter: "CSPNameStrings",
                  subchapter: "exam3a4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.8.5" data-multipleanswers="false"  id="e3a4_4"  style="visibility: hidden;">\n    <p>What is printed after the following executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">result</span> <span class="o">=</span> <span class="mi">5</span> <span class="o">%</span> <span class="mi">2</span>\n<span class="nb">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e3a4_4_opt_a">0</li><li data-component="feedback">This would be true if it was 4 % 2 since 2 goes in evenly into 4.</li>\n    \n    <li data-component="answer"  id="e3a4_4_opt_b">2</li><li data-component="feedback">This would be true if you were trying to divide 5 by a number that was larger than 5.</li>\n    \n    <li data-component="answer"  id="e3a4_4_opt_c">5</li><li data-component="feedback">This would be true if it was 5 % 3.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e3a4_4_opt_d">1</li><li data-component="feedback">2 goes into 5 2 times with a remainder of 1.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/exam3a4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.8.5",
                  optional: false,
                  description: "What is printed after the following executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e3a4_5",
                data: {
                  id: 11025,
                  base_course: "StudentCSP",
                  name: "e3a4_5",
                  chapter: "CSPNameStrings",
                  subchapter: "exam3a4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.8.6" data-multipleanswers="false"  id="e3a4_5"  style="visibility: hidden;">\n    <p>What is the value of var2 after the following code executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">var2</span> <span class="o">=</span> <span class="mi">3</span>\n<span class="n">var1</span> <span class="o">=</span> <span class="mi">10</span>\n<span class="n">var2</span> <span class="o">=</span> <span class="n">var1</span>\n<span class="n">var3</span> <span class="o">=</span> <span class="n">var2</span>\n<span class="n">var1</span> <span class="o">=</span> <span class="mi">18</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e3a4_5_opt_a">3</li><li data-component="feedback">While var2 starts out set to 3 it changes when it is set to a copy of the value in var1.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e3a4_5_opt_b">10</li><li data-component="feedback">While var2 starts out set to 3 it changes to a copy of the value in var1 which is 10.</li>\n    \n    <li data-component="answer"  id="e3a4_5_opt_c">18</li><li data-component="feedback">This is the value of var1 after the code executes.</li>\n    \n    <li data-component="answer"  id="e3a4_5_opt_d">0</li><li data-component="feedback">You would have to set var2 to 0 at some point for this to be true.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/exam3a4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.8.6",
                  optional: false,
                  description: "What is the value of var2 after the following code executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e3a4_6",
                data: {
                  id: 11026,
                  base_course: "StudentCSP",
                  name: "e3a4_6",
                  chapter: "CSPNameStrings",
                  subchapter: "exam3a4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="4.8.7" data-multipleanswers="false"  id="e3a4_6"  style="visibility: hidden;">\n    <p>What is the value of sentence after the following code executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">sentence</span> <span class="o">=</span> <span class="s2">&quot;THIS IS A TEST&quot;</span>\n<span class="n">better</span> <span class="o">=</span> <span class="n">sentence</span><span class="o">.</span><span class="n">lower</span><span class="p">()</span>\n<span class="n">betterStill</span> <span class="o">=</span> <span class="n">better</span><span class="o">.</span><span class="n">capitalize</span><span class="p">()</span> <span class="o">+</span> <span class="s2">&quot;.&quot;</span>\n<span class="n">more</span> <span class="o">=</span> <span class="n">sentence</span> <span class="o">+</span> <span class="s2">&quot;, really!&quot;</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="e3a4_6_opt_a">THIS IS A TEST</li><li data-component="feedback">Strings are immutable.  Any change to a string returns a new string.</li>\n    \n    <li data-component="answer"  id="e3a4_6_opt_b">this is a test</li><li data-component="feedback">This would be true if the question asked for the value of better.</li>\n    \n    <li data-component="answer"  id="e3a4_6_opt_c">This is a test</li><li data-component="feedback">This would be true if the question asked for the value of betterStill</li>\n    \n    <li data-component="answer"  id="e3a4_6_opt_d">This is a test, really!</li><li data-component="feedback">This would be true if the question asked for the value of more.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameStrings/exam3a4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "4.8.7",
                  optional: false,
                  description: "What is the value of sentence after the following code executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "4. Chapter 4 - Names for Strings/4.8 Exam Questions for Chapters 3 and 4",
                data: {
                  id: 11591,
                  base_course: "StudentCSP",
                  name: "4. Chapter 4 - Names for Strings/4.8 Exam Questions for Chapters 3 and 4",
                  chapter: "CSPNameStrings",
                  subchapter: "exam3a4",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPNameTurtles",
        data: {
          title: "5. Chapter 5 - Names for Turtles",
          num: 5
        },
        children: [
          {
            key: "names4turtles",
            data: {
              title: "5.1 Assign a Name to a Turtle",
              num: 100,
              chapter: "CSPNameTurtles",
              subchapter: "names4turtles",
              id: 11592,
              numQuestions: 5
            },
            children: [
              {
                key: "Turtle_1_Again",
                data: {
                  id: 11095,
                  base_course: "StudentCSP",
                  name: "Turtle_1_Again",
                  chapter: "CSPNameTurtles",
                  subchapter: "names4turtles",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_1_Again data-question_label="5.1.1">\n<div id=Turtle_1_Again_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_1_Again_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: first-turtle-line-1; 2: first-turtle-line-2; 3: first-turtle-line-3; 4: first-turtle-line-4; 5: first-turtle-line-5; 6: first-turtle-line-6;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *        # use the turtle library\nspace = Screen()            # create a turtle space\nalex = Turtle()             # create a turtle named alex\nalex.forward(150)           # move forward by 150 units\nalex.left(90)               # turn left 90 degrees\nalex.forward(75)            # move forward by 75 units\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/names4turtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.1.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_1_1_Turtle_Dir_Q1",
                data: {
                  id: 11096,
                  base_course: "StudentCSP",
                  name: "5_1_1_Turtle_Dir_Q1",
                  chapter: "CSPNameTurtles",
                  subchapter: "names4turtles",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="5.1.2" data-multipleanswers="false"  id="5_1_1_Turtle_Dir_Q1"  style="visibility: hidden;">\n    <p>Which way does a turtle face when it is first created?</p>\n\n    <li data-component="answer"  id="5_1_1_Turtle_Dir_Q1_opt_a">North</li><li data-component="feedback">The turtles in some of the examples faced north because of the <code>setheading(90)</code> instruction. Which way does chad move first?</li>\n    \n    <li data-component="answer"  id="5_1_1_Turtle_Dir_Q1_opt_b">South</li><li data-component="feedback">Which way does chad first move in the example above?  North is at the top of the page.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="5_1_1_Turtle_Dir_Q1_opt_c">East</li><li data-component="feedback">Turtles start off facing east which is toward the right side of the page.</li>\n    \n    <li data-component="answer"  id="5_1_1_Turtle_Dir_Q1_opt_d">West</li><li data-component="feedback">Which way does the turtle first move in the example above?   North is at the top of the page.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameTurtles/names4turtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.1.2",
                  optional: false,
                  description: "Which way does a turtle face when it is first created?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_1_1_Turtle_L",
                data: {
                  id: 11097,
                  base_course: "StudentCSP",
                  name: "5_1_1_Turtle_L",
                  chapter: "CSPNameTurtles",
                  subchapter: "names4turtles",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="5_1_1_Turtle_L" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses a turtle to draw a capital L as shown below, but the lines are mixed up.  The program should do all necessary set-up: import the turtle module, get the space to draw on, and create the turtle.  The turtle should turn to face south, draw a line that is 150 pixels long, then turn to face east, and draw a line that is 75 pixels long.  We have added a compass to the picture to indicate the directions north, south, west, and east. Drag the needed blocks of statements from the left column to the right column and put them in the right order.  There may be additional blocks that are not needed in a correct solution.  Then click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/TurtleL4.png"><img alt="../_images/TurtleL4.png" class="align-center" src="../_images/TurtleL4.png" style="width: 200px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.1.1.1"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nfrom turtle Import * #paired\n---\nspace = Screen()\n---\nspace = screen() #paired\n---\nella = Turtle()\n---\nella.right(90)\n---\nella.turn(90) #paired\n---\nella.forward(150)\n---\nella.left(90)\n---\nella.forward(75)\n---\nella.go(75) #paired\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/names4turtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.1.1.1",
                  optional: false,
                  description:
                    "The following program uses a turtle to draw a capital L as shown below, but the ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_1_2_Turtle_Check",
                data: {
                  id: 11098,
                  base_course: "StudentCSP",
                  name: "5_1_2_Turtle_Check",
                  chapter: "CSPNameTurtles",
                  subchapter: "names4turtles",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="5_1_2_Turtle_Check" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <a class="reference internal image-reference" href="../_images/checkMark.png"><img alt="../_images/checkMark.png" class="align-center" src="../_images/checkMark.png" style="width: 200px;" /></a>\n<p>The following program uses a turtle to draw a checkmark as shown below but the lines are mixed up.  The program should do all necessary set-up: import the turtle module, get the space to draw on, and create the turtle.  The turtle should turn to face southeast, draw a line that is 75 pixels long, then turn to face northeast, and draw a line that is 150 pixels long.  We have added a compass to the picture to indicate the directions north, south, west, and east.  Northeast is between north and east. Southeast is between south and east. Drag the needed blocks of statements from the left column to the right column and put them in the right order.  There may be additional blocks that are not needed in a correct solution.  Then click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.1.1.2"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nspace = Screen()\n---\nmaria = Turtle()\n---\nmaria = Turtle #paired\n---\nmaria.right(45)\n---\nmaria.left(45) #paired\n---\nmaria.forward(75)\n---\nmaria.Forward(75) #paired\n---\nmaria.left(90)\n---\nmaria.right(90) #paired\n---\nmaria.forward(150)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/names4turtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.1.1.2",
                  optional: false,
                  description:
                    ".. image:: Figures/checkMark.png    :width: 200px    :align: center",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5. Chapter 5 - Names for Turtles/5.1 Assign a Name to a Turtle",
                data: {
                  id: 11592,
                  base_course: "StudentCSP",
                  name: "5. Chapter 5 - Names for Turtles/5.1 Assign a Name to a Turtle",
                  chapter: "CSPNameTurtles",
                  subchapter: "names4turtles",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "FuncAndProc",
            data: {
              title: "5.2 Procedures and Functions",
              num: 200,
              chapter: "CSPNameTurtles",
              subchapter: "FuncAndProc",
              id: 11593,
              numQuestions: 6
            },
            children: [
              {
                key: "5_2_1_LetterC_fill",
                data: {
                  id: 11051,
                  base_course: "StudentCSP",
                  name: "5_2_1_LetterC_fill",
                  chapter: "CSPNameTurtles",
                  subchapter: "FuncAndProc",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="5.2.1" id="5_2_1_LetterC_fill"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What letter (like A, B, C, D, etc) will the program below draw in block style when you click on the Run button?</p>\\n<input type=\\"text\\" name=\'\' />", "dyn_vars": null, "blankNames": {}, "feedbackArray": [[{"regex": "^\\\\s*^c$|^C$\\\\s*$", "regexFlags": "", "feedback": "<p>Correct!</p>\\n"}, {"regex": "^\\\\s*.*\\\\s*$", "regexFlags": "", "feedback": "<p>Try to follow the directions as if you are the turtle</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/FuncAndProc",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.2.1",
                  optional: false,
                  description:
                    "What letter (like A, B, C, D, etc) will the program below draw in block style wh",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_C",
                data: {
                  id: 11052,
                  base_course: "StudentCSP",
                  name: "Turtle_C",
                  chapter: "CSPNameTurtles",
                  subchapter: "FuncAndProc",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_C data-question_label="5.2.2">\n<div id=Turtle_C_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_C_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *    # use the turtle library\nspace = Screen()        # create a turtle space\nalex = Turtle()         # create a turtle named alex\nalex.left(180)          # turn alex by 180 degrees\nalex.forward(75)        # move forward by 75 units\nalex.left(90)           # turn left 90 degrees\nalex.forward(100)       # more forward by 100 units\nalex.left(90)           # turn left 90 degrees\nalex.forward(75)        # move forward by 75 units\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/FuncAndProc",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.2.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_2_2_FuncOrProc",
                data: {
                  id: 11053,
                  base_course: "StudentCSP",
                  name: "5_2_2_FuncOrProc",
                  chapter: "CSPNameTurtles",
                  subchapter: "FuncAndProc",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="5.2.3" data-multipleanswers="false"  id="5_2_2_FuncOrProc"  style="visibility: hidden;">\n    <p>Is right(90) a function or procedure?</p>\n\n    <li data-component="answer"  id="5_2_2_FuncOrProc_opt_a">function</li><li data-component="feedback">Does it return a value?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="5_2_2_FuncOrProc_opt_b">procedure</li><li data-component="feedback">The right procedure will cause the turtle to turn right by the specified number of degrees and doesn\'t return any value so it is a procedure.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameTurtles/FuncAndProc",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.2.3",
                  optional: false,
                  description: "Is right(90) a function or procedure?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_2_1_Turtle-T",
                data: {
                  id: 11054,
                  base_course: "StudentCSP",
                  name: "5_2_1_Turtle-T",
                  chapter: "CSPNameTurtles",
                  subchapter: "FuncAndProc",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="5_2_1_Turtle-T" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses a turtle to draw a capital T as shown below but the lines are mixed up.  The program should do all necessary set-up: import the turtle module, get the space to draw on, and create the turtle.  After that the turtle should draw the lines in the numbered order as shown in the picture on the left. Drag the needed blocks of statements from the left column to the right column and put them in the right order.  Then click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/TurtleT1.png"><img alt="../_images/TurtleT1.png" class="align-center" src="../_images/TurtleT1.png" style="width: 200px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.2.4"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nspace = Screen()\njamal = Turtle()\n---\njamal.left(90)\n---\njamal.Left(90) #distractor\n---\njamal.forward(150)\n---\njamal.Forward(150) #distractor\n---\njamal.left(90)\njamal.forward(50)\n---\njamal.right(180)\n---\njamal.turn(180) #distractor\n---\njamal.forward(100)\n---\njamal.forward(100 #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/FuncAndProc",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.2.4",
                  optional: false,
                  description:
                    "The following program uses a turtle to draw a capital T as shown below but the l",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_2_2_Turtle-A",
                data: {
                  id: 11055,
                  base_course: "StudentCSP",
                  name: "5_2_2_Turtle-A",
                  chapter: "CSPNameTurtles",
                  subchapter: "FuncAndProc",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="5_2_2_Turtle-A" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses a turtle to draw a capital A as shown below, but the lines are mixed up.  The program should do all necessary set-up: import the turtle module, get the space to draw on, and create the turtle.  After that the turtle should draw the lines in the numbered order as shown in the picture on the left. Drag the needed blocks of statements from the left column to the right column and put them in the right order.  Then click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/turtleA2.png"><img alt="../_images/turtleA2.png" class="align-center" src="../_images/turtleA2.png" style="width: 200px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.2.5"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\nspace = Screen()\n---\njamal = Turtle()\n---\njamal = Turtle) #distractor\n---\njamal.left(70)\n---\njamal.left(90) #distractor\n---\njamal.forward(100)\njamal.right(135)\n---\njamal.forward(100)\n---\njamal.forward(100 #distractor\n---\njamal.right(180)\njamal.forward(50)\n---\njamal.right(180)\njamal.Forward(50) #distractor\n---\njamal.left(65)\njamal.forward(45)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/FuncAndProc",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.2.5",
                  optional: false,
                  description:
                    "The following program uses a turtle to draw a capital A as shown below, but the ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5. Chapter 5 - Names for Turtles/5.2 Procedures and Functions",
                data: {
                  id: 11593,
                  base_course: "StudentCSP",
                  name: "5. Chapter 5 - Names for Turtles/5.2 Procedures and Functions",
                  chapter: "CSPNameTurtles",
                  subchapter: "FuncAndProc",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "TurtlePractice",
            data: {
              title: "5.3 Practice with Turtles",
              num: 300,
              chapter: "CSPNameTurtles",
              subchapter: "TurtlePractice",
              id: 11594,
              numQuestions: 7
            },
            children: [
              {
                key: "Turtle_C2",
                data: {
                  id: 11056,
                  base_course: "StudentCSP",
                  name: "Turtle_C2",
                  chapter: "CSPNameTurtles",
                  subchapter: "TurtlePractice",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_C2 data-question_label="5.3.1">\n<div id=Turtle_C2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_C2_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *    # use the turtle library\nspace = Screen()        # create a turtle space\nalex = Turtle()         # create a turtle named alex\nalex.left(180)          # turn alex by 180 degrees\nalex.forward(75)        # move forward by 75 units\nalex.left(90)           # turn left 90 degrees\nalex.forward(100)       # more forward by 100 units\nalex.left(90)           # turn left 90 degrees\nalex.forward(75)        # move forward by 75 units\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/TurtlePractice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_2_1_DrawZ",
                data: {
                  id: 11057,
                  base_course: "StudentCSP",
                  name: "5_2_1_DrawZ",
                  chapter: "CSPNameTurtles",
                  subchapter: "TurtlePractice",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="5_2_1_DrawZ" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses a turtle to draw a capital Z as shown below, but the lines are mixed up.  The program should do all necessary set-up: import the turtle module, get the space to draw on, and create the turtle.  Then it should draw the lines for the Z in the order shown by the numbers on the picture.  Drag the needed blocks of statements from the left column to the right column and put them in the right order.  There may be extra blocks that are not needed in a correct solution.  Then click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/DrawZ.png"><img alt="../_images/DrawZ.png" class="align-center" src="../_images/DrawZ.png" style="width: 200px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.3.2"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nfrom turtle Import * #paired\n---\nspace = Screen()\n---\nspace = screen() #paired\n---\nalex = Turtle()\n---\nalex = turtle() #paired\n---\nalex.forward(50)\nalex.right(120)\n---\nalex.forward(50)\nalex.turn(120) #paired\n---\nalex.forward(100)\n---\nalex.left(120)\n---\nalex.forward(50)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/TurtlePractice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.3.2",
                  optional: false,
                  description:
                    "The following program uses a turtle to draw a capital Z as shown below, but the ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_2_1_DrawN",
                data: {
                  id: 11058,
                  base_course: "StudentCSP",
                  name: "5_2_1_DrawN",
                  chapter: "CSPNameTurtles",
                  subchapter: "TurtlePractice",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="5_2_1_DrawN" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses a turtle to draw a capital N as shown below, but the lines are mixed up.  The program should do all necessary set-up: import the turtle module, get the space to draw on, and create the turtle.  Remember that the turtle starts off facing east when it is created.  Then it should draw the lines for the N in the order shown by the numbers on the picture.  Drag the needed blocks of statements from the left column to the right column and put them in the right order. There may be some extra blocks that are not needed in a correct solution.  Then click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/DrawN4.png"><img alt="../_images/DrawN4.png" class="align-center" src="../_images/DrawN4.png" style="width: 200px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.3.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nspace = Screen()\n---\nella = Turtle()\n---\nella = Turtle #paired\n---\nella.left(90)\nella.forward(100)\n---\nella.right(90)\nella.forward(100) #paired\n---\nella.right(150)\nella.forward(116)\n---\nella.left(150)\nella.forward(116) #paired\n---\nella.left(150)\n---\nella.forward(100)\n---\nella.Forward(100) #paired\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/TurtlePractice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.3.3",
                  optional: false,
                  description:
                    "The following program uses a turtle to draw a capital N as shown below, but the ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Error1",
                data: {
                  id: 11059,
                  base_course: "StudentCSP",
                  name: "Turtle_Error1",
                  chapter: "CSPNameTurtles",
                  subchapter: "TurtlePractice",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Error1 data-question_label="5.3.4">\n<div id=Turtle_Error1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Error1_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *    # use the turtle library\nspace = screen()        # create a turtle space\nalisha = Turtle         # create a turtle named alisha\nalisha.right(90)        # turn alisha south\nalisha.forward          # move forward by 150 units\nalisha.left(90)         # turn to face east\nalisha.Forward(75)      # move forward by 75 units\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/TurtlePractice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.3.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Error2",
                data: {
                  id: 11060,
                  base_course: "StudentCSP",
                  name: "Turtle_Error2",
                  chapter: "CSPNameTurtles",
                  subchapter: "TurtlePractice",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Error2 data-question_label="5.3.5">\n<div id=Turtle_Error2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Error2_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle Import *    # use the turtle library\nspace = Screen()        # create a turtle space\nalex = Turtle           # create a turtle named alex\nalex.left(180)          # turn alex by 180 degrees\nalex.forward(75)        # move forward by 75 units\nalex.turn(90)           # turn left 90 degrees\nalex.forward(100)       # more forward by 100 units\nalex.left(90)           # turn left 90 degrees\nalex.forward            # move forward by 75 units\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/TurtlePractice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.3.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Letter",
                data: {
                  id: 11061,
                  base_course: "StudentCSP",
                  name: "Turtle_Letter",
                  chapter: "CSPNameTurtles",
                  subchapter: "TurtlePractice",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Letter data-question_label="5.3.6">\n<div id=Turtle_Letter_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Letter_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/TurtlePractice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.3.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5. Chapter 5 - Names for Turtles/5.3 Practice with Turtles",
                data: {
                  id: 11594,
                  base_course: "StudentCSP",
                  name: "5. Chapter 5 - Names for Turtles/5.3 Practice with Turtles",
                  chapter: "CSPNameTurtles",
                  subchapter: "TurtlePractice",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "turtleFAP",
            data: {
              title: "5.4 More Turtle Procedures and Functions",
              num: 400,
              chapter: "CSPNameTurtles",
              subchapter: "turtleFAP",
              id: 11595,
              numQuestions: 7
            },
            children: [
              {
                key: "Turtle_CandL",
                data: {
                  id: 11099,
                  base_course: "StudentCSP",
                  name: "Turtle_CandL",
                  chapter: "CSPNameTurtles",
                  subchapter: "turtleFAP",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_CandL data-question_label="5.4.1">\n<div id=Turtle_CandL_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_CandL_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *  # use the turtle library\nspace = Screen()      # create a turtle space\nji = Turtle()         # create a turtle named ji\nji.right(180)         # turn right by 180 degrees\nji.forward(75)        # move forward by 75 units\nji.right(90)          # turn right 90 degrees\nji.forward(100)       # more forward by 90 units\nji.right(90)          # turn right 90 degrees\nji.forward(75)        # move forward by 75 units\nji.penup()            # pick up the pen\nji.forward(50)        # move forward 50 units\nji.pendown()          # put the pen down\nji.right(90)          # turn right 90 degrees\nji.forward(100)       # go forward 100 units\nji.left(90)           # turn left 90 degrees\nji.forward(75)        # go forward 75 units\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/turtleFAP",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Bounds",
                data: {
                  id: 11100,
                  base_course: "StudentCSP",
                  name: "Turtle_Bounds",
                  chapter: "CSPNameTurtles",
                  subchapter: "turtleFAP",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Bounds data-question_label="5.4.2">\n<div id=Turtle_Bounds_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Bounds_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *  # use the turtle library\nspace = Screen()      # create a turtle space\nanu = Turtle()        # create a turtle named anu\nanu.penup()           # pick up the pen (don\'t draw)\nanu.goto(-150,150)    # go to the top left corner\nanu.pendown()         # put down the pen\nanu.forward(300)      # move forward by 300 pixels\nanu.right(90)         # turn right 90 degrees\nanu.forward(300)      # move forward by 300 pixels\nanu.right(90)         # turn right 90 degrees\nanu.forward(300)      # move forward by 300 pixels\nanu.right(90)         # turn right 90 degrees\nanu.forward(300)      # move forward by 300 pixels\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/turtleFAP",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.4.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_3_1_DrawF",
                data: {
                  id: 11101,
                  base_course: "StudentCSP",
                  name: "5_3_1_DrawF",
                  chapter: "CSPNameTurtles",
                  subchapter: "turtleFAP",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="5_3_1_DrawF" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses a turtle to draw a capital F as shown below, but the lines are mixed up.  The program should do all necessary set-up: import the turtle module, get the space to draw on, and create the turtle.  It should draw the lines in the order shown by the numbers in the picture on the left.&lt;br /&gt;&lt;br /&gt;&lt;p&gt;Drag the needed blocks of statements from the left column to the right column and put them in the right order.  There may be extra blocks that are not needed in a correct solution.  Then click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/DrawFwGT.png"><img alt="../_images/DrawFwGT.png" class="align-center" src="../_images/DrawFwGT.png" style="width: 200px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.4.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\nspace = Screen()\nanu = Turtle()\n---\nanu.left(90)\nanu.forward(100)\n---\nanu.right(90)\nanu.forward(50)\n---\nanu.left(90)\nanu.forward(50) #distractor\n---\nanu.penup()\n---\nanu.penUp() #distractor\n---\nanu.goto(0,60)\n---\nanu.goTo(0,60) #distractor\n---\nanu.pendown()\n---\nanu.penDown() #distractor\n---\nanu.forward(50)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/turtleFAP",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.4.3",
                  optional: false,
                  description:
                    "The following program uses a turtle to draw a capital F as shown below, but the ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_3_2_DrawA",
                data: {
                  id: 11102,
                  base_course: "StudentCSP",
                  name: "5_3_2_DrawA",
                  chapter: "CSPNameTurtles",
                  subchapter: "turtleFAP",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="5_3_2_DrawA" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses a turtle to draw a capital A as shown below, but the lines are mixed up.  The program should do all necessary set-up: import the turtle module, get the space to draw on, and create the turtle.  It should draw the lines in the order shown by the numbers in the picture on the left. Drag the needed blocks of statements from the left column to the right column and put them in the right order. There may be additional blocks that are not needed in a correct solution. Then click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/DrawABig.png"><img alt="../_images/DrawABig.png" class="align-center" src="../_images/DrawABig.png" style="width: 200px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.4.4"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nspace = Screen()\n---\nspace = screen() #distractor\n---\nella = Turtle()\n---\nella = Turtle #distractor\n---\nella.left(60)\nella.forward(100)\n---\nella.left(60)\nella.forward() #distractor\n---\nella.right(120)\nella.forward(100)\n---\nella.penup()\nella.goto(30,50)\nella.pendown()\n---\nella.left(60)\nella.forward(40)\n---\nella.Left(60)\nella.forward(40) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/turtleFAP",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.4.4",
                  optional: false,
                  description:
                    "The following program uses a turtle to draw a capital A as shown below, but the ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Color",
                data: {
                  id: 11103,
                  base_course: "StudentCSP",
                  name: "Turtle_Color",
                  chapter: "CSPNameTurtles",
                  subchapter: "turtleFAP",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Color data-question_label="5.4.5">\n<div id=Turtle_Color_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Color_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *  # use the turtle library\nspace = Screen()      # create a turtle space\nanu = Turtle()        # create a turtle named anu\nanu.color(\'red\')      # set the color to red\nanu.pensize(25)       # set the size of the pen\nanu.right(180)        # turn right by 180 degrees\nanu.forward(75)       # move forward by 75 units\nanu.right(90)         # turn right 90 degrees\nanu.color(\'blue\')     # set the color to blue\nanu.pensize(50)       # set the pen size to 10\nanu.forward(100)      # move forward by 100 units\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/turtleFAP",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.4.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Initials",
                data: {
                  id: 11104,
                  base_course: "StudentCSP",
                  name: "Turtle_Initials",
                  chapter: "CSPNameTurtles",
                  subchapter: "turtleFAP",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Initials data-question_label="5.4.6">\n<div id=Turtle_Initials_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Initials_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/turtleFAP",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.4.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5. Chapter 5 - Names for Turtles/5.4 More Turtle Procedures and Functions",
                data: {
                  id: 11595,
                  base_course: "StudentCSP",
                  name: "5. Chapter 5 - Names for Turtles/5.4 More Turtle Procedures and Functions",
                  chapter: "CSPNameTurtles",
                  subchapter: "turtleFAP",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "multTurtles",
            data: {
              title: "5.5 Single and Multiple Turtles",
              num: 500,
              chapter: "CSPNameTurtles",
              subchapter: "multTurtles",
              id: 11596,
              numQuestions: 7
            },
            children: [
              {
                key: "Turtle_Names1",
                data: {
                  id: 11089,
                  base_course: "StudentCSP",
                  name: "Turtle_Names1",
                  chapter: "CSPNameTurtles",
                  subchapter: "multTurtles",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Names1 data-question_label="5.5.1">\n<div id=Turtle_Names1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Names1_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: t1-line1; 2: t1-line2; 3: t1-line3; 4: t1-line4; 5: t1-line5; 6: t1-line6; 7: t1-for100-1; 8: t1-right90-1; 9: t1-for100-2; 10: t1-right90-2; 11: t1-for100-3; 12: t1-right90-3;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *        # use the turtle library\nspace = Screen()            # create a turtle screen (space)\nzari = Turtle()             # create a turtle named zari\nzari.setheading(90)         # Point due north\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(90)              # turn right by 90 degrees\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(90)              # turn right by 90 degrees\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(90)              # turn right by 90 degrees\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(90)              # turn right by 90 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/multTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.5.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_4_1_triangle_fill",
                data: {
                  id: 11090,
                  base_course: "StudentCSP",
                  name: "5_4_1_triangle_fill",
                  chapter: "CSPNameTurtles",
                  subchapter: "multTurtles",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="5.5.2" id="5_4_1_triangle_fill"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What shape will the program below draw when you click on the Run button?</p>\\n<input type=\\"text\\" name=\'\' />", "dyn_vars": null, "blankNames": {}, "feedbackArray": [[{"regex": "^\\\\s*^triangle$|^Triangle$|^TRIANGLE$\\\\s*$", "regexFlags": "", "feedback": "<p>Correct!</p>\\n"}, {"regex": "^\\\\s*.*\\\\s*$", "regexFlags": "", "feedback": "<p>Try to follow the directions as if you are the turtle</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/multTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.5.2",
                  optional: false,
                  description:
                    "What shape will the program below draw when you click on the Run button?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Names2",
                data: {
                  id: 11091,
                  base_course: "StudentCSP",
                  name: "Turtle_Names2",
                  chapter: "CSPNameTurtles",
                  subchapter: "multTurtles",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Names2 data-question_label="5.5.3">\n<div id=Turtle_Names2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Names2_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: tri-line1; 2: tri-line2; 3: tri-line3; 4: tri-line4; 5: tri-line5; 6: tri-line6; 7: tri-line7; 8: tri-line8; 9: tri-line9; 10: tri-line10;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *        # use the turtle library\nspace = Screen()            # create a turtle screen (space)\nzari = Turtle()             # create a turtle named zari\nzari.setheading(90)         # Point due north\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(120)             # turn right by 120 degrees\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(120)             # turn right by 120 degrees\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(120)             # turn right by 120 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/multTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.5.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Two_Turtles",
                data: {
                  id: 11092,
                  base_course: "StudentCSP",
                  name: "Two_Turtles",
                  chapter: "CSPNameTurtles",
                  subchapter: "multTurtles",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Two_Turtles data-question_label="5.5.4">\n<div id=Two_Turtles_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Two_Turtles_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: tt-line1; 2: tt-line2; 3: tt-line3; 4: tt-line4; 5: tt-line5; 6: tt-line6; 7: tt-line7; 8: tt-line8; 9: tt-line9; 10: tt-line10; 11: tt-line11; 12: tt-line12;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *        # use the turtle library\nspace = Screen()            # create a turtle screen (space)\nzari = Turtle()             # create a turtle named zari\nzari.setheading(90)         # Point due north\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(120)             # turn right by 120 degrees\nzari.forward(100)           # tell zari to move forward by 100 units\nzari.right(120)             # turn right by 120 degrees\nchad = Turtle()             # create a new turtle named chad\nchad.color("orange")        # change the color chad draws with\nchad.forward(100)           # tell chad to move forward by 100 units\nchad.right(120)             # turn chad by 120 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/multTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.5.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_4_2_JandT",
                data: {
                  id: 11093,
                  base_course: "StudentCSP",
                  name: "5_4_2_JandT",
                  chapter: "CSPNameTurtles",
                  subchapter: "multTurtles",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="5_4_2_JandT" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program has one turtle, “jamal”, draw a capital L in blue and then another, “tina”, draw a line to the west in orange as shown below.  The program should do all set-up, have “jamal” draw the L, and then have “tina” draw the line. Drag the blocks of statements from the left column to the right column and put them in the right order.  Then click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/TwoTurtles1N.png"><img alt="../_images/TwoTurtles1N.png" class="align-center" src="../_images/TwoTurtles1N.png" style="width: 200px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.5.5"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\nwn = Screen()\n---\njamal = Turtle()\njamal.pensize(10)\njamal.color("blue")\n---\njamal.right(90)\njamal.forward(150)\n---\njamal.left(90)\njamal.forward(150) #paired\n---\njamal.left(90)\njamal.forward(75)\n---\njamal.right(90)\njamal.forward(75) #paired\n---\ntina = Turtle()\ntina.pensize(10)\ntina.color("orange")\n---\ntina = Turtle()\ntina.pensize(10)\ntina.color(orange) #paired\n---\ntina.left(180)\ntina.forward(75)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/multTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.5.5",
                  optional: false,
                  description:
                    'The following program has one turtle, "jamal", draw a capital L in blue and then',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_4_3_JandT2",
                data: {
                  id: 11094,
                  base_course: "StudentCSP",
                  name: "5_4_3_JandT2",
                  chapter: "CSPNameTurtles",
                  subchapter: "multTurtles",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="5_4_3_JandT2" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program has one turtle, “jamal”, draw a line to the north in blue and then another, “tina”, draw a line to the east in orange as shown below.  The program should import the turtle module, get the window to draw on, create the turtle “jamal”, have it draw a line to the north, then create the turtle “tina”, and have it draw a line to the east. Drag the blocks of statements from the left column to the right column and put them in the right order.  Then click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/TwoTurtlesLN.png"><img alt="../_images/TwoTurtlesLN.png" class="align-center" src="../_images/TwoTurtlesLN.png" style="width: 200px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.5.6"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nfrom turtle #paired\n---\nwn = Screen()\n---\njamal = Turtle()\n---\njamal = turtle() #paired\n---\njamal.color("blue")\njamal.pensize(10)\njamal.left(90)\njamal.forward(150)\n---\ntina = Turtle()\ntina.pensize(10)\n---\ntina.color("orange")\ntina.forward(150)\n---\ntina.color("orange")\ntina.Forward(150) #paired\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/multTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.5.6",
                  optional: false,
                  description:
                    'The following program has one turtle, "jamal", draw a line to the north in blue ',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5. Chapter 5 - Names for Turtles/5.5 Single and Multiple Turtles",
                data: {
                  id: 11596,
                  base_course: "StudentCSP",
                  name: "5. Chapter 5 - Names for Turtles/5.5 Single and Multiple Turtles",
                  chapter: "CSPNameTurtles",
                  subchapter: "multTurtles",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "house",
            data: {
              title: "5.6 Bob Builds a House",
              num: 600,
              chapter: "CSPNameTurtles",
              subchapter: "house",
              id: 11597,
              numQuestions: 4
            },
            children: [
              {
                key: "Turtle_House",
                data: {
                  id: 11086,
                  base_course: "StudentCSP",
                  name: "Turtle_House",
                  chapter: "CSPNameTurtles",
                  subchapter: "house",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_House data-question_label="5.6.1">\n<div id=Turtle_House_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_House_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Section Tour*doubleq*; 1-3: house-line1-3; 6-12: house-line5-11; 15: house-line13; 18-23: house-line18-23;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *      # use the turtle library\nspace = Screen()          # create a turtle screen (space)\nbob = Turtle()            # create a turtle named bob\n\n# Make a square\nbob.forward(100)          # tell bob to move forward by 100 units\nbob.right(90)             # turn right by 90 degrees\nbob.forward(100)          # tell bob to move forward by 100 units\nbob.right(90)             # turn right by 90 degrees\nbob.forward(100)          # tell bob to move forward by 100 units\nbob.right(90)             # turn right by 90 degrees\nbob.forward(100)          # tell bob to move forward by 100 units\n\n# Position for roof\nbob.right(90)\n\n# Make a roof\nbob.forward(100)          # tell bob to move forward by 100 units\nbob.right(-120)           # turn LEFT by 120 degrees\nbob.forward(100)          # tell bob to move forward by 100 units\nbob.right(-120)           # turn LEFT by 120 degrees\nbob.forward(100)          # tell bob to move forward by 100 units\nbob.right(-120)           # turn LEFT by 120 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/house",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.6.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_5_1_Turtle_House",
                data: {
                  id: 11087,
                  base_course: "StudentCSP",
                  name: "5_5_1_Turtle_House",
                  chapter: "CSPNameTurtles",
                  subchapter: "house",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="5_5_1_Turtle_House" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>Align the program pieces below to make the house and chimney figure above.  Draw the square first for the main part of the house, next draw the roof, and finally draw the chimney.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.6.2"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\nspace = Screen()\nbob = Turtle()\n---\nfrom turtle import *\nspace = screen()\nbob = turtle() #paired\n---\n# Make a square\nbob.forward(100)\nbob.right(90)\nbob.forward(100)\nbob.right(90)\nbob.forward(100)\nbob.right(90)\nbob.forward(100)\n---\n# Position for roof\nbob.right(90)\n---\n# Position for roof\nbob.left(90) #paired\n---\n# Make a roof\nbob.forward(100)\nbob.right(-120)\nbob.forward(100)\nbob.right(-120)\nbob.forward(100)\nbob.right(-120)\n---\n# Position for chimney\nbob.right(-60)\nbob.forward(40)\nbob.setheading(90)\n---\n# Draw chimney\nbob.color("red")\nbob.forward(30)\nbob.right(90)\nbob.forward(30)\nbob.right(90)\nbob.forward(30)\nbob.right(90)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/house",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.6.2",
                  optional: false,
                  description:
                    "Align the program pieces below to make the house and chimney figure above.  Draw",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_5_2_Turtle_House2",
                data: {
                  id: 11088,
                  base_course: "StudentCSP",
                  name: "5_5_2_Turtle_House2",
                  chapter: "CSPNameTurtles",
                  subchapter: "house",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="5_5_2_Turtle_House2" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>Align the program pieces below to make the house and window figure above.  Draw the square first for the main part of the house, next draw the roof, and finally draw the window.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.6.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\nspace = Screen()\nbob = Turtle()\n---\nfrom turtle import *\nspace = screen()\nbob = turtle() #paired\n---\n# Make a square\nbob.forward(100)\nbob.right(90)\nbob.forward(100)\nbob.right(90)\nbob.forward(100)\nbob.right(90)\nbob.forward(100)\n---\n# Position for roof\nbob.right(90)\n---\n# Position for roof\nbob.left(90) #paired\n---\n# Make a roof\nbob.forward(100)\nbob.right(-120)\nbob.forward(100)\nbob.right(-120)\nbob.forward(100)\nbob.right(-120)\n---\n# Position for window\nbob.penup()\nbob.goto(50,-30)\nbob.pendown()\nbob.setheading(0)\n---\n# Draw window\nbob.color("red")\nbob.forward(30)\nbob.right(90)\nbob.forward(30)\nbob.right(90)\nbob.forward(30)\nbob.right(90)\nbob.forward(30)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/house",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.6.3",
                  optional: false,
                  description:
                    "Align the program pieces below to make the house and window figure above.  Draw ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5. Chapter 5 - Names for Turtles/5.6 Bob Builds a House",
                data: {
                  id: 11597,
                  base_course: "StudentCSP",
                  name: "5. Chapter 5 - Names for Turtles/5.6 Bob Builds a House",
                  chapter: "CSPNameTurtles",
                  subchapter: "house",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "changeProg",
            data: {
              title: "5.7 Changing Turtle Programs",
              num: 700,
              chapter: "CSPNameTurtles",
              subchapter: "changeProg",
              id: 11598,
              numQuestions: 5
            },
            children: [
              {
                key: "Turtle_Names4",
                data: {
                  id: 11082,
                  base_course: "StudentCSP",
                  name: "Turtle_Names4",
                  chapter: "CSPNameTurtles",
                  subchapter: "changeProg",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Names4 data-question_label="5.7.1">\n<div id=Turtle_Names4_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Names4_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: first-turtle-line-1; 2: first-turtle-line-2; 3: first-turtle-line-3; 4: first-turtle-line-4; 5: first-turtle-line-5; 6: first-turtle-line-6;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *        # use the turtle library\nspace = Screen()            # create a turtle screen (space)\nalex = Turtle()             # create a turtle named alex\nalex.forward(150)           # tell alex to move forward by 150 units\nalex.left(90)               # turn by 90 degrees\nalex.forward(75)            # tell alex to move forward by 75 units\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/changeProg",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.7.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_6_1_Turtle_Names4_Q1",
                data: {
                  id: 11083,
                  base_course: "StudentCSP",
                  name: "5_6_1_Turtle_Names4_Q1",
                  chapter: "CSPNameTurtles",
                  subchapter: "changeProg",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="5.7.2" data-multipleanswers="false"  id="5_6_1_Turtle_Names4_Q1"  style="visibility: hidden;">\n    <p>If you wanted to make both of the turtle lines in that last program the same length, what change would you make to the program?  (Feel free to actually make the change in the program and click <em>Run</em> to try it!)</p>\n\n    <li data-component="answer"  id="5_6_1_Turtle_Names4_Q1_opt_a">Change the 150 to 90</li><li data-component="feedback">The turtle moves forward 150 units and turns 90 degrees.</li>\n    \n    <li data-component="answer"  id="5_6_1_Turtle_Names4_Q1_opt_b">Change the 75 to 90</li><li data-component="feedback">The turtle moves forward 75 units and turns 90 degrees.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="5_6_1_Turtle_Names4_Q1_opt_c">Change the 75 to 150</li><li data-component="feedback">Then both sides would be 150 units long.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/changeProg",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.7.2",
                  optional: false,
                  description:
                    "If you wanted to make both of the turtle lines in that last program the same len",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Names5",
                data: {
                  id: 11084,
                  base_course: "StudentCSP",
                  name: "Turtle_Names5",
                  chapter: "CSPNameTurtles",
                  subchapter: "changeProg",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Names5 data-question_label="5.7.3">\n<div id=Turtle_Names5_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Names5_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *        # use the turtle library\nspace = Screen()            # create a turtle screen (space)\nalex = Turtle()             # create a turtle named alex\nalex.forward(40)            # tell alex to move forward by 150 units\nalex.left(90)               # turn by 90 degrees\nalex.forward(40)            # complete the second leg of a triangle\nalex.left(0)                # ZERO won\'t actually work\nalex.forward(57)            # Close the triangle\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/changeProg",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.7.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5_6_2_Turtle_Names5_Q1",
                data: {
                  id: 11085,
                  base_course: "StudentCSP",
                  name: "5_6_2_Turtle_Names5_Q1",
                  chapter: "CSPNameTurtles",
                  subchapter: "changeProg",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="5.7.4" data-multipleanswers="false"  id="5_6_2_Turtle_Names5_Q1"  style="visibility: hidden;">\n    <p>The code <code class="docutils literal notranslate"><span class="pre">alex.left(0)</span></code> will not turn the turtle toward the starting point.  Which of these will?</p>\n\n    <li data-component="answer"  id="5_6_2_Turtle_Names5_Q1_opt_a">alex.left(45)</li><li data-component="feedback">The turtle turns the exterior angle, not the interior angle.</li>\n    \n    <li data-component="answer"  id="5_6_2_Turtle_Names5_Q1_opt_b">alex.left(90)</li><li data-component="feedback">That would make another right angle. Which would be more like a square shape.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="5_6_2_Turtle_Names5_Q1_opt_c">alex.left(135)</li><li data-component="feedback">The interior angles of a triangle need to add up to 180.  So far we have one angle of 90 so the other two must be equal and must total 90.  They both have to be 45, but we tell the turtle to turn the exterior angle so 180 - 45 = 135.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/changeProg",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.7.4",
                  optional: false,
                  description:
                    "The code ``alex.left(0)`` will not turn the turtle toward the starting point.  W",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5. Chapter 5 - Names for Turtles/5.7 Changing Turtle Programs",
                data: {
                  id: 11598,
                  base_course: "StudentCSP",
                  name: "5. Chapter 5 - Names for Turtles/5.7 Changing Turtle Programs",
                  chapter: "CSPNameTurtles",
                  subchapter: "changeProg",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "5.8 Chapter 5 - Summary",
              num: 800,
              chapter: "CSPNameTurtles",
              subchapter: "summary",
              id: 11599,
              numQuestions: 1
            },
            children: [
              {
                key: "5. Chapter 5 - Names for Turtles/5.8 Chapter 5 - Summary",
                data: {
                  id: 11599,
                  base_course: "StudentCSP",
                  name: "5. Chapter 5 - Names for Turtles/5.8 Chapter 5 - Summary",
                  chapter: "CSPNameTurtles",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "5.9 Chapter 5 Exercises",
              num: 900,
              chapter: "CSPNameTurtles",
              subchapter: "Exercises",
              id: 11600,
              numQuestions: 21
            },
            children: [
              {
                key: "ch5ex1q",
                data: {
                  id: 11062,
                  base_course: "StudentCSP",
                  name: "ch5ex1q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex1q data-question_label="5.9.1">\n<div id=ch5ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = screen()\nalex = Turtle\nalex.Forward(150)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex2q",
                data: {
                  id: 11063,
                  base_course: "StudentCSP",
                  name: "ch5ex2q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex2q data-question_label="5.9.2">\n<div id=ch5ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nalex = Turtle()\nalex.forward(150)\nfrom turtle import *\nalex.left(90)\nspace = Screen()\nalex.forward(75)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex3q",
                data: {
                  id: 11064,
                  base_course: "StudentCSP",
                  name: "ch5ex3q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex3q data-question_label="5.9.3">\n<div id=ch5ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom\nspace =\nalex =\nalex.forward(150)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex4q",
                data: {
                  id: 11065,
                  base_course: "StudentCSP",
                  name: "ch5ex4q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex4q data-question_label="5.9.4">\n<div id=ch5ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nfranklin = Turtle()\nspace = Screen()\nfranklin.left(90)\nfranklin.forward(100)\nfranklin.forward(100)\nfranklin.left(90)\nfranklin.forward(100)\nfranklin.left(90)\nfranklin.forward(100)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex5q",
                data: {
                  id: 11066,
                  base_course: "StudentCSP",
                  name: "ch5ex5q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex5q data-question_label="5.9.5">\n<div id=ch5ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\nalex = turtle()\nalex.Forward(150)\nalex.turn(90)\nalex.forward(75)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex6q",
                data: {
                  id: 11067,
                  base_course: "StudentCSP",
                  name: "ch5ex6q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex6q data-question_label="5.9.6">\n<div id=ch5ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import\nspace = Screen\njohn = turtle()\njohn.Forward(100)\njohn.Left(120)\njohn.forward(100)\njohn.left(120)\njohn.Forward(100)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex7q",
                data: {
                  id: 11068,
                  base_course: "StudentCSP",
                  name: "ch5ex7q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex7q data-question_label="5.9.7">\n<div id=ch5ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\nalex = Turtle()\nalex.forward(150)\nalex.left(90)\nalex.forward(75)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex8q",
                data: {
                  id: 11069,
                  base_course: "StudentCSP",
                  name: "ch5ex8q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex8q data-question_label="5.9.8">\n<div id=ch5ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nspace = Screen()\nhi = Turtle()\nhi.color(red)\nhi.Forward("50")\nhi.right(90)\nhi.color("BLUE")\nhi.forward(50)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex9q",
                data: {
                  id: 11070,
                  base_course: "StudentCSP",
                  name: "ch5ex9q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex9q data-question_label="5.9.9">\n<div id=ch5ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nalex.forward(150)\nalex.left(90)\nalex.forward(75)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex10q",
                data: {
                  id: 11071,
                  base_course: "StudentCSP",
                  name: "ch5ex10q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex10q data-question_label="5.9.10">\n<div id=ch5ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\nalex = Turtle()\nalex.forward(150)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex11q",
                data: {
                  id: 11072,
                  base_course: "StudentCSP",
                  name: "ch5ex11q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex11q data-question_label="5.9.11">\n<div id=ch5ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex12q",
                data: {
                  id: 11073,
                  base_course: "StudentCSP",
                  name: "ch5ex12q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex12q data-question_label="5.9.12">\n<div id=ch5ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nFrom turtle Import *\nspace = screen()\nbob = turtle\nBob.forward("100")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex13q",
                data: {
                  id: 11074,
                  base_course: "StudentCSP",
                  name: "ch5ex13q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex13q data-question_label="5.9.13">\n<div id=ch5ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex14q",
                data: {
                  id: 11075,
                  base_course: "StudentCSP",
                  name: "ch5ex14q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex14q data-question_label="5.9.14">\n<div id=ch5ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\njack = Screen()\njill = Turtle()\njill.sizepen(10)\njill.forward(10)\njack.sizepen(15)\njack.forward(10)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex15q",
                data: {
                  id: 11076,
                  base_course: "StudentCSP",
                  name: "ch5ex15q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex15q data-question_label="5.9.15">\n<div id=ch5ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex16q",
                data: {
                  id: 11077,
                  base_course: "StudentCSP",
                  name: "ch5ex16q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex16q data-question_label="5.9.16">\n<div id=ch5ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex17q",
                data: {
                  id: 11078,
                  base_course: "StudentCSP",
                  name: "ch5ex17q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex17q data-question_label="5.9.17">\n<div id=ch5ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex18q",
                data: {
                  id: 11079,
                  base_course: "StudentCSP",
                  name: "ch5ex18q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex18q data-question_label="5.9.18">\n<div id=ch5ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex19q",
                data: {
                  id: 11080,
                  base_course: "StudentCSP",
                  name: "ch5ex19q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex19q data-question_label="5.9.19">\n<div id=ch5ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex20q",
                data: {
                  id: 11081,
                  base_course: "StudentCSP",
                  name: "ch5ex20q",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch5ex20q data-question_label="5.9.20">\n<div id=ch5ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch5ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.9.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5. Chapter 5 - Names for Turtles/5.9 Chapter 5 Exercises",
                data: {
                  id: 11600,
                  base_course: "StudentCSP",
                  name: "5. Chapter 5 - Names for Turtles/5.9 Chapter 5 Exercises",
                  chapter: "CSPNameTurtles",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "mixedUpTurtles",
            data: {
              title: "5.10 Mixed Up Code Practice",
              num: 1000,
              chapter: "CSPNameTurtles",
              subchapter: "mixedUpTurtles",
              id: 30190,
              numQuestions: 8
            },
            children: [
              {
                key: "ch5ex1muc",
                data: {
                  id: 30182,
                  base_course: "StudentCSP",
                  name: "ch5ex1muc",
                  chapter: "CSPNameTurtles",
                  subchapter: "mixedUpTurtles",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch5ex1muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should draw a rectangle.  The blocks have been mixed up.  Drag the blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.10.1"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nspace = Screen()\n---\nmindy = Turtle()\n---\nmindy.left(90)\n---\nmindy.forward(100)\nmindy.left(90)\nmindy.forward(50)\nmindy.left(90)\nmindy.forward(100)\nmindy.left(90)\nmindy.forward(50)\nmindy.left(90)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameTurtles/mixedUpTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.10.1",
                  optional: false,
                  description:
                    "The following program segment should draw a rectangle.  The blocks have been mix",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex2muc",
                data: {
                  id: 30183,
                  base_course: "StudentCSP",
                  name: "ch5ex2muc",
                  chapter: "CSPNameTurtles",
                  subchapter: "mixedUpTurtles",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch5ex2muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should draw a red line.  The blocks have been mixed up.  Drag the blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.10.2"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nspace = Screen()\n---\nspace = screen() #paired\n---\nani = Turtle()\n---\nani.color("red")\n---\nani.color(red) #distractor\n---\nani.forward(100)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameTurtles/mixedUpTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.10.2",
                  optional: false,
                  description:
                    "The following program segment should draw a red line.  The blocks have been mixe",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex3muc",
                data: {
                  id: 30184,
                  base_course: "StudentCSP",
                  name: "ch5ex3muc",
                  chapter: "CSPNameTurtles",
                  subchapter: "mixedUpTurtles",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch5ex3muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should draw an equilateral triangle.  The blocks have been mixed up.  Drag the blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.10.3"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nfrom Turtle import * #distractor\n---\nspace = Screen()\nmik = Turtle()\n---\nmik.left(120)\nmik.forward(100)\nmik.left(120)\nmik.forward(100)\nmik.left(120)\nmik.forward(100)\n---\nmik.left(60)\nmik.forward(100)\nmik.left(60)\nmik.forward(100)\nmik.left(60)\nmik.forward(100) #paired\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameTurtles/mixedUpTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.10.3",
                  optional: false,
                  description:
                    "The following program segment should draw an equilateral triangle.  The blocks h",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex4muc",
                data: {
                  id: 30185,
                  base_course: "StudentCSP",
                  name: "ch5ex4muc",
                  chapter: "CSPNameTurtles",
                  subchapter: "mixedUpTurtles",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch5ex4muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should contain the correct steps to create a turtle.  The blocks have been mixed up.  Drag the blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.10.4"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nfrom Turtle import * #paired\n---\nFrom Turtle Import * #paired\n---\nspace = Screen()\n---\nspace = screen() #paired\n---\nturt = Turtle()\n---\nturt = turtle() #paired\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameTurtles/mixedUpTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.10.4",
                  optional: false,
                  description:
                    "The following program segment should contain the correct steps to create a turtl",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex5muc",
                data: {
                  id: 30186,
                  base_course: "StudentCSP",
                  name: "ch5ex5muc",
                  chapter: "CSPNameTurtles",
                  subchapter: "mixedUpTurtles",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch5ex5muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should create two turtles, Ari and Chris. Ari should have a pensize of 20 and draw a line to the east, while Chris will have the standard pensize and draw a line to the west.  The blocks have been mixed up.  Drag the blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.10.5"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nspace = Screen()\n---\nari = Turtle()\n---\nari.pensize(20)\nari.left(180)\nari.forward(100)\n---\nari.pensize(20)\nari.forward(100) #paired\n---\nchris = Turtle()\n---\nchris.forward(100)\n---\nchris.left(90)\nchris.forward(100) #paired\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameTurtles/mixedUpTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.10.5",
                  optional: false,
                  description:
                    "The following program segment should create two turtles, Ari and Chris. Ari shou",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex6muc",
                data: {
                  id: 30187,
                  base_course: "StudentCSP",
                  name: "ch5ex6muc",
                  chapter: "CSPNameTurtles",
                  subchapter: "mixedUpTurtles",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch5ex6muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should draw a red line, starting from postion (10, 30).  The blocks have been mixed up.  Drag the blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.10.6"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nspace = Screen()\n---\nnic = Turtle()\n---\nnic.color("red")\n---\nnic.penup()\n---\nnic.goto(10,30)\n---\nnic.goto("10,30") #paired\n---\nnic.pendown()\n---\nnic.forward(100)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameTurtles/mixedUpTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.10.6",
                  optional: false,
                  description:
                    "The following program segment should draw a red line, starting from postion (10,",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch5ex7muc",
                data: {
                  id: 30188,
                  base_course: "StudentCSP",
                  name: "ch5ex7muc",
                  chapter: "CSPNameTurtles",
                  subchapter: "mixedUpTurtles",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch5ex7muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should turn turtle Bri south, then draw a green line.  The blocks have been mixed up.  Drag the blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="5.10.7"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nspace = Screen()\n---\nbri = Turtle()\n---\nbri.color("green")\nbri.setheading(270)\n---\nbri.color("green")\nbri.setheading(90) #distractor\n---\nbri.forward(100)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameTurtles/mixedUpTurtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "5.10.7",
                  optional: false,
                  description:
                    "The following program segment should turn turtle Bri south, then draw a green li",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "5. Chapter 5 - Names for Turtles/5.10 Mixed Up Code Practice",
                data: {
                  id: 30190,
                  base_course: "StudentCSP",
                  name: "5. Chapter 5 - Names for Turtles/5.10 Mixed Up Code Practice",
                  chapter: "CSPNameTurtles",
                  subchapter: "mixedUpTurtles",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPNameNames",
        data: {
          title: "6. Chapter 6 - Computers can Name Anything",
          num: 6
        },
        children: [
          {
            key: "names4names2",
            data: {
              title: "6.1 Naming Everything",
              num: 100,
              chapter: "CSPNameNames",
              subchapter: "names4names2",
              id: 11601,
              numQuestions: 1
            },
            children: [
              {
                key: "6. Chapter 6 - Computers can Name Anything/6.1 Naming Everything",
                data: {
                  id: 11601,
                  base_course: "StudentCSP",
                  name: "6. Chapter 6 - Computers can Name Anything/6.1 Naming Everything",
                  chapter: "CSPNameNames",
                  subchapter: "names4names2",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "nameFandP",
            data: {
              title: "6.2 Naming Procedures and Functions",
              num: 200,
              chapter: "CSPNameNames",
              subchapter: "nameFandP",
              id: 11602,
              numQuestions: 3
            },
            children: [
              {
                key: "Functions",
                data: {
                  id: 10911,
                  base_course: "StudentCSP",
                  name: "Functions",
                  chapter: "CSPNameNames",
                  subchapter: "nameFandP",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Functions data-question_label="6.2.1">\n<div id=Functions_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Functions_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 1: fun-line1; 2: fun-line2; 3: fun-line3; 4: fun-line4;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nprint("Absolute value of -5:")\nprint(abs(-5))\nprint("Integer part of 34.2")\nprint(int(34.2))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/nameFandP",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.2.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6_2_1_Functions_Q1",
                data: {
                  id: 10912,
                  base_course: "StudentCSP",
                  name: "6_2_1_Functions_Q1",
                  chapter: "CSPNameNames",
                  subchapter: "nameFandP",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.2.2" data-multipleanswers="false"  id="6_2_1_Functions_Q1"  style="visibility: hidden;">\n    <p>What do you think <cite>print(int(abs(-16.789)))</cite>, prints?</p>\n\n    <li data-component="answer"  id="6_2_1_Functions_Q1_opt_a">-16</li><li data-component="feedback">The function abs will change the negative.</li>\n    \n    <li data-component="answer"  id="6_2_1_Functions_Q1_opt_b">-16.789</li><li data-component="feedback">The original number will change.</li>\n    \n    <li data-component="answer"  id="6_2_1_Functions_Q1_opt_c">16.789</li><li data-component="feedback">The function int will remove the decimal part.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="6_2_1_Functions_Q1_opt_d">16</li><li data-component="feedback">The function abs will make it positive, and the function int will cut it down to 16.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNames/nameFandP",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.2.2",
                  optional: false,
                  description: "What do you think `print(int(abs(-16.789)))`, prints?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6. Chapter 6 - Computers can Name Anything/6.2 Naming Procedures and Functions",
                data: {
                  id: 11602,
                  base_course: "StudentCSP",
                  name: "6. Chapter 6 - Computers can Name Anything/6.2 Naming Procedures and Functions",
                  chapter: "CSPNameNames",
                  subchapter: "nameFandP",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "nameSteps",
            data: {
              title: "6.3 Naming Sets of Steps",
              num: 300,
              chapter: "CSPNameNames",
              subchapter: "nameSteps",
              id: 11603,
              numQuestions: 8
            },
            children: [
              {
                key: "First_Function",
                data: {
                  id: 10916,
                  base_course: "StudentCSP",
                  name: "First_Function",
                  chapter: "CSPNameNames",
                  subchapter: "nameSteps",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=First_Function data-question_label="6.3.1">\n<div id=First_Function_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="First_Function_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 1: dsq-line1; 2: dsq-line2; 3: dsq-line3; 4: dsq-line4; 5: dsq-line5; 6: dsq-line6; 7: dsq-line7; 8: dsq-line8; 9: dsq-line9;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef square(turtle):\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/nameSteps",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "First_Function_Call",
                data: {
                  id: 10917,
                  base_course: "StudentCSP",
                  name: "First_Function_Call",
                  chapter: "CSPNameNames",
                  subchapter: "nameSteps",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=First_Function_Call data-question_label="6.3.2">\n<div id=First_Function_Call_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="First_Function_Call_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important lines tour*doubleq*; 1-9: dsq2-line1-9; 11-13: dsq2-line11-13; 14: dsq2-line14;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef square(turtle):\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n\nfrom turtle import *  # use the turtle library\nspace = Screen()      # create a turtle screen\nmalik = Turtle()      # create a turtle named malik\nsquare(malik)         # draw a square with malik\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/nameSteps",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.3.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "def_function",
                data: {
                  id: 10918,
                  base_course: "StudentCSP",
                  name: "def_function",
                  chapter: "CSPNameNames",
                  subchapter: "nameSteps",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=def_function data-question_label="6.3.1.1">\n<div id=def_function_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="def_function_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef bmi(height, weight):\n    heightSquared = height * height\n    BMI = weight / heightSquared\n    BMImetric = BMI * 703\n    return BMImetric\n\nprint(bmi(60,110))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/nameSteps",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.3.1.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6_3_1_Functions_Q2",
                data: {
                  id: 10919,
                  base_course: "StudentCSP",
                  name: "6_3_1_Functions_Q2",
                  chapter: "CSPNameNames",
                  subchapter: "nameSteps",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.3.1.2" data-multipleanswers="false"  id="6_3_1_Functions_Q2"  style="visibility: hidden;">\n    <p>Is <code class="docutils literal notranslate"><span class="pre">abs</span></code> a procedure or a function?</p>\n\n    <li data-component="answer"  id="6_3_1_Functions_Q2_opt_a">Procedure</li><li data-component="feedback">It returns a value so it is a function</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="6_3_1_Functions_Q2_opt_b">Function</li><li data-component="feedback">It returns a value so it can\'t be a procedure</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/nameSteps",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.3.1.2",
                  optional: false,
                  description: "Is ``abs`` a procedure or a function?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6_3_2_Functions_Q3",
                data: {
                  id: 10920,
                  base_course: "StudentCSP",
                  name: "6_3_2_Functions_Q3",
                  chapter: "CSPNameNames",
                  subchapter: "nameSteps",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.3.1.3" data-multipleanswers="false"  id="6_3_2_Functions_Q3"  style="visibility: hidden;">\n    <p>Is <code class="docutils literal notranslate"><span class="pre">square</span></code> a procedure or a function?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="6_3_2_Functions_Q3_opt_a">Procedure</li><li data-component="feedback">It doesn\'t return a value so it is a procedure</li>\n    \n    <li data-component="answer"  id="6_3_2_Functions_Q3_opt_b">Function</li><li data-component="feedback">It doesn\'t return a value so it can\'t be a function</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/nameSteps",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.3.1.3",
                  optional: false,
                  description: "Is ``square`` a procedure or a function?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6_3_3_Triangle_Procedure",
                data: {
                  id: 10922,
                  base_course: "StudentCSP",
                  name: "6_3_3_Triangle_Procedure",
                  chapter: "CSPNameNames",
                  subchapter: "nameSteps",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="6_3_3_Triangle_Procedure" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following code should define a procedure that draws a triangle, but it may be mixed up &lt;i&gt;and may contain extra (unused) code&lt;/i&gt;.  Drag the needed code to the right side in the correct order.  &lt;b&gt;Remember that the statements in the procedure must be indented!&lt;/b&gt;  To indent a block drag it further right.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="6.3.1.5"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        def triangle(turtle):\n---\n    turtle.left(60)\n    turtle.forward(100)\n    turtle.right(120)\n    turtle.forward(100)\n    turtle.right(120)\n    turtle.forward(100)\n    turtle.right(120)\n---\n    endDef #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/nameSteps",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.3.1.5",
                  optional: false,
                  description:
                    "The following code should define a procedure that draws a triangle, but it may b",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6. Chapter 6 - Computers can Name Anything/6.3 Naming Sets of Steps",
                data: {
                  id: 11603,
                  base_course: "StudentCSP",
                  name: "6. Chapter 6 - Computers can Name Anything/6.3 Naming Sets of Steps",
                  chapter: "CSPNameNames",
                  subchapter: "nameSteps",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "3oYHEHTt2hM",
                data: {
                  id: 23164,
                  base_course: "StudentCSP",
                  name: "3oYHEHTt2hM",
                  chapter: "CSPNameNames",
                  subchapter: "nameSteps",
                  author: "bmiller",
                  question_type: "youtube",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone " style="margin-left: auto; margin-right:auto">\n        <div id="3oYHEHTt2hM" data-component="youtube" class="align-center youtube-video"\n            data-video-height="480" data-question_label="6.3.1.4"\n            data-video-width="640" data-video-videoid="3oYHEHTt2hM"\n            data-video-divid="3oYHEHTt2hM" data-video-start="0"\n            data-video-end="-1" ></div>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/nameSteps",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.3.1.4",
                  optional: false,
                  description: "",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "namesInput",
            data: {
              title: "6.4 Naming Input",
              num: 400,
              chapter: "CSPNameNames",
              subchapter: "namesInput",
              id: 11604,
              numQuestions: 8
            },
            children: [
              {
                key: "Function_Change_Size",
                data: {
                  id: 10923,
                  base_course: "StudentCSP",
                  name: "Function_Change_Size",
                  chapter: "CSPNameNames",
                  subchapter: "namesInput",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Function_Change_Size data-question_label="6.4.1">\n<div id=Function_Change_Size_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Function_Change_Size_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important lines tour*doubleq*; 1-9: sq50-line1-9; 2,4,6,8: sq50-line2468; 11-13: sq50-line11-13; 14: sq50-line14;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef square(turtle):\n    turtle.forward(50)\n    turtle.right(90)\n    turtle.forward(50)\n    turtle.right(90)\n    turtle.forward(50)\n    turtle.right(90)\n    turtle.forward(50)\n    turtle.right(90)\n\nfrom turtle import *  # use the turtle library\nspace = Screen()      # create a turtle screen\nmalik = Turtle()      # create a turtle named malik\nsquare(malik)         # draw a square with malik\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/namesInput",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Function_Add_Var",
                data: {
                  id: 10924,
                  base_course: "StudentCSP",
                  name: "Function_Add_Var",
                  chapter: "CSPNameNames",
                  subchapter: "namesInput",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Function_Add_Var data-question_label="6.4.2">\n<div id=Function_Add_Var_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Function_Add_Var_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important lines tour*doubleq*; 1-10: sqvar-line1-10; 2: sqvar-line2; 3: sqvar-line3; 4: sqvar-line4; 5-10: sqvar-line5-10; 12-14: sqvar-line12-14; 15: sqvar-line15;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef square(turtle):\n    size = 50\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n\nfrom turtle import *  # use the turtle library\nspace = Screen()      # create a turtle screen\nmalik = Turtle()      # create a turtle named malik\nsquare(malik)         # draw a square with malik\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/namesInput",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.4.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6_4_1_Function_Var_Q1",
                data: {
                  id: 10925,
                  base_course: "StudentCSP",
                  name: "6_4_1_Function_Var_Q1",
                  chapter: "CSPNameNames",
                  subchapter: "namesInput",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.4.3" data-multipleanswers="false"  id="6_4_1_Function_Var_Q1"  style="visibility: hidden;">\n    <p>What is the side length for a square drawn by the following procedure?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">square</span><span class="p">(</span><span class="n">turtle</span><span class="p">):</span>\n    <span class="n">size</span> <span class="o">=</span> <span class="mi">200</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="6_4_1_Function_Var_Q1_opt_a">100</li><li data-component="feedback">How much will it go forward?</li>\n    \n    <li data-component="answer"  id="6_4_1_Function_Var_Q1_opt_b">50</li><li data-component="feedback">What value is size set to?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="6_4_1_Function_Var_Q1_opt_c">200</li><li data-component="feedback">Size is set to 200 in line 2 so this will draw a square that has a side length of 200.</li>\n    \n    <li data-component="answer"  id="6_4_1_Function_Var_Q1_opt_d">90</li><li data-component="feedback">It turns 90 degrees.  It doesn\'t go forward 90.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNames/namesInput",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.4.3",
                  optional: false,
                  description:
                    "What is the side length for a square drawn by the following procedure?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Function_Call2",
                data: {
                  id: 10926,
                  base_course: "StudentCSP",
                  name: "Function_Call2",
                  chapter: "CSPNameNames",
                  subchapter: "namesInput",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Function_Call2 data-question_label="6.4.4">\n<div id=Function_Call2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Function_Call2_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important lines tour*doubleq*; 1-9: dsq3-line1-9; 2: dsq3-line2; 11-13: dsq3-line11-13; 14: dsq3-line14; 15: dsq3-line15; 16: dsq3-line16; 17: dsq3-line17;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef square(turtle,size):\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n\nfrom turtle import *  # use the turtle library\nspace = Screen()      # create a turtle screen (space)\nmalik = Turtle()      # create a turtle named malik\nsquare(malik, 100)    # draw a square of size 100\nsquare(malik, 75)     # draw a square of size 75\nsquare(malik, 50)     # draw a square of size 50\nsquare(malik, 25)     # draw a square of size 25\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/namesInput",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.4.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6_4_2_Name_The_Shape_Q1",
                data: {
                  id: 10927,
                  base_course: "StudentCSP",
                  name: "6_4_2_Name_The_Shape_Q1",
                  chapter: "CSPNameNames",
                  subchapter: "namesInput",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.4.5" data-multipleanswers="false"  id="6_4_2_Name_The_Shape_Q1"  style="visibility: hidden;">\n    <p>What shape would the following code draw?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">mystery</span><span class="p">(</span><span class="n">turtle</span><span class="p">,</span><span class="n">size</span><span class="p">):</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n\n<span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>       <span class="c1"># use the turtle library</span>\n<span class="n">space</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>           <span class="c1"># create a turtle screen (space)</span>\n<span class="n">malik</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>           <span class="c1"># create a turtle named malik</span>\n<span class="n">mystery</span><span class="p">(</span><span class="n">malik</span><span class="p">,</span> <span class="mi">100</span><span class="p">)</span>        <span class="c1"># draw something with size = 100</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="6_4_2_Name_The_Shape_Q1_opt_a">square</li><li data-component="feedback">Check the 2nd and 4th forwards.  How much do they move forward by?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="6_4_2_Name_The_Shape_Q1_opt_b">rectangle</li><li data-component="feedback">This will draw a rectangle with two sides with the specified size and two sides half that size.  Copy this code into the area above and run it.</li>\n    \n    <li data-component="answer"  id="6_4_2_Name_The_Shape_Q1_opt_c">triangle</li><li data-component="feedback">A triangle has 3 sides.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNames/namesInput",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.4.5",
                  optional: false,
                  description: "What shape would the following code draw?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6_4_3_Name_Args_Q1",
                data: {
                  id: 10928,
                  base_course: "StudentCSP",
                  name: "6_4_3_Name_Args_Q1",
                  chapter: "CSPNameNames",
                  subchapter: "namesInput",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.4.6" data-multipleanswers="false"  id="6_4_3_Name_Args_Q1"  style="visibility: hidden;">\n    <p>In the following code what are the arguments (actual parameters)?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">square</span><span class="p">(</span><span class="n">turtle</span><span class="p">,</span><span class="n">size</span><span class="p">):</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">size</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n\n<span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>       <span class="c1"># use the turtle library</span>\n<span class="n">space</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>           <span class="c1"># create a turtle screen (space)</span>\n<span class="n">imani</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>           <span class="c1"># create a turtle named imani</span>\n<span class="n">square</span><span class="p">(</span><span class="n">imani</span><span class="p">,</span> <span class="mi">25</span><span class="p">)</span>      <span class="c1"># draw a square with size 25</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="6_4_3_Name_Args_Q1_opt_a">turtle and size</li><li data-component="feedback">These are the names of the parameters (formal parameters).</li>\n    \n    <li data-component="answer"  id="6_4_3_Name_Args_Q1_opt_b">malik and 25</li><li data-component="feedback">Look again at the code above.  Is that the name of this turtle?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="6_4_3_Name_Args_Q1_opt_c">imani and 25</li><li data-component="feedback">The turtle is named imani and the size is 25 in the code: square(imani, 25).</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNames/namesInput",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.4.6",
                  optional: false,
                  description: "In the following code what are the arguments (actual parameters)?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6_4_4_Draw_Squares",
                data: {
                  id: 10929,
                  base_course: "StudentCSP",
                  name: "6_4_4_Draw_Squares",
                  chapter: "CSPNameNames",
                  subchapter: "namesInput",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="6_4_4_Draw_Squares" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following code assumes that a procedure square has been defined that takes a size.  The code should create a turtle and then use it to draw a square, move forward, and draw a second square as shown below, but the lines are mixed up.</p>\n<a class="reference internal image-reference" href="../_images/SquareForwardSquare.png"><img alt="../_images/SquareForwardSquare.png" class="align-center" src="../_images/SquareForwardSquare.png" style="width: 150px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="6.4.7"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nspace = Screen()\n---\nimani = Turtle()\n---\nsquare(imani, 75)\n---\nimani.forward(100)\n---\nsquare(imani, 50)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/namesInput",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.4.7",
                  optional: false,
                  description:
                    "The following code assumes that a procedure square has been defined that takes a",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6. Chapter 6 - Computers can Name Anything/6.4 Naming Input",
                data: {
                  id: 11604,
                  base_course: "StudentCSP",
                  name: "6. Chapter 6 - Computers can Name Anything/6.4 Naming Input",
                  chapter: "CSPNameNames",
                  subchapter: "namesInput",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "nameSets",
            data: {
              title: "6.5 Naming Sets of Procedures and Functions",
              num: 500,
              chapter: "CSPNameNames",
              subchapter: "nameSets",
              id: 11605,
              numQuestions: 5
            },
            children: [
              {
                key: "6_5_2_WSa",
                data: {
                  id: 10876,
                  base_course: "StudentCSP",
                  name: "6_5_2_WSa",
                  chapter: "CSPNameNames",
                  subchapter: "nameSets",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=6_5_2_WSa data-question_label="6.5.4">\n<div id=6_5_2_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="6_5_2_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# DEFINE THE PROCEDURE\ndef pentagon(turtle,size):\n    turtle.forward(size)\n    turtle.right(72)\n    turtle.forward(size)\n    turtle.right(72)\n    turtle.forward(size)\n    turtle.right(72)\n    turtle.forward(size)\n    turtle.right(72)\n    turtle.forward(size)\n    turtle.right(72)\n\n# CREATE TURTLE WORLD\nfrom turtle import *\nspace = Screen()\nemily = Turtle()\n# CALL THE PROCEDURE\npentagon(emily,100)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/nameSets",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.5.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Squares_Pattern",
                data: {
                  id: 10913,
                  base_course: "StudentCSP",
                  name: "Squares_Pattern",
                  chapter: "CSPNameNames",
                  subchapter: "nameSets",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Squares_Pattern data-question_label="6.5.1">\n<div id=Squares_Pattern_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Squares_Pattern_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important lines tour*doubleq*; 1-9: sqM-line1-9; 11-13: sqM-line11-13; 14: sqM-line14; 15: sqM-line15; 16: sqM-line16; 17: sqM-line17; 18: sqM-line18; 19: sqM-line19; 20: sqM-line20; 21: sqM-line21; 22: sqM-line22; 23: sqM-line23;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef square(turtle,size):\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n\nfrom turtle import *      # use the turtle library\nspace = Screen()          # create a turtle screen (space)\nemily = Turtle()          # create a turtle named emily\nemily.setheading(90)      # Point due north\nemily.forward(10)         # Offset the shapes a bit\nemily.right(18)           # And turn each one a bit\nsquare(emily,100)             # draw a square with size 100\nemily.forward(10)         # Offset the shapes a bit\nemily.right(18)           # And turn each one a bit\nsquare(emily,100)             # draw a square with size 100\nemily.forward(10)         # Offset the shapes a bit\nemily.right(18)           # And turn each one a bit\nsquare(emily,100)             # draw a square with size 100\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/nameSets",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.5.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6_5_1_Function_Use_Q1",
                data: {
                  id: 10914,
                  base_course: "StudentCSP",
                  name: "6_5_1_Function_Use_Q1",
                  chapter: "CSPNameNames",
                  subchapter: "nameSets",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.5.2" data-multipleanswers="false"  id="6_5_1_Function_Use_Q1"  style="visibility: hidden;">\n    <p>Imagine that you add one more line to the program above.  Which procedure can you use safely, because it will have been defined?</p>\n\n    <li data-component="answer"  id="6_5_1_Function_Use_Q1_opt_a">square</li><li data-component="feedback">You can use square since you just defined it, but you can also use the others.</li>\n    \n    <li data-component="answer"  id="6_5_1_Function_Use_Q1_opt_b">forward</li><li data-component="feedback">You can use forward because of the import, but you can also use others.</li>\n    \n    <li data-component="answer"  id="6_5_1_Function_Use_Q1_opt_c">right</li><li data-component="feedback">You can use right because of the import, but you can also use others.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="6_5_1_Function_Use_Q1_opt_d">All of the above</li><li data-component="feedback">Yes, you can use all of the turtle stuff from the import, plus the procedure square that was defined.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/nameSets",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.5.2",
                  optional: false,
                  description:
                    "Imagine that you add one more line to the program above.  Which procedure can yo",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6_5_2_WSq",
                data: {
                  id: 10915,
                  base_course: "StudentCSP",
                  name: "6_5_2_WSq",
                  chapter: "CSPNameNames",
                  subchapter: "nameSets",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=6_5_2_WSq data-question_label="6.5.3">\n<div id=6_5_2_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="6_5_2_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/nameSets",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.5.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6. Chapter 6 - Computers can Name Anything/6.5 Naming Sets of Procedures and Functions",
                data: {
                  id: 11605,
                  base_course: "StudentCSP",
                  name: "6. Chapter 6 - Computers can Name Anything/6.5 Naming Sets of Procedures and Functions",
                  chapter: "CSPNameNames",
                  subchapter: "nameSets",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "imageLib",
            data: {
              title: "6.6 Using an Image Library",
              num: 600,
              chapter: "CSPNameNames",
              subchapter: "imageLib",
              id: 11606,
              numQuestions: 3
            },
            children: [
              {
                key: "Image_Functions",
                data: {
                  id: 10909,
                  base_course: "StudentCSP",
                  name: "Image_Functions",
                  chapter: "CSPNameNames",
                  subchapter: "imageLib",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Image_Functions data-question_label="6.6.1">\n<div id=Image_Functions_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Image_Functions_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important Lines Tour*doubleq*; 1,4,7,11,15,18: timg2-line1_4_7_11_15_18; 2: timg2-line2; 5: timg2-line5; 8-9: timg2-line8-9; 12-13: timg2-line12-13; 16: timg2-line16; 19-20: timg2-line19-20;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# USE THE IMAGE LIBRARY\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("arch.jpg")\n\n# LOOP THROUGH THE PIXELS\npixels = img.getPixels()\nfor p in pixels:\n\n    # MODIFY THE PIXEL COLOR\n    r = p.getRed()\n    p.setRed(r * 0.5)\n\n    # UPDATE THE IMAGE\n    img.updatePixel(p)\n\n# SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/imageLib",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.6.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6_6_1_Image_Functions_Q1",
                data: {
                  id: 10910,
                  base_course: "StudentCSP",
                  name: "6_6_1_Image_Functions_Q1",
                  chapter: "CSPNameNames",
                  subchapter: "imageLib",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.6.2" data-multipleanswers="false"  id="6_6_1_Image_Functions_Q1"  style="visibility: hidden;">\n    <p>What does the line <code class="docutils literal notranslate"><span class="pre">p.setRed(r</span> <span class="pre">*</span> <span class="pre">0.5)</span></code> do?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="6_6_1_Image_Functions_Q1_opt_a">It sets the red value in the current pixel to half the red of the original.</li><li data-component="feedback">Multiplying by 0.5 is the same as dividing by 2.</li>\n    \n    <li data-component="answer"  id="6_6_1_Image_Functions_Q1_opt_b">It sets the red value in the current pixel to twice the red of the original.</li><li data-component="feedback">This would be true if it was r * 2, instead of r * 0.5</li>\n    \n    <li data-component="answer"  id="6_6_1_Image_Functions_Q1_opt_c">It sets the red value in the current pixel to 5 times the red of the original.</li><li data-component="feedback">This would be true if it was r * 5, instead of r * 0.5</li>\n    \n    <li data-component="answer"  id="6_6_1_Image_Functions_Q1_opt_d">It sets the red value in the current pixel to 0.5.</li><li data-component="feedback">This would be true if it was 0.5 instead of r * 0.5</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/imageLib",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.6.2",
                  optional: false,
                  description: "What does the line ``p.setRed(r * 0.5)`` do?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6. Chapter 6 - Computers can Name Anything/6.6 Using an Image Library",
                data: {
                  id: 11606,
                  base_course: "StudentCSP",
                  name: "6. Chapter 6 - Computers can Name Anything/6.6 Using an Image Library",
                  chapter: "CSPNameNames",
                  subchapter: "imageLib",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "renameFunctions",
            data: {
              title: "6.7 Renaming Python’s Functions",
              num: 700,
              chapter: "CSPNameNames",
              subchapter: "renameFunctions",
              id: 11607,
              numQuestions: 3
            },
            children: [
              {
                key: "Rename_Internal",
                data: {
                  id: 10930,
                  base_course: "StudentCSP",
                  name: "Rename_Internal",
                  chapter: "CSPNameNames",
                  subchapter: "renameFunctions",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Rename_Internal data-question_label="6.7.1">\n<div id=Rename_Internal_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Rename_Internal_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line-by-line tour*doubleq*; 1: funName-line1; 2: funName-line2; 3: funName-line3; 4: funName-line4; 5: funName-line5; 6: funName-line6;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nabsolute = abs\nprint("Absolute value of -5:")\nprint(absolute(-5))\nnoDecimal = int\nprint("Integer part of of 34.2")\nprint(noDecimal(34.2))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/renameFunctions",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.7.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6_7_1_Rename_Internal_Q1",
                data: {
                  id: 10931,
                  base_course: "StudentCSP",
                  name: "6_7_1_Rename_Internal_Q1",
                  chapter: "CSPNameNames",
                  subchapter: "renameFunctions",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.7.2" data-multipleanswers="false"  id="6_7_1_Rename_Internal_Q1"  style="visibility: hidden;">\n    <p>If you add one more line to the above program, <cite>print(noDecimal(absolute(-16.789)))</cite>, what prints?</p>\n\n    <li data-component="answer"  id="6_7_1_Rename_Internal_Q1_opt_a">-16</li><li data-component="feedback">No, absolute will change the negative</li>\n    \n    <li data-component="answer"  id="6_7_1_Rename_Internal_Q1_opt_b">-16.789</li><li data-component="feedback">No, the original number will change</li>\n    \n    <li data-component="answer"  id="6_7_1_Rename_Internal_Q1_opt_c">16.789</li><li data-component="feedback">No, noDecimal will remove the decimal part</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="6_7_1_Rename_Internal_Q1_opt_d">16</li><li data-component="feedback">Yes! Absolute will make it positive, and noDecimal will throw away the values after the decimal point leaving just the 16.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/renameFunctions",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.7.2",
                  optional: false,
                  description:
                    "If you add one more line to the above program, `print(noDecimal(absolute(-16.789",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6. Chapter 6 - Computers can Name Anything/6.7 Renaming Python’s Functions",
                data: {
                  id: 11607,
                  base_course: "StudentCSP",
                  name: "6. Chapter 6 - Computers can Name Anything/6.7 Renaming Python’s Functions",
                  chapter: "CSPNameNames",
                  subchapter: "renameFunctions",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "6.8 Chapter 6 - Summary",
              num: 800,
              chapter: "CSPNameNames",
              subchapter: "summary",
              id: 11608,
              numQuestions: 1
            },
            children: [
              {
                key: "6. Chapter 6 - Computers can Name Anything/6.8 Chapter 6 - Summary",
                data: {
                  id: 11608,
                  base_course: "StudentCSP",
                  name: "6. Chapter 6 - Computers can Name Anything/6.8 Chapter 6 - Summary",
                  chapter: "CSPNameNames",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "6.9 Chapter 6 Exercises",
              num: 900,
              chapter: "CSPNameNames",
              subchapter: "Exercises",
              id: 11609,
              numQuestions: 21
            },
            children: [
              {
                key: "ch6ex1q",
                data: {
                  id: 10883,
                  base_course: "StudentCSP",
                  name: "ch6ex1q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex1q data-question_label="6.9.1">\n<div id=ch6ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef square(turtle):\nturtle.forward(100)\nturtle.right(90)\nturtle.forward(100)\nturtle.right(90)\nturtle.forward(100)\nturtle.right(90)\nturtle.forward(100)\nturtle.right(90)\n\nfrom turtle import *    # use the turtle library\nspace = Screen()        # create a turtle screen\nmalik = Turtle()        # create a turtle named malik\nsquare(malik)           # draw a square with malik\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex2q",
                data: {
                  id: 10884,
                  base_course: "StudentCSP",
                  name: "ch6ex2q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex2q data-question_label="6.9.2">\n<div id=ch6ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef recPerimeter(length, width)\nperimeter = 2 * (length + width)\nReturn recPerimeter\n\nprint(recPerimeter(2,4))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex3q",
                data: {
                  id: 10885,
                  base_course: "StudentCSP",
                  name: "ch6ex3q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex3q data-question_label="6.9.3">\n<div id=ch6ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef square(turtle)\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n\nfrom turtle import *    # use the turtle library\nspace = Screen()        # create a turtle screen\nmalik = Turtle()        # create a turtle named malik\nsquare()                # draw a square with malik\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex4q",
                data: {
                  id: 10886,
                  base_course: "StudentCSP",
                  name: "ch6ex4q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex4q data-question_label="6.9.4">\n<div id=ch6ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = squareArea(5)\n\nDef squareArea(sideLength):\n        area = length * length\n        return area\nprint(x)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex5q",
                data: {
                  id: 10887,
                  base_course: "StudentCSP",
                  name: "ch6ex5q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex5q data-question_label="6.9.5">\n<div id=ch6ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef square(turtle,size):\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n\n\nfrom turtle import *    # use the turtle library\nspace = Screen()        # create a turtle screen (space)\nmalik = Turtle()        # create a turtle named malik\nsquare(Malik, 100)      # draw a square of size 100\nsquare(Malik, 75)       # draw a square of size 75\nsquare(Malik, 50)       # draw a square of size 50\nsquare(Malik, 25)       # draw a square of size 25\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex6q",
                data: {
                  id: 10888,
                  base_course: "StudentCSP",
                  name: "ch6ex6q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex6q data-question_label="6.9.6">\n<div id=ch6ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef move(turtle):\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n\nfrom turtle import *\nspace = Screen()\nt = Turtle()\nmove(t, 100, 90)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex7q",
                data: {
                  id: 10889,
                  base_course: "StudentCSP",
                  name: "ch6ex7q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex7q data-question_label="6.9.7">\n<div id=ch6ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef square(turtle,size):\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n    turtle.forward(size)\n    turtle.right(90)\n\n\nfrom turtle import *    # use the turtle library\nspace = Screen()        # create a turtle screen (space)\nmalik = Turtle()        # create a turtle named malik\nsquare(100, malik)      # draw a square of size 100\nsquare(malik)               # draw a square of size 75\nsquare(50)          # draw a square of size 50\nsquare(malik, 25)       # draw a square of size 25\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex8q",
                data: {
                  id: 10890,
                  base_course: "StudentCSP",
                  name: "ch6ex8q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex8q data-question_label="6.9.8">\n<div id=ch6ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef nameAndAge(nameString, ageInt):\n        print(My name is "nameString" and I am + "str(ageInt)" + years old)\n\nprint(nameAndAge(18, "John"))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex9q",
                data: {
                  id: 10891,
                  base_course: "StudentCSP",
                  name: "ch6ex9q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex9q data-question_label="6.9.9">\n<div id=ch6ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef square(turtle):\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n    turtle.forward(100)\n    turtle.right(90)\n\nfrom turtle import *    # use the turtle library\nspace = Screen()        # create a turtle screen\nmalik = Turtle()        # create a turtle named malik\nsquare(malik)           # draw a square with malik\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex10q",
                data: {
                  id: 10892,
                  base_course: "StudentCSP",
                  name: "ch6ex10q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex10q data-question_label="6.9.10">\n<div id=ch6ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef areaTriangle():\n    base = 5\n    height = 4\n    return (5 * 4) / 2\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex11q",
                data: {
                  id: 10893,
                  base_course: "StudentCSP",
                  name: "ch6ex11q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex11q data-question_label="6.9.11">\n<div id=ch6ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nmiles = 500\nmilesPerGallon = 26\nnumGallons = miles / milesPerGallon\npricePerGallon = 3.45\ntotal = numGallons * pricePerGallon\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex12q",
                data: {
                  id: 10894,
                  base_course: "StudentCSP",
                  name: "ch6ex12q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex12q data-question_label="6.9.12">\n<div id=ch6ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\nt = Turtle()\nt2 = Turtle()\nturtleDrawing(t, t2, 100, 45)\n\nturtleDrawing def(turtle, turtle2, distance, angle)\n        turtle.left(angle)\n        turtle2.right(angle)\n        turtle.forward(turtle2)\n        turtle2.forward(turtle)\n        return distance\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex13q",
                data: {
                  id: 10895,
                  base_course: "StudentCSP",
                  name: "ch6ex13q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex13q data-question_label="6.9.13">\n<div id=ch6ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ntankCapacity = 10\namountLeft = 0.25\nnumGallons = tankCapacity * amountLeft\nmilesPerGallon = 32\nnumMiles = numGallons * milesPerGallon\nprint(numMiles)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex14q",
                data: {
                  id: 10896,
                  base_course: "StudentCSP",
                  name: "ch6ex14q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex14q data-question_label="6.9.14">\n<div id=ch6ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nspeed = 5\ndistance = 25\ntimeTakenToTravel =\nprint(timeTakenToTravel)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex15q",
                data: {
                  id: 10897,
                  base_course: "StudentCSP",
                  name: "ch6ex15q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex15q data-question_label="6.9.15">\n<div id=ch6ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex16q",
                data: {
                  id: 10898,
                  base_course: "StudentCSP",
                  name: "ch6ex16q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex16q data-question_label="6.9.16">\n<div id=ch6ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex17q",
                data: {
                  id: 10899,
                  base_course: "StudentCSP",
                  name: "ch6ex17q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex17q data-question_label="6.9.17">\n<div id=ch6ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex18q",
                data: {
                  id: 10900,
                  base_course: "StudentCSP",
                  name: "ch6ex18q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex18q data-question_label="6.9.18">\n<div id=ch6ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex19q",
                data: {
                  id: 10901,
                  base_course: "StudentCSP",
                  name: "ch6ex19q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex19q data-question_label="6.9.19">\n<div id=ch6ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch6ex20q",
                data: {
                  id: 10902,
                  base_course: "StudentCSP",
                  name: "ch6ex20q",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch6ex20q data-question_label="6.9.20">\n<div id=ch6ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch6ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPNameNames/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.9.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6. Chapter 6 - Computers can Name Anything/6.9 Chapter 6 Exercises",
                data: {
                  id: 11609,
                  base_course: "StudentCSP",
                  name: "6. Chapter 6 - Computers can Name Anything/6.9 Chapter 6 Exercises",
                  chapter: "CSPNameNames",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam5a6",
            data: {
              title: "6.10 Exam Questions for Chapters 5 and 6",
              num: 1000,
              chapter: "CSPNameNames",
              subchapter: "exam5a6",
              id: 11610,
              numQuestions: 7
            },
            children: [
              {
                key: "e5a6_1",
                data: {
                  id: 10903,
                  base_course: "StudentCSP",
                  name: "e5a6_1",
                  chapter: "CSPNameNames",
                  subchapter: "exam5a6",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.10.2" data-multipleanswers="false"  id="e5a6_1"  style="visibility: hidden;">\n    <p>What value is printed when the following code is executed?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;John Smith&quot;</span>\n<span class="k">def</span> <span class="nf">myFunction</span><span class="p">(</span><span class="n">parameter</span><span class="p">):</span>\n    <span class="n">value</span> <span class="o">=</span> <span class="s2">&quot;First&quot;</span>\n    <span class="n">value</span> <span class="o">=</span> <span class="n">parameter</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="n">value</span><span class="p">)</span>\n\n<span class="n">myFunction</span><span class="p">(</span><span class="s2">&quot;Second&quot;</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e5a6_1_opt_a">value</li><li data-component="feedback">When you print a variable it will print the value of the variable.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e5a6_1_opt_b">Second</li><li data-component="feedback">When you call myFunction("Second") the value of parameter is set to "Second".  This code prints the value of the variable called "value" which is set to the value of parameter.</li>\n    \n    <li data-component="answer"  id="e5a6_1_opt_c">parameter</li><li data-component="feedback">When value = parameter is executed the value of parameter is copied into the space called value.</li>\n    \n    <li data-component="answer"  id="e5a6_1_opt_d">First</li><li data-component="feedback">While value was first set to "First" it was changed to a copy of the value of parameter.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNames/exam5a6",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.10.2",
                  optional: false,
                  description: "What value is printed when the following code is executed?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e5a6_2",
                data: {
                  id: 10904,
                  base_course: "StudentCSP",
                  name: "e5a6_2",
                  chapter: "CSPNameNames",
                  subchapter: "exam5a6",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.10.3" data-multipleanswers="false"  id="e5a6_2"  style="visibility: hidden;">\n    <p>Which picture would the following code produce?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>\n<span class="n">screen</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>\n<span class="n">alice</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>\n<span class="n">alice</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>\n<span class="n">alice</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n<span class="n">alice</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>\n<span class="n">alice</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n<span class="n">alice</span><span class="o">.</span><span class="n">pencolor</span><span class="p">(</span><span class="s2">&quot;red&quot;</span><span class="p">)</span>\n<span class="n">alice</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>\n<span class="n">alice</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n<span class="n">alice</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e5a6_2_opt_a"><img src="../_static/squarea.png" alt="A square with the first line in black and the next 3 in red" width="300"></li><li data-component="feedback">This would be true if the alice.pencolor("red") was after the first forward.</li>\n    \n    <li data-component="answer"  id="e5a6_2_opt_b"><img src="../_static/squareb.png" alt="A square with all lines in red" width="300"></li><li data-component="feedback">This would be true if the alice.pencolor("red") was before the first forward.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e5a6_2_opt_c"><img src="../_static/squarec.png" alt="A square with the first two lines in black and the last two in red" width="300"></li><li data-component="feedback">Since the alice.pencolor("red") is after the second forward the first two lines will be black and the last two will be red.</li>\n    \n    <li data-component="answer"  id="e5a6_2_opt_d"><img src="../_static/squared.png" alt="A square with the first three lines in black and the last one in red" width="300"></li><li data-component="feedback">This would be true if the alice.pencolor("red") was after the third forward.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNames/exam5a6",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.10.3",
                  optional: false,
                  description: "Which picture would the following code produce?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e5a6_3",
                data: {
                  id: 10905,
                  base_course: "StudentCSP",
                  name: "e5a6_3",
                  chapter: "CSPNameNames",
                  subchapter: "exam5a6",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.10.4" data-multipleanswers="false"  id="e5a6_3"  style="visibility: hidden;">\n    <p>Given the following lines of code, which will move the turtle bob 50 units forward?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>\n<span class="n">space</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>\n<span class="n">bob</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e5a6_3_opt_a">bob.move(50)</li><li data-component="feedback">Turtles don\'t understand move.</li>\n    \n    <li data-component="answer"  id="e5a6_3_opt_b">bob.left(50)</li><li data-component="feedback">The left procedure turns the turtle left by the specified amount.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e5a6_3_opt_c">bob.forward(50)</li><li data-component="feedback">Turtles have a forward procedure which moves the turtle in the direction it is facing by the specified amount.</li>\n    \n    <li data-component="answer"  id="e5a6_3_opt_d">bob.right(50)</li><li data-component="feedback">The right procedure turns the turtle right by the specified amount.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNames/exam5a6",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.10.4",
                  optional: false,
                  description:
                    "Given the following lines of code, which will move the turtle bob 50 units forwa",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e5a6_4",
                data: {
                  id: 10906,
                  base_course: "StudentCSP",
                  name: "e5a6_4",
                  chapter: "CSPNameNames",
                  subchapter: "exam5a6",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.10.5" data-multipleanswers="false"  id="e5a6_4"  style="visibility: hidden;">\n    <p>A named sequence of statements that returns a result is known as which of the following?</p>\n\n    <li data-component="answer"  id="e5a6_4_opt_a">definition</li><li data-component="feedback">You use the def keyword to define a procedure or function.</li>\n    \n    <li data-component="answer"  id="e5a6_4_opt_b">procedure</li><li data-component="feedback">A procedure doesn\'t return anything.</li>\n    \n    <li data-component="answer"  id="e5a6_4_opt_c">turtle</li><li data-component="feedback">Turtles have procedures and functions.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e5a6_4_opt_d">function</li><li data-component="feedback">A function returns a result.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNames/exam5a6",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.10.5",
                  optional: false,
                  description:
                    "A named sequence of statements that returns a result is known as which of the fo",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e5a6_5",
                data: {
                  id: 10907,
                  base_course: "StudentCSP",
                  name: "e5a6_5",
                  chapter: "CSPNameNames",
                  subchapter: "exam5a6",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.10.6" data-multipleanswers="false"  id="e5a6_5"  style="visibility: hidden;">\n    <p>Which picture would the following code produce?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>\n<span class="n">space</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>\n<span class="n">sue</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>\n<span class="n">sue</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n<span class="n">sue</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">75</span><span class="p">)</span>\n<span class="n">sue</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n<span class="n">sue</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">150</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e5a6_5_opt_a"><img src="../_static/checka.png" alt="Shorter line to south and then longer line to east" width="300"></li><li data-component="feedback">This would be true if it was right first and then left.</li>\n    \n    <li data-component="answer"  id="e5a6_5_opt_b"><img src="../_static/checkb.png" alt="Longer line to south and then shorter line to east" width="300"></li><li data-component="feedback">This would be true if it was right first and then left and if the first forward was 150 and the last was 75.</li>\n    \n    <li data-component="answer"  id="e5a6_5_opt_c"><img src="../_static/checkc.png" alt="Longer line to north and then shorter line to east" width="300"></li><li data-component="feedback">This would be true if it was the shorter line to the north and the longer to the east.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e5a6_5_opt_d"><img src="../_static/checkd.png" alt="Shorter line to north and then longer line to east" width="300"></li><li data-component="feedback">This will draw the shorter line to the north and then the longer one to the east.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNames/exam5a6",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.10.6",
                  optional: false,
                  description: "Which picture would the following code produce?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e5a6_6",
                data: {
                  id: 10908,
                  base_course: "StudentCSP",
                  name: "e5a6_6",
                  chapter: "CSPNameNames",
                  subchapter: "exam5a6",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="6.10.7" data-multipleanswers="false"  id="e5a6_6"  style="visibility: hidden;">\n    <p>What will the following code draw?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">shape</span><span class="p">(</span><span class="n">turtle</span><span class="p">):</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="mi">60</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">120</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">120</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>\n    <span class="n">turtle</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">120</span><span class="p">)</span>\n\n<span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>\n<span class="n">space</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>\n<span class="n">luis</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>\n<span class="n">shape</span><span class="p">(</span><span class="n">luis</span><span class="p">)</span>\n<span class="n">luis</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">200</span><span class="p">)</span>\n<span class="n">shape</span><span class="p">(</span><span class="n">luis</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e5a6_6_opt_a">Two squares connected with a straight line</li><li data-component="feedback">This would be true if the right turns were 90 and there were four forwards</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e5a6_6_opt_b">Two triangles connected with a straight line</li><li data-component="feedback">This procedure will draw a triangle and it is called twice so it draws two triangles</li>\n    \n    <li data-component="answer"  id="e5a6_6_opt_c">Two rectangles connected with a straight line</li><li data-component="feedback">This would be true if the right turns were 90 and there were four forwards with two different forward amounts</li>\n    \n    <li data-component="answer"  id="e5a6_6_opt_d">Nothing</li><li data-component="feedback">This would be true if we only defined the procedure and didn\'t execute it.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPNameNames/exam5a6",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "6.10.7",
                  optional: false,
                  description: "What will the following code draw?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "6. Chapter 6 - Computers can Name Anything/6.10 Exam Questions for Chapters 5 and 6",
                data: {
                  id: 11610,
                  base_course: "StudentCSP",
                  name: "6. Chapter 6 - Computers can Name Anything/6.10 Exam Questions for Chapters 5 and 6",
                  chapter: "CSPNameNames",
                  subchapter: "exam5a6",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPRepeatNumbers",
        data: {
          title: "7. Chapter 7 - Computers can Repeat Steps",
          num: 7
        },
        children: [
          {
            key: "repeatSteps",
            data: {
              title: "7.1 Repeating Steps",
              num: 100,
              chapter: "CSPRepeatNumbers",
              subchapter: "repeatSteps",
              id: 11611,
              numQuestions: 1
            },
            children: [
              {
                key: "7. Chapter 7 - Computers can Repeat Steps/7.1 Repeating Steps",
                data: {
                  id: 11611,
                  base_course: "StudentCSP",
                  name: "7. Chapter 7 - Computers can Repeat Steps/7.1 Repeating Steps",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "repeatSteps",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "repeatNums",
            data: {
              title: "7.2 Repeating with Numbers",
              num: 200,
              chapter: "CSPRepeatNumbers",
              subchapter: "repeatNums",
              id: 11612,
              numQuestions: 4
            },
            children: [
              {
                key: "Numbers_Repeat1",
                data: {
                  id: 11232,
                  base_course: "StudentCSP",
                  name: "Numbers_Repeat1",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "repeatNums",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Numbers_Repeat1 data-question_label="7.2.1">\n<div id=Numbers_Repeat1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Numbers_Repeat1_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 1: for1_line1; 2: for1_line2; 3: for1_line3; 4: for1_line4; 5: for1_line5;*atype**doubleq*High level tour*doubleq*; 1-2: for1_line1-2; 3-4: for1_line3-4; 5: for1_s_line5;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsum = 0  # Start out with nothing\nthingsToAdd = [1,2,3,4,5,6,7,8,9,10]\nfor number in thingsToAdd:\n    sum = sum + number\nprint(sum)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/repeatNums",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.2.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_2_1_Numbers_Repeat1_Q1",
                data: {
                  id: 11233,
                  base_course: "StudentCSP",
                  name: "7_2_1_Numbers_Repeat1_Q1",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "repeatNums",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="7.2.2" data-multipleanswers="false"  id="7_2_1_Numbers_Repeat1_Q1"  style="visibility: hidden;">\n    <p>What is printed if you change the program above so that line 5 is also indented the same amount as line 4?</p>\n\n    <li data-component="answer"  id="7_2_1_Numbers_Repeat1_Q1_opt_a">It prints the same thing it did before.</li><li data-component="feedback">Did you actually try it?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="7_2_1_Numbers_Repeat1_Q1_opt_b">It prints the value of sum 10 times and sum is different each time it is printed.</li><li data-component="feedback">Both lines 4 and 5 are now in the body of the loop and are executed each time through the loop.</li>\n    \n    <li data-component="answer"  id="7_2_1_Numbers_Repeat1_Q1_opt_c">It prints the same sum 10 times.</li><li data-component="feedback">Sum should be changing.</li>\n    \n    <li data-component="answer"  id="7_2_1_Numbers_Repeat1_Q1_opt_d">You get an error.</li><li data-component="feedback">You can have more than one line in the body of a loop.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/repeatNums",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.2.2",
                  optional: false,
                  description:
                    "What is printed if you change the program above so that line 5 is also indented ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_2_2_Numbers_Repeat1_Q2",
                data: {
                  id: 11234,
                  base_course: "StudentCSP",
                  name: "7_2_2_Numbers_Repeat1_Q2",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "repeatNums",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="7.2.3" data-multipleanswers="false"  id="7_2_2_Numbers_Repeat1_Q2"  style="visibility: hidden;">\n    <p>What is printed if you change the program above so that lines 4 and 5 are not indented?</p>\n\n    <li data-component="answer"  id="7_2_2_Numbers_Repeat1_Q2_opt_a">It prints the same thing it did before.</li><li data-component="feedback">Did you actually try it?</li>\n    \n    <li data-component="answer"  id="7_2_2_Numbers_Repeat1_Q2_opt_b">It prints the value of sum 10 times and sum is different each time it is printed.</li><li data-component="feedback">Both lines 4 and 5 are not in the loop anymore.</li>\n    \n    <li data-component="answer"  id="7_2_2_Numbers_Repeat1_Q2_opt_c">It prints the same sum 10 times.</li><li data-component="feedback">Is the print repeated now?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="7_2_2_Numbers_Repeat1_Q2_opt_d">You get an error.</li><li data-component="feedback">You have to have at least one statement in the body of a loop.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/repeatNums",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.2.3",
                  optional: false,
                  description:
                    "What is printed if you change the program above so that lines 4 and 5 are not in",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7. Chapter 7 - Computers can Repeat Steps/7.2 Repeating with Numbers",
                data: {
                  id: 11612,
                  base_course: "StudentCSP",
                  name: "7. Chapter 7 - Computers can Repeat Steps/7.2 Repeating with Numbers",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "repeatNums",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "list",
            data: {
              title: "7.3 What is a List?",
              num: 300,
              chapter: "CSPRepeatNumbers",
              subchapter: "list",
              id: 11613,
              numQuestions: 9
            },
            children: [
              {
                key: "Numbers_Repeat2",
                data: {
                  id: 11216,
                  base_course: "StudentCSP",
                  name: "Numbers_Repeat2",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "list",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Numbers_Repeat2 data-question_label="7.3.1">\n<div id=Numbers_Repeat2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Numbers_Repeat2_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 1: for1_line1; 2: for1_line2; 3: for1_line3; 4: for1_line4; 5: for1_line5;*atype**doubleq*High level tour*doubleq*; 1-2: for1_line1-2; 3-4: for1_line3-4; 5: for1_s_line5;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsum = 0  # Start out with nothing\nthingsToAdd = [1,2,3,4,5,6,7,8,9,10]\nfor number in thingsToAdd:\n    sum = sum + number\nprint(sum)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/list",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_3_1_Numbers_Repeat2_Q1",
                data: {
                  id: 11217,
                  base_course: "StudentCSP",
                  name: "7_3_1_Numbers_Repeat2_Q1",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "list",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="7.3.2" data-multipleanswers="false"  id="7_3_1_Numbers_Repeat2_Q1"  style="visibility: hidden;">\n    <p>Now, change the program above to get the product instead of the sum (e.g., replace <cite>+</cite> with <cite>*</cite>, and replace the <cite>0</cite> as the initial value of <cite>sum</cite> to <cite>1</cite>).  What do you get now when you run the program?</p>\n\n    <li data-component="answer"  id="7_3_1_Numbers_Repeat2_Q1_opt_a">55</li><li data-component="feedback">That\'s the sum</li>\n    \n    <li data-component="answer"  id="7_3_1_Numbers_Repeat2_Q1_opt_b">0</li><li data-component="feedback">That\'s what you get if you leave the sum as 0.  Multipying everything by 0 gets you 0</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="7_3_1_Numbers_Repeat2_Q1_opt_c">3628800</li><li data-component="feedback">That\'s 1*2*3*4*5*6*7*8*9*10</li>\n    \n    <li data-component="answer"  id="7_3_1_Numbers_Repeat2_Q1_opt_d">Error - number is too big</li><li data-component="feedback">It should actually work</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/list",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.3.2",
                  optional: false,
                  description:
                    "Now, change the program above to get the product instead of the sum (e.g., repla",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Numbers_Product",
                data: {
                  id: 11218,
                  base_course: "StudentCSP",
                  name: "Numbers_Product",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "list",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="7.3.1.1">\n        <div id=Numbers_Product_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Numbers_Product"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 7.3.1.1 (Numbers_Product)</span> </p>\n    </div>\n\n<script>\nvar Numbers_Product_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Numbers_Product"] = {"code": "product = 1  # Start out with nothing\\nnumbers = [1,2,3,4,5,6,7,8,9,10]\\nfor number in numbers:\\n    product = product * number\\nprint(product)", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"product": 1}, "ordered_globals": ["product"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"product": 1, "numbers": ["REF", 1]}, "ordered_globals": ["product", "numbers"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"product": 1, "numbers": ["REF", 1], "number": 1}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"product": 1, "numbers": ["REF", 1], "number": 1}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"product": 1, "numbers": ["REF", 1], "number": 2}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"product": 2, "numbers": ["REF", 1], "number": 2}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"product": 2, "numbers": ["REF", 1], "number": 3}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"product": 6, "numbers": ["REF", 1], "number": 3}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"product": 6, "numbers": ["REF", 1], "number": 4}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"product": 24, "numbers": ["REF", 1], "number": 4}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"product": 24, "numbers": ["REF", 1], "number": 5}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"product": 120, "numbers": ["REF", 1], "number": 5}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"product": 120, "numbers": ["REF", 1], "number": 6}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"product": 720, "numbers": ["REF", 1], "number": 6}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"product": 720, "numbers": ["REF", 1], "number": 7}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"product": 5040, "numbers": ["REF", 1], "number": 7}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"product": 5040, "numbers": ["REF", 1], "number": 8}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"product": 40320, "numbers": ["REF", 1], "number": 8}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"product": 40320, "numbers": ["REF", 1], "number": 9}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"product": 362880, "numbers": ["REF", 1], "number": 9}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"product": 362880, "numbers": ["REF", 1], "number": 10}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"product": 3628800, "numbers": ["REF", 1], "number": 10}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"product": 3628800, "numbers": ["REF", 1], "number": 10}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": ""}, {"line": 5, "event": "return", "func_name": "<module>", "globals": {"product": 3628800, "numbers": ["REF", 1], "number": 10}, "ordered_globals": ["product", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["LIST", 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}, "stdout": "3628800\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/list",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.3.1.1",
                  optional: false,
                  description:
                    "product = 1  # Start out with nothing numbers = [1,2,3,4,5,6,7,8,9,10] for numbe",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_3_2_Numbers_Product_Q1",
                data: {
                  id: 11219,
                  base_course: "StudentCSP",
                  name: "7_3_2_Numbers_Product_Q1",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "list",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="7.3.1.2" data-multipleanswers="false"  id="7_3_2_Numbers_Product_Q1"  style="visibility: hidden;">\n    <p>What is the value of number the 3rd time through the loop?</p>\n\n    <li data-component="answer"  id="7_3_2_Numbers_Product_Q1_opt_a">1</li><li data-component="feedback">That\'s the value the first time through the loop</li>\n    \n    <li data-component="answer"  id="7_3_2_Numbers_Product_Q1_opt_b">2</li><li data-component="feedback">That\'s the value the second time through the loop</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="7_3_2_Numbers_Product_Q1_opt_c">3</li><li data-component="feedback">That\'s the value the third time through the loop</li>\n    \n    <li data-component="answer"  id="7_3_2_Numbers_Product_Q1_opt_d">4</li><li data-component="feedback">That\'s the value the fourth time through the loop</li>\n    \n    <li data-component="answer"  id="7_3_2_Numbers_Product_Q1_opt_e">10</li><li data-component="feedback">That\'s the value the last time through the loop</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/list",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.3.1.2",
                  optional: false,
                  description: "What is the value of number the 3rd time through the loop?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_3_3_Numbers_Product_Q2",
                data: {
                  id: 11220,
                  base_course: "StudentCSP",
                  name: "7_3_3_Numbers_Product_Q2",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "list",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="7.3.1.3" data-multipleanswers="false"  id="7_3_3_Numbers_Product_Q2"  style="visibility: hidden;">\n    <p>What is the value of product after the 4th time through the loop?</p>\n\n    <li data-component="answer"  id="7_3_3_Numbers_Product_Q2_opt_a">6</li><li data-component="feedback">That\'s the value after the 3rd time through the loop.</li>\n    \n    <li data-component="answer"  id="7_3_3_Numbers_Product_Q2_opt_b">10</li><li data-component="feedback">That\'s the value if we were adding up the values rather than multiplying them.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="7_3_3_Numbers_Product_Q2_opt_c">24</li><li data-component="feedback">That\'s the value after the 4th time through the loop.</li>\n    \n    <li data-component="answer"  id="7_3_3_Numbers_Product_Q2_opt_d">120</li><li data-component="feedback">That\'s the value after the 5th time through the loop.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/list",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.3.1.3",
                  optional: false,
                  description: "What is the value of product after the 4th time through the loop?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_3_4_Average",
                data: {
                  id: 11221,
                  base_course: "StudentCSP",
                  name: "7_3_4_Average",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "list",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="7_3_4_Average" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program calculates the average of a list of numbers, but the code is mixed up.  First initialize the sum to 0.  Then create the list of numbers.  Loop through the list and each time add the current number to the sum.  Print the sum divided by the number of items in the list.  &lt;b&gt;Don’t forget that you must indent the lines that are repeated in the loop&lt;/b&gt;.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="7.3.1.4"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        sum = 0\nnumbers = [90, 80, 75, 90, 83]\nfor number in numbers:\n    sum = sum + number\nprint(sum / 5)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/list",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.3.1.4",
                  optional: false,
                  description:
                    "The following program calculates the average of a list of numbers, but the code ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_3_5_WSq",
                data: {
                  id: 11222,
                  base_course: "StudentCSP",
                  name: "7_3_5_WSq",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "list",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=7_3_5_WSq data-question_label="7.3.1.5">\n<div id=7_3_5_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="7_3_5_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/list",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.3.1.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_3_5_WSa",
                data: {
                  id: 11223,
                  base_course: "StudentCSP",
                  name: "7_3_5_WSa",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "list",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=7_3_5_WSa data-question_label="7.3.1.6">\n<div id=7_3_5_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="7_3_5_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# DEFINE THE FUNCTION\ndef summation(endvalue):\n  # INITIALIZE ACCUMULATOR\n  sum = 0\n  # NAME DATA\n  numbers = range(1, endvalue +1)\n  # LOOP THROUGH DATA\n  for number in numbers:\n    # ACCUMULATE\n    sum = sum + number\n  # RETURN SUM\n  return sum\n\n# PRINT RESULT\nprint(summation(10))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/list",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.3.1.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7. Chapter 7 - Computers can Repeat Steps/7.3 What is a List?",
                data: {
                  id: 11613,
                  base_course: "StudentCSP",
                  name: "7. Chapter 7 - Computers can Repeat Steps/7.3 What is a List?",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "list",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "range",
            data: {
              title: "7.4 The Range Function",
              num: 400,
              chapter: "CSPRepeatNumbers",
              subchapter: "range",
              id: 11614,
              numQuestions: 7
            },
            children: [
              {
                key: "Numbers_Range1",
                data: {
                  id: 11226,
                  base_course: "StudentCSP",
                  name: "Numbers_Range1",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "range",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Numbers_Range1 data-question_label="7.4.1">\n<div id=Numbers_Range1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Numbers_Range1_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nprint(range(3))\nprint(range(5))\nprint(range(11))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/range",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_4_1_Numbers_Range1",
                data: {
                  id: 11227,
                  base_course: "StudentCSP",
                  name: "7_4_1_Numbers_Range1",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "range",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="7.4.2" data-multipleanswers="false"  id="7_4_1_Numbers_Range1"  style="visibility: hidden;">\n    <p>Which of the following lines actually gives us a list of all the numbers from 0 to 5?</p>\n\n    <li data-component="answer"  id="7_4_1_Numbers_Range1_opt_a">range(5)</li><li data-component="feedback">This will return a list of all the numbers from 0 to 4.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="7_4_1_Numbers_Range1_opt_b">range(6)</li><li data-component="feedback">This will return a list of all the numbers from 0 to 5.</li>\n    \n    <li data-component="answer"  id="7_4_1_Numbers_Range1_opt_c">range(7)</li><li data-component="feedback">This will return a list of all the numbers from 0 to 6.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPRepeatNumbers/range",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.4.2",
                  optional: false,
                  description:
                    "Which of the following lines actually gives us a list of all the numbers from 0 ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Numbers_Range2",
                data: {
                  id: 11228,
                  base_course: "StudentCSP",
                  name: "Numbers_Range2",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "range",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Numbers_Range2 data-question_label="7.4.3">\n<div id=Numbers_Range2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Numbers_Range2_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nprint(range(1,10))\nprint(range(0,11))\nprint(range(20,31))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/range",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.4.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_4_2_Numbers_Range2",
                data: {
                  id: 11229,
                  base_course: "StudentCSP",
                  name: "7_4_2_Numbers_Range2",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "range",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="7.4.4" data-multipleanswers="false"  id="7_4_2_Numbers_Range2"  style="visibility: hidden;">\n    <p>Which of the following lines actually gives us a list of all numbers from 1 to 10?</p>\n\n    <li data-component="answer"  id="7_4_2_Numbers_Range2_opt_a">range(10)</li><li data-component="feedback">That includes zero and doesn\'t include 10: [0,1,2,3,4,5,6,7,8,9]</li>\n    \n    <li data-component="answer"  id="7_4_2_Numbers_Range2_opt_b">range(1,10)</li><li data-component="feedback">That doesn\'t include 10: [1,2,3,4,5,6,7,8,9]</li>\n    \n    <li data-component="answer"  id="7_4_2_Numbers_Range2_opt_c">range(11)</li><li data-component="feedback">That includes zero: [0,1,2,3,4,5,6,7,8,9,10]</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="7_4_2_Numbers_Range2_opt_d">range(1,11)</li><li data-component="feedback">That returns [1,2,3,4,5,6,7,8,9,10]</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPRepeatNumbers/range",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.4.4",
                  optional: false,
                  description:
                    "Which of the following lines actually gives us a list of all numbers from 1 to 1",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Numbers_Product2",
                data: {
                  id: 11230,
                  base_course: "StudentCSP",
                  name: "Numbers_Product2",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "range",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Numbers_Product2 data-question_label="7.4.5">\n<div id=Numbers_Product2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Numbers_Product2_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 1: for2_line1; 2: for2_line2; 3: for2_line3; 4: for2_line4; 5: for2_line5;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nproduct = 1  # Start out with nothing\nnumbers = range(1,11)\nfor number in numbers:\n    product = product * number\nprint(product)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/range",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.4.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_4_3_Numbers_Product_Q3",
                data: {
                  id: 11231,
                  base_course: "StudentCSP",
                  name: "7_4_3_Numbers_Product_Q3",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "range",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="7.4.6" data-multipleanswers="false"  id="7_4_3_Numbers_Product_Q3"  style="visibility: hidden;">\n    <p>Change ONE number in the above program to tell us the product of all numbers from 1 to 20</p>\n\n    <li data-component="answer"  id="7_4_3_Numbers_Product_Q3_opt_a">121645100408832000</li><li data-component="feedback">That is the product of all numbers from 1 to 19 (e.g., you changed the 11 to 20)</li>\n    \n    <li data-component="answer"  id="7_4_3_Numbers_Product_Q3_opt_b">3628800</li><li data-component="feedback">That is the product of all numbers from 1 to 10 (e.g., no change at all)</li>\n    \n    <li data-component="answer"  id="7_4_3_Numbers_Product_Q3_opt_c">362880</li><li data-component="feedback">That is the product of all numbers from 1 to 9 (e.g., you changed the 11 to 10)</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="7_4_3_Numbers_Product_Q3_opt_d">2432902008176640000</li><li data-component="feedback">That is the product of all numbers from 1 to 20 (e.g., you changed the 11 to 21)</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/range",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.4.6",
                  optional: false,
                  description:
                    "Change ONE number in the above program to tell us the product of all numbers fro",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7. Chapter 7 - Computers can Repeat Steps/7.4 The Range Function",
                data: {
                  id: 11614,
                  base_course: "StudentCSP",
                  name: "7. Chapter 7 - Computers can Repeat Steps/7.4 The Range Function",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "range",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "accumPattern",
            data: {
              title: "7.5 There’s a Pattern Here!",
              num: 500,
              chapter: "CSPRepeatNumbers",
              subchapter: "accumPattern",
              id: 11615,
              numQuestions: 10
            },
            children: [
              {
                key: "Numbers_Sum",
                data: {
                  id: 11187,
                  base_course: "StudentCSP",
                  name: "Numbers_Sum",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "accumPattern",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Numbers_Sum data-question_label="7.6.1">\n<div id=Numbers_Sum_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Numbers_Sum_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Code tour*doubleq*; 2: accum_line2; 4: accum_line4; 6: accum_line6; 8: accum_line8; 10: accum_line10;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nsum = 0  # Start out with nothing\n# STEP 2: GET DATA\nnumbers = range(1,101)\n# STEP 3: LOOP THROUGH THE DATA\nfor number in numbers:\n    # STEP 4: ACCUMULATE\n    sum = sum + number\n# STEP 5: PROCESS RESULT\nprint(sum)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/accumPattern",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.6.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Range_Examples",
                data: {
                  id: 11188,
                  base_course: "StudentCSP",
                  name: "Range_Examples",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "accumPattern",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Range_Examples data-question_label="7.6.2">\n<div id=Range_Examples_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Range_Examples_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nprint(range(1,11,1))\nprint(range(0,11,2))\nprint(range(1,11,3))\nprint(range(5,50,5))\nprint(range(10,1,-1))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/accumPattern",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.6.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Numbers_Sum_Even",
                data: {
                  id: 11189,
                  base_course: "StudentCSP",
                  name: "Numbers_Sum_Even",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "accumPattern",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Numbers_Sum_Even data-question_label="7.6.3">\n<div id=Numbers_Sum_Even_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Numbers_Sum_Even_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Code tour*doubleq*; 2: accE_line2; 4: accE_line4; 6: accE_line6; 8: accE_line8; 10: accE_line10;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nsum = 0  # Start out with nothing\n# STEP 2: GET DATA\nnumbers = range(0,101,2)\n# STEP 3: LOOP THROUGH THE DATA\nfor number in numbers:\n    # STEP 4: ACCUMULATE\n    sum = sum + number\n# STEP 5: PROCESS RESULT\nprint(sum)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/accumPattern",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.6.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_5_1_Numbers_Even_Q1",
                data: {
                  id: 11190,
                  base_course: "StudentCSP",
                  name: "7_5_1_Numbers_Even_Q1",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "accumPattern",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="7.6.4" data-multipleanswers="false"  id="7_5_1_Numbers_Even_Q1"  style="visibility: hidden;">\n    <p>Why do we stop at 101 in the above program?</p>\n\n    <li data-component="answer"  id="7_5_1_Numbers_Even_Q1_opt_a">Because we started at 0</li><li data-component="feedback">We would want to include 100.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="7_5_1_Numbers_Even_Q1_opt_b">Because we want to include 100</li><li data-component="feedback">If we stop BEFORE 101, we include 100.</li>\n    \n    <li data-component="answer"  id="7_5_1_Numbers_Even_Q1_opt_c">Because the computer only understands 1s and 0s</li><li data-component="feedback">Internally, yes, but in Python, all decimal digits are allowed.</li>\n    \n    <li data-component="answer"  id="7_5_1_Numbers_Even_Q1_opt_d">Because we\'re using a step of 2</li><li data-component="feedback">That doesn\'t really matter.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/accumPattern",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.6.4",
                  optional: false,
                  description: "Why do we stop at 101 in the above program?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_5_2_Numbers_Even_Q2",
                data: {
                  id: 11191,
                  base_course: "StudentCSP",
                  name: "7_5_2_Numbers_Even_Q2",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "accumPattern",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="7.6.5" data-multipleanswers="false"  id="7_5_2_Numbers_Even_Q2"  style="visibility: hidden;">\n    <p>Why do we START with zero?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="7_5_2_Numbers_Even_Q2_opt_a">Because if we started with 1, we would get all odd numbers</li><li data-component="feedback">This gives us [0,2,4,6...98,100].</li>\n    \n    <li data-component="answer"  id="7_5_2_Numbers_Even_Q2_opt_b">Because all lists start with zero</li><li data-component="feedback">They don\'t have to start at 0.</li>\n    \n    <li data-component="answer"  id="7_5_2_Numbers_Even_Q2_opt_c">Because we end with 101</li><li data-component="feedback">That is true, but is not relevant here.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/accumPattern",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.6.5",
                  optional: false,
                  description: "Why do we START with zero?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Numbers_Sum_Step",
                data: {
                  id: 11192,
                  base_course: "StudentCSP",
                  name: "Numbers_Sum_Step",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "accumPattern",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="7.6.6">\n        <div id=Numbers_Sum_Step_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Numbers_Sum_Step"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 7.6.6 (Numbers_Sum_Step)</span> </p>\n    </div>\n\n<script>\nvar Numbers_Sum_Step_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Numbers_Sum_Step"] = {"code": "# STEP 1: INITIALIZE ACCUMULATOR\\nsum = 0  # Start out with nothing\\n# STEP 2: GET DATA\\nnumbers = range(0,21,2)\\n# STEP 3: LOOP THROUGH THE DATA\\nfor number in numbers:\\n    # STEP 4: ACCUMULATE\\n    sum = sum + number\\n# STEP 5: PROCESS RESULT\\nprint(sum)", "trace": [{"line": 2, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"sum": 0}, "ordered_globals": ["sum"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"sum": 0, "numbers": ["REF", 1]}, "ordered_globals": ["sum", "numbers"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"sum": 0, "numbers": ["REF", 1], "number": 0}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"sum": 0, "numbers": ["REF", 1], "number": 0}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"sum": 0, "numbers": ["REF", 1], "number": 2}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"sum": 2, "numbers": ["REF", 1], "number": 2}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"sum": 2, "numbers": ["REF", 1], "number": 4}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"sum": 6, "numbers": ["REF", 1], "number": 4}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"sum": 6, "numbers": ["REF", 1], "number": 6}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"sum": 12, "numbers": ["REF", 1], "number": 6}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"sum": 12, "numbers": ["REF", 1], "number": 8}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"sum": 20, "numbers": ["REF", 1], "number": 8}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"sum": 20, "numbers": ["REF", 1], "number": 10}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"sum": 30, "numbers": ["REF", 1], "number": 10}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"sum": 30, "numbers": ["REF", 1], "number": 12}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"sum": 42, "numbers": ["REF", 1], "number": 12}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"sum": 42, "numbers": ["REF", 1], "number": 14}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"sum": 56, "numbers": ["REF", 1], "number": 14}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"sum": 56, "numbers": ["REF", 1], "number": 16}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"sum": 72, "numbers": ["REF", 1], "number": 16}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"sum": 72, "numbers": ["REF", 1], "number": 18}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"sum": 90, "numbers": ["REF", 1], "number": 18}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"sum": 90, "numbers": ["REF", 1], "number": 20}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"sum": 110, "numbers": ["REF", 1], "number": 20}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 10, "event": "step_line", "func_name": "<module>", "globals": {"sum": 110, "numbers": ["REF", 1], "number": 20}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": ""}, {"line": 10, "event": "return", "func_name": "<module>", "globals": {"sum": 110, "numbers": ["REF", 1], "number": 20}, "ordered_globals": ["sum", "numbers", "number"], "stack_to_render": [], "heap": {"1": ["INSTANCE", "range"]}, "stdout": "110\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/accumPattern",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.6.6",
                  optional: false,
                  description:
                    "# STEP 1: INITIALIZE ACCUMULATOR sum = 0  # Start out with nothing # STEP 2: GET",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_5_3_Sum_100",
                data: {
                  id: 11193,
                  base_course: "StudentCSP",
                  name: "7_5_3_Sum_100",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "accumPattern",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="7_5_3_Sum_100" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following is the correct code for printing the sum of all the odd numbers from 1 to 100 using the accumulator pattern, but it is mixed up. Drag the blocks from the left and put them in the correct order on the right.  &lt;b&gt;Remember that the statements in the body of a loop must be indented!&lt;/b&gt;  To indent a block drag it further right. Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="7.6.7"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        sum = 0\n---\nnumbers = range(1,101,2)\n---\nfor number in numbers:\n---\n    sum = sum + number\n---\nprint(sum)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/accumPattern",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.6.7",
                  optional: false,
                  description:
                    "The following is the correct code for printing the sum of all the odd numbers fr",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_5_4_Numbers_Add_Odds_Q1",
                data: {
                  id: 11194,
                  base_course: "StudentCSP",
                  name: "7_5_4_Numbers_Add_Odds_Q1",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "accumPattern",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="7.6.8" data-multipleanswers="false"  id="7_5_4_Numbers_Add_Odds_Q1"  style="visibility: hidden;">\n    <p>Change the program above (in ActiveCode 3: Numbers_Sum_Even) to add up all the ODD numbers including up to 99.  You should run it to get 2500. What change did you make to the program?</p>\n\n    <li data-component="answer"  id="7_5_4_Numbers_Add_Odds_Q1_opt_a">Changed the range step from 2 to 3</li><li data-component="feedback">That would give us [0,3,6,9,12...99].</li>\n    \n    <li data-component="answer"  id="7_5_4_Numbers_Add_Odds_Q1_opt_b">Changed the range end from 101 to 100</li><li data-component="feedback">That would give us the even numbers from 0 to 98.</li>\n    \n    <li data-component="answer"  id="7_5_4_Numbers_Add_Odds_Q1_opt_c">Changed the range end from 101 to 99</li><li data-component="feedback">That would give us the even numbers from 0 to 98.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="7_5_4_Numbers_Add_Odds_Q1_opt_d">Changed the range start from 0 to 1</li><li data-component="feedback">That would give us [1,3,5,...99].</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/accumPattern",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.6.8",
                  optional: false,
                  description:
                    "Change the program above (in ActiveCode 3: Numbers_Sum_Even) to add up all the O",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_5_5_Sum_From_50",
                data: {
                  id: 11195,
                  base_course: "StudentCSP",
                  name: "7_5_5_Sum_From_50",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "accumPattern",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="7_5_5_Sum_From_50" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following is the correct code for printing the sum of all the even numbers from 50 to 100 using the accumulator pattern, but it is mixed up and &lt;b&gt;contains one extra block&lt;/b&gt;. Drag the required blocks from the left and put them in the correct order on the right.  Don’t forget to indent blocks in the body of the loop.  Just drag the block further right to indent.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="7.6.9"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        sum = 0\n---\nnumbers = range(50,101,2)\n---\nfor number in numbers:\n---\n    sum = sum + number\n---\nprint(sum)\n---\nnumbers = range(50,100,2) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/accumPattern",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.6.9",
                  optional: false,
                  description:
                    "The following is the correct code for printing the sum of all the even numbers f",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7. Chapter 7 - Computers can Repeat Steps/7.5 There’s a Pattern Here!",
                data: {
                  id: 11615,
                  base_course: "StudentCSP",
                  name: "7. Chapter 7 - Computers can Repeat Steps/7.5 There’s a Pattern Here!",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "accumPattern",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "print",
            data: {
              title: "7.7 Adding Print Statements",
              num: 700,
              chapter: "CSPRepeatNumbers",
              subchapter: "print",
              id: 11616,
              numQuestions: 3
            },
            children: [
              {
                key: "Numbers_Sum_Print",
                data: {
                  id: 11224,
                  base_course: "StudentCSP",
                  name: "Numbers_Sum_Print",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "print",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Numbers_Sum_Print data-question_label="7.7.1">\n<div id=Numbers_Sum_Print_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Numbers_Sum_Print_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Code tour*doubleq*; 2: accL_line2; 4: accL_line4; 5: accL_line5; 7: accL_line7; 8: accL_line8; 10: accL_line10; 12: accL_line12;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nsum = 0  # Start out with nothing\n# STEP 2: GET DATA\nnumbers = range(0,101,2)\nprint("All the numbers:",numbers)\n# STEP 3: LOOP THROUGH THE DATA\nfor number in numbers:\n    print("Number:",number)\n    # STEP 4: ACCUMULATE\n    sum = sum + number\n# STEP 5: PROCESS RESULT\nprint(sum)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/print",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.7.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7_6_1_Print-Sum-Evens",
                data: {
                  id: 11225,
                  base_course: "StudentCSP",
                  name: "7_6_1_Print-Sum-Evens",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "print",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="7_6_1_Print-Sum-Evens" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following is the correct code for printing the value of number and the sum each time through the loop, but it is mixed up. The code should initialize the accumulator, create the list of numbers, and then loop through the list of numbers.  Each time through the loop it should print the value of number, add the value of number to the accumulator, and then print the current sum.  Drag the blocks from the left and put them in the correct order on the right.  Don’t forget to indent blocks in the body of the loop.  Just drag the block further right to indent.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="7.7.2"          style="visibility: hidden;">\n        sum = 0\n---\nnumbers = range(0,101,2)\n---\nfor number in numbers:\n---\n    print("Number:",number)\n---\n    sum = sum + number\n---\n    print(sum)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/print",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.7.2",
                  optional: false,
                  description:
                    "The following is the correct code for printing the value of number and the sum e",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7. Chapter 7 - Computers can Repeat Steps/7.7 Adding Print Statements",
                data: {
                  id: 11616,
                  base_course: "StudentCSP",
                  name: "7. Chapter 7 - Computers can Repeat Steps/7.7 Adding Print Statements",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "print",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "7.8 Chapter 7 - Summary",
              num: 800,
              chapter: "CSPRepeatNumbers",
              subchapter: "summary",
              id: 11617,
              numQuestions: 1
            },
            children: [
              {
                key: "7. Chapter 7 - Computers can Repeat Steps/7.8 Chapter 7 - Summary",
                data: {
                  id: 11617,
                  base_course: "StudentCSP",
                  name: "7. Chapter 7 - Computers can Repeat Steps/7.8 Chapter 7 - Summary",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "7.9 Chapter 7 Exercises",
              num: 900,
              chapter: "CSPRepeatNumbers",
              subchapter: "Exercises",
              id: 11618,
              numQuestions: 21
            },
            children: [
              {
                key: "ch7ex1q",
                data: {
                  id: 11196,
                  base_course: "StudentCSP",
                  name: "ch7ex1q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex1q data-question_label="7.9.1">\n<div id=ch7ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsum =\nthingsToAdd =\nfor number in thingsToAdd:\n    sum = sum + number\nprint(sum)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex2q",
                data: {
                  id: 11197,
                  base_course: "StudentCSP",
                  name: "ch7ex2q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex2q data-question_label="7.9.2">\n<div id=ch7ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsum = 0\nnumList = range(1,10)\nfor number in numList:\n    sum = number\nprint(sum)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex3q",
                data: {
                  id: 11198,
                  base_course: "StudentCSP",
                  name: "ch7ex3q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex3q data-question_label="7.9.3">\n<div id=ch7ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsum = 0  # Start out with nothing\nthingsToAdd = [1,2,3,4,5]\nfor number in thingsToAdd:\n    sum = sum + number\nprint(sum)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex4q",
                data: {
                  id: 11199,
                  base_course: "StudentCSP",
                  name: "ch7ex4q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex4q data-question_label="7.9.4">\n<div id=ch7ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nproduct = 0\nnumbers = len(4,25,5)\nfor number in numbers:\n        product = product + number\nprint(product)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex5q",
                data: {
                  id: 11200,
                  base_course: "StudentCSP",
                  name: "ch7ex5q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex5q data-question_label="7.9.5">\n<div id=ch7ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nproduct = 1  # Start out with nothing\nnumbers = [1,2,3,4,5]\nfor in numbers:\n    product = product *\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex6q",
                data: {
                  id: 11201,
                  base_course: "StudentCSP",
                  name: "ch7ex6q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex6q data-question_label="7.9.6">\n<div id=ch7ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsum = 1\nnumbers = range(1,21,1)\nfor numbers in number:\nsum = sum + number\nprint(sum)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex7q",
                data: {
                  id: 11202,
                  base_course: "StudentCSP",
                  name: "ch7ex7q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex7q data-question_label="7.9.7">\n<div id=ch7ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nproduct = 1  # Start out with 1\nnumbers = [1,2,3,4,5]\nfor number in numbers:\n    product = product * number\nprint(product)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex8q",
                data: {
                  id: 11203,
                  base_course: "StudentCSP",
                  name: "ch7ex8q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex8q data-question_label="7.9.8">\n<div id=ch7ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\naString = ""\naList = ["I", "like", "to", "eat", "pizza"]\nfor word in aList:\n        aString = word\n        print(aString)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex9q",
                data: {
                  id: 11204,
                  base_course: "StudentCSP",
                  name: "ch7ex9q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex9q data-question_label="7.9.9">\n<div id=ch7ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nsum =   # Start out with nothing\n# STEP 2: GET DATA\nnumbers = range()\n# STEP 3: LOOP THROUGH THE DATA\nfor number in numbers:\n    # STEP 4: ACCUMULATE\n   sum = sum +\n# STEP 5: PROCESS RESULT\nprint(sum)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex10q",
                data: {
                  id: 11205,
                  base_course: "StudentCSP",
                  name: "ch7ex10q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex10q data-question_label="7.9.10">\n<div id=ch7ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex11q",
                data: {
                  id: 11206,
                  base_course: "StudentCSP",
                  name: "ch7ex11q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex11q data-question_label="7.9.11">\n<div id=ch7ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nsum = 0  # Start out with nothing\n# STEP 2: GET DATA\nnumbers = range(0,21,2)\n# STEP 3: LOOP THROUGH THE DATA\nfor number in numbers:\n    # STEP 4: ACCUMULATE\n   sum = sum + number\n# STEP 5: PROCESS RESULT\nprint(sum)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex12q",
                data: {
                  id: 11207,
                  base_course: "StudentCSP",
                  name: "ch7ex12q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex12q data-question_label="7.9.12">\n<div id=ch7ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex13q",
                data: {
                  id: 11208,
                  base_course: "StudentCSP",
                  name: "ch7ex13q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex13q data-question_label="7.9.13">\n<div id=ch7ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nproduct = 0  # init product\n# STEP 2: GET DATA\nnumbers = range(10,20,2)\n# STEP 3: LOOP THROUGH THE DATA\nfor number in numbers:\n    # STEP 4: ACCUMULATE\n   product = product + number\n# STEP 5: PROCESS RESULT\nprint(product)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex14q",
                data: {
                  id: 11209,
                  base_course: "StudentCSP",
                  name: "ch7ex14q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex14q data-question_label="7.9.14">\n<div id=ch7ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex15q",
                data: {
                  id: 11210,
                  base_course: "StudentCSP",
                  name: "ch7ex15q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex15q data-question_label="7.9.15">\n<div id=ch7ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex16q",
                data: {
                  id: 11211,
                  base_course: "StudentCSP",
                  name: "ch7ex16q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex16q data-question_label="7.9.16">\n<div id=ch7ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef letterCombiner( ):\n        tempString =\n        for  in letterList:\n                tempString = tempString + letter\n        return\n\naList = ["H", "i"]\nprint(letterCombiner( ))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex17q",
                data: {
                  id: 11212,
                  base_course: "StudentCSP",
                  name: "ch7ex17q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex17q data-question_label="7.9.17">\n<div id=ch7ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex18q",
                data: {
                  id: 11213,
                  base_course: "StudentCSP",
                  name: "ch7ex18q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex18q data-question_label="7.9.18">\n<div id=ch7ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex19q",
                data: {
                  id: 11214,
                  base_course: "StudentCSP",
                  name: "ch7ex19q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex19q data-question_label="7.9.19">\n<div id=ch7ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch7ex20q",
                data: {
                  id: 11215,
                  base_course: "StudentCSP",
                  name: "ch7ex20q",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch7ex20q data-question_label="7.9.20">\n<div id=ch7ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch7ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatNumbers/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "7.9.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "7. Chapter 7 - Computers can Repeat Steps/7.9 Chapter 7 Exercises",
                data: {
                  id: 11618,
                  base_course: "StudentCSP",
                  name: "7. Chapter 7 - Computers can Repeat Steps/7.9 Chapter 7 Exercises",
                  chapter: "CSPRepeatNumbers",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPWhileAndForLoops",
        data: {
          title: "8. Chapter 8 - While and For Loops",
          num: 8
        },
        children: [
          {
            key: "forAndWhile",
            data: {
              title: "8.1 Loops - For and While",
              num: 100,
              chapter: "CSPWhileAndForLoops",
              subchapter: "forAndWhile",
              id: 11619,
              numQuestions: 6
            },
            children: [
              {
                key: "8_1_1_For_Counter_Q1",
                data: {
                  id: 11512,
                  base_course: "StudentCSP",
                  name: "8_1_1_For_Counter_Q1",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "forAndWhile",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.1.1.1" data-multipleanswers="false"  id="8_1_1_For_Counter_Q1"  style="visibility: hidden;">\n    <p>What is the last value that will be printed when the code below executes?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="8_1_1_For_Counter_Q1_opt_a">9</li><li data-component="feedback">A range goes from a starting point to one <i>less</i> than the ending point. If we want to count to 10, use range(1,11).</li>\n    \n    <li data-component="answer"  id="8_1_1_For_Counter_Q1_opt_b">10</li><li data-component="feedback">The range doesn\'t include the end value.  It stops at one before the last value.</li>\n    \n    <li data-component="answer"  id="8_1_1_For_Counter_Q1_opt_c">11</li><li data-component="feedback">In fact, it doesn\'t even get to 10! Try it.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/forAndWhile",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.1.1.1",
                  optional: false,
                  description:
                    "What is the last value that will be printed when the code below executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "for_counter",
                data: {
                  id: 11513,
                  base_course: "StudentCSP",
                  name: "for_counter",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "forAndWhile",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="8.1.1.2">\n        <div id=for_counter_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="for_counter"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 8.1.1.2 (for_counter)</span> </p>\n    </div>\n\n<script>\nvar for_counter_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["for_counter"] = {"code": "for counter in range(1,10):\\n    print(counter)", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 1}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 1}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 2}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 2}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 3}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 3}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 4}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 4}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 5}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 5}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 6}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 6}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 7}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 7}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 8}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 8}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 9}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 9}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n"}, {"line": 1, "event": "return", "func_name": "<module>", "globals": {"counter": 9}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/forAndWhile",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.1.1.2",
                  optional: false,
                  description: "for counter in range(1,10):     print(counter)",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "while_input",
                data: {
                  id: 11514,
                  base_course: "StudentCSP",
                  name: "while_input",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "forAndWhile",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=while_input data-question_label="8.1.2.1">\n<div id=while_input_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="while_input_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsum = 0\ncount = 0\nmessage = "Enter an integer or a negative number to stop"\nvalue = input(message)\nwhile int(value) > 0:\n    print("You entered " + value)\n    sum = sum + int(value)\n    count = count + 1\n    value = input(message)\nprint("The sum is: " + str(sum) +\n      " the average is: " + str(sum / count))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/forAndWhile",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.1.2.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_1_2_While_Input1",
                data: {
                  id: 11515,
                  base_course: "StudentCSP",
                  name: "8_1_2_While_Input1",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "forAndWhile",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.1.2.2" data-multipleanswers="false"  id="8_1_2_While_Input1"  style="visibility: hidden;">\n    <p>How many lines are in the body of the <code class="docutils literal notranslate"><span class="pre">while</span></code> loop in while_input above?</p>\n\n    <li data-component="answer"  id="8_1_2_While_Input1_opt_a">3</li><li data-component="feedback">All the statements that are indented 4 spaces to the right of the <code>while</code> are part of the body of the loop.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="8_1_2_While_Input1_opt_b">4</li><li data-component="feedback">There are four statements that are indented 4 spaces to the right of the <code>while</code> statement, so there are four statements in the body of this loop.</li>\n    \n    <li data-component="answer"  id="8_1_2_While_Input1_opt_c">5</li><li data-component="feedback">Is the <code>print(message)</code> line indented 4 spaces to the right of the <code>while</code>? If not it is not part of the body of the loop.</li>\n    \n    <li data-component="answer"  id="8_1_2_While_Input1_opt_d">6</li><li data-component="feedback">While line 11 is indented this is just to allow the print statement to take up more than one line.  The print statement is not indented so the body of the loop contains just 4 lines.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/forAndWhile",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.1.2.2",
                  optional: false,
                  description:
                    "How many lines are in the body of the ``while`` loop in while_input above?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_1_2_While_InputError",
                data: {
                  id: 11516,
                  base_course: "StudentCSP",
                  name: "8_1_2_While_InputError",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "forAndWhile",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.1.2.3" data-multipleanswers="false"  id="8_1_2_While_InputError"  style="visibility: hidden;">\n    <p>What happens if you enter a negative number as the first input to the code above?</p>\n\n    <li data-component="answer"  id="8_1_2_While_InputError_opt_a">It prints the sum is 0 and the average is 0.</li><li data-component="feedback">Do you see code to do this in the program?</li>\n    \n    <li data-component="answer"  id="8_1_2_While_InputError_opt_b">It prints a message that it can\'t divide by 0.</li><li data-component="feedback">This might be nice, but is that what happens?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="8_1_2_While_InputError_opt_c">There is an error.</li><li data-component="feedback">You will get a ZeroDivisionError since you can\'t divide by zero.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/forAndWhile",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.1.2.3",
                  optional: false,
                  description:
                    "What happens if you enter a negative number as the first input to the code above",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8. Chapter 8 - While and For Loops/8.1 Loops - For and While",
                data: {
                  id: 11619,
                  base_course: "StudentCSP",
                  name: "8. Chapter 8 - While and For Loops/8.1 Loops - For and While",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "forAndWhile",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "infinite",
            data: {
              title: "8.2 Infinite Loops",
              num: 200,
              chapter: "CSPWhileAndForLoops",
              subchapter: "infinite",
              id: 11620,
              numQuestions: 2
            },
            children: [
              {
                key: "8_2_1_While_Inf_NumLines",
                data: {
                  id: 11517,
                  base_course: "StudentCSP",
                  name: "8_2_1_While_Inf_NumLines",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "infinite",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.2.1" data-multipleanswers="false"  id="8_2_1_While_Inf_NumLines"  style="visibility: hidden;">\n    <p>How many lines are in the body of the <code class="docutils literal notranslate"><span class="pre">while</span></code> loop in shown above?</p>\n\n    <li data-component="answer"  id="8_2_1_While_Inf_NumLines_opt_a">1</li><li data-component="feedback">All the statements that are indented 4 spaces to the right of the <code>while</code> are part of the body of the loop.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="8_2_1_While_Inf_NumLines_opt_b">2</li><li data-component="feedback">There are two statements that are indented 4 spaces to the right of the <code>while</code> statement, so there are two statements in the body of this loop.</li>\n    \n    <li data-component="answer"  id="8_2_1_While_Inf_NumLines_opt_c">3</li><li data-component="feedback">There are three lines here total, but not all of them are in the body of the loop.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/infinite",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.2.1",
                  optional: false,
                  description:
                    "How many lines are in the body of the ``while`` loop in shown above?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8. Chapter 8 - While and For Loops/8.2 Infinite Loops",
                data: {
                  id: 11620,
                  base_course: "StudentCSP",
                  name: "8. Chapter 8 - While and For Loops/8.2 Infinite Loops",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "infinite",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "whileCount",
            data: {
              title: "8.3 Counting with a While Loop",
              num: 300,
              chapter: "CSPWhileAndForLoops",
              subchapter: "whileCount",
              id: 11621,
              numQuestions: 10
            },
            children: [
              {
                key: "while_count",
                data: {
                  id: 11531,
                  base_course: "StudentCSP",
                  name: "while_count",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "whileCount",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="8.3.2">\n        <div id=while_count_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="while_count"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 8.3.2 (while_count)</span> </p>\n    </div>\n\n<script>\nvar while_count_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["while_count"] = {"code": "counter = 1\\nwhile counter < 11:\\n    print(counter)\\n    counter = counter + 1", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 1}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"counter": 1}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"counter": 1}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 2}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"counter": 2}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n"}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"counter": 2}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 3}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"counter": 3}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n"}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"counter": 3}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 4}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"counter": 4}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n"}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"counter": 4}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 5}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"counter": 5}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n"}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"counter": 5}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 6}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"counter": 6}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n"}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"counter": 6}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 7}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"counter": 7}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n"}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"counter": 7}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 8}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"counter": 8}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n"}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"counter": 8}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 9}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"counter": 9}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n"}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"counter": 9}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 10}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"counter": 10}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n"}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"counter": 10}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 11}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n"}, {"line": 2, "event": "return", "func_name": "<module>", "globals": {"counter": 11}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/whileCount",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.3.2",
                  optional: false,
                  description:
                    "counter = 1 while counter < 11:     print(counter)     counter = counter + 1",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_3_1_While_Count_Q1",
                data: {
                  id: 11532,
                  base_course: "StudentCSP",
                  name: "8_3_1_While_Count_Q1",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "whileCount",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.3.3" data-multipleanswers="false"  id="8_3_1_While_Count_Q1"  style="visibility: hidden;">\n    <p>What is the value of counter after the loop finishes executing?</p>\n\n    <li data-component="answer"  id="8_3_1_While_Count_Q1_opt_a">1</li><li data-component="feedback">Counter is incremented each time the loop executes.</li>\n    \n    <li data-component="answer"  id="8_3_1_While_Count_Q1_opt_b">10</li><li data-component="feedback">The last value to be printed is 10.  But, the counter is incremented after the current value is printed.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="8_3_1_While_Count_Q1_opt_c">11</li><li data-component="feedback">Counter gets incremented to 11 after printing, and then the while loop tests counter, finds counter is not less than 11 and then continues after the body of the loop.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/whileCount",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.3.3",
                  optional: false,
                  description: "What is the value of counter after the loop finishes executing?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_3_2_NegativeCounter",
                data: {
                  id: 11533,
                  base_course: "StudentCSP",
                  name: "8_3_2_NegativeCounter",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "whileCount",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.3.4" data-multipleanswers="false"  id="8_3_2_NegativeCounter"  style="visibility: hidden;">\n    <p>What does the following code print?</p>\n<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="linenos">1</span><span class="n">output</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="s">&quot;&quot;</span>\n<span class="linenos">2</span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">-</span><span class="mi">5</span>\n<span class="linenos">3</span><span class="k">while</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">&lt;</span><span class="w"> </span><span class="mi">0</span><span class="p">:</span>\n<span class="linenos">4</span><span class="w">    </span><span class="n">x</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mi">1</span>\n<span class="linenos">5</span><span class="w">    </span><span class="n">output</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">output</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">str</span><span class="p">(</span><span class="n">x</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s">&quot; &quot;</span>\n<span class="linenos">6</span><span class="n">print</span><span class="p">(</span><span class="n">output</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="8_3_2_NegativeCounter_opt_a">5 4 3 2 1</li><li data-component="feedback">If x starts at -5 how can the first value printed be 5?</li>\n    \n    <li data-component="answer"  id="8_3_2_NegativeCounter_opt_b">-5 -4 -3 -2 -1</li><li data-component="feedback">This would be true if the print statement was before we incremented x.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="8_3_2_NegativeCounter_opt_c">-4 -3 -2 -1 0</li><li data-component="feedback">The value of x is incremented before it is printed so the first value printed is -4.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/whileCount",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.3.4",
                  optional: false,
                  description: "What does the following code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "while_counter_infinite",
                data: {
                  id: 11534,
                  base_course: "StudentCSP",
                  name: "while_counter_infinite",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "whileCount",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=while_counter_infinite data-question_label="8.3.1.1">\n<div id=while_counter_infinite_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="while_counter_infinite_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ncounter = 1\nwhile counter <= 10:\n    print(counter)\ncounter = counter + 1\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/whileCount",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.3.1.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_3_3_While_Countdown",
                data: {
                  id: 11535,
                  base_course: "StudentCSP",
                  name: "8_3_3_While_Countdown",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "whileCount",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="8_3_3_While_Countdown" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following is the correct code for printing a countdown from 10 to 0, but it is mixed up. Drag the blocks from the left and put them in the correct order on the right.  Don’t forget to indent blocks in the body of the loop.  Just drag the block to the further right to indent.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="8.3.1.2"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        counter = 10\nwhile counter >= 0:\n    print(counter)\n    counter = counter - 1\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/whileCount",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.3.1.2",
                  optional: false,
                  description:
                    "The following is the correct code for printing a countdown from 10 to 0, but it ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_2_4_While_Count_Even",
                data: {
                  id: 11536,
                  base_course: "StudentCSP",
                  name: "8_2_4_While_Count_Even",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "whileCount",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="8_2_4_While_Count_Even" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following is the correct code for printing the even numbers from 0 to 10, &lt;b&gt;but it also includes some extra code that you won’t need&lt;/b&gt;. Drag the needed blocks from the left and put them in the correct order on the right.  Don’t forget to indent blocks in the body of the loop.  Just drag the block to the further right to indent.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="8.3.1.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        counter = 0\n---\nwhile counter <= 10:\n---\n    print(counter)\n---\n    counter = counter + 2\n---\n    counter = counter + 1 #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/whileCount",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.3.1.3",
                  optional: false,
                  description:
                    "The following is the correct code for printing the even numbers from 0 to 10, <b",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_3_5_WSa",
                data: {
                  id: 11538,
                  base_course: "StudentCSP",
                  name: "8_3_5_WSa",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "whileCount",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=8_3_5_WSa data-question_label="8.3.1.5">\n<div id=8_3_5_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="8_3_5_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# INITIALIZE COUNTER\ncounter = 5\n# SET LOOP CONDITION\nwhile counter < 10 :\n  # PRINT CURRENT VALUE\n  print(counter)\n  counter = counter + 1\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/whileCount",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.3.1.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8. Chapter 8 - While and For Loops/8.3 Counting with a While Loop",
                data: {
                  id: 11621,
                  base_course: "StudentCSP",
                  name: "8. Chapter 8 - While and For Loops/8.3 Counting with a While Loop",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "whileCount",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "for_counter_8_3",
                data: {
                  id: 23172,
                  base_course: "StudentCSP",
                  name: "for_counter_8_3",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "whileCount",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="8.3.1">\n        <div id=for_counter_8_3_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="for_counter_8_3"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 8.3.1 (for_counter_8_3)</span> </p>\n    </div>\n\n<script>\nvar for_counter_8_3_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["for_counter_8_3"] = {"code": "for counter in range(1,11):\\n    print(counter)", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 1}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 1}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 2}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 2}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 3}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 3}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 4}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 4}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 5}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 5}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 6}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 6}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 7}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 7}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 8}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 8}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 9}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 9}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"counter": 10}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"counter": 10}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n"}, {"line": 1, "event": "return", "func_name": "<module>", "globals": {"counter": 10}, "ordered_globals": ["counter"], "stack_to_render": [], "heap": {}, "stdout": "1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/whileCount",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.3.1",
                  optional: false,
                  description: "for counter in range(1,11):     print(counter)",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_3_5_WSq",
                data: {
                  id: 112708,
                  base_course: "StudentCSP",
                  name: "8_3_5_WSq",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "whileCount",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=8_3_5_WSq data-question_label="8.3.1.4">\n<div id=8_3_5_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="8_3_5_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/whileCount",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.3.1.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "while",
            data: {
              title: "8.4 Looping When We Don’t Know When We’ll Stop",
              num: 400,
              chapter: "CSPWhileAndForLoops",
              subchapter: "while",
              id: 11622,
              numQuestions: 6
            },
            children: [
              {
                key: "Square_Root",
                data: {
                  id: 11526,
                  base_course: "StudentCSP",
                  name: "Square_Root",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "while",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Square_Root data-question_label="8.4.1">\n<div id=Square_Root_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Square_Root_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 1: sqR_line1; 2: sqR_line2; 3: sqR_line3; 4: sqR_line4; 5: sqR_line5; 6: sqR_line6; 7: sqR_line7; 8: sqR_line8;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ntarget = 6\nguess = 2\nguessSquared = guess * guess\nwhile abs(target-guessSquared) > 0.01:\n    closer = target / guess\n    guess = (guess + closer) / 2.0\n    guessSquared = guess * guess\nprint("Square root of", target,"is", guess)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/while",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_4_1_Square_Root_Q1",
                data: {
                  id: 11527,
                  base_course: "StudentCSP",
                  name: "8_4_1_Square_Root_Q1",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "while",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.4.2" data-multipleanswers="false"  id="8_4_1_Square_Root_Q1"  style="visibility: hidden;">\n    <blockquote>\n<div><p>What would happen if we didn’t compute <code class="docutils literal notranslate"><span class="pre">guessSquared</span></code> before the <code class="docutils literal notranslate"><span class="pre">while</span></code> loop?</p>\n</div></blockquote>\n\n    <li data-component="answer"  id="8_4_1_Square_Root_Q1_opt_a">No error, since we compute it inside the loop.</li><li data-component="feedback">We have to compute it before, or abs(target-guessSquared) > 0.01 would be an error.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="8_4_1_Square_Root_Q1_opt_b">We would get an error.</li><li data-component="feedback">A variable has to be declared (created) before it is used.</li>\n    \n    <li data-component="answer"  id="8_4_1_Square_Root_Q1_opt_c">We need the one before the while loop, but not the one afterward.</li><li data-component="feedback">We need both.  The one before sets up the test.  The one inside the loop lets us update guessSquared.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/while",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.4.2",
                  optional: false,
                  description:
                    " What would happen if we didn't compute ``guessSquared`` before the ``while`` lo",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_4_2_Count_Loops_Q1",
                data: {
                  id: 11529,
                  base_course: "StudentCSP",
                  name: "8_4_2_Count_Loops_Q1",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "while",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.4.4" data-multipleanswers="false"  id="8_4_2_Count_Loops_Q1"  style="visibility: hidden;">\n    <blockquote>\n<div><p>How many times do we execute the test <code class="docutils literal notranslate"><span class="pre">abs(target-guessSquared)</span> <span class="pre">&gt;</span> <span class="pre">0.01</span></code> when <code class="docutils literal notranslate"><span class="pre">target</span> <span class="pre">=</span> <span class="pre">6</span></code> (in the video)?</p>\n</div></blockquote>\n\n    <li data-component="answer"  id="8_4_2_Count_Loops_Q1_opt_a">Just once.</li><li data-component="feedback">The first time we do the test, guess is 2, and 2 * 2 is 4, and 6 - 4 is 2 which is greater than 0.01.</li>\n    \n    <li data-component="answer"  id="8_4_2_Count_Loops_Q1_opt_b">Twice.</li><li data-component="feedback">The second time we do the test, guess is 2.5 (average of 3 and 2). But, 2.5 * 2.5 = 6.25 which is still more than 0.01 away from 6.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="8_4_2_Count_Loops_Q1_opt_c">Three times.</li><li data-component="feedback">The third time we do the test, guess is 2.45 which is 6.0025 when squared.  This is less than 0.01 away from 6.  So test executes 3 times.</li>\n    \n    <li data-component="answer"  id="8_4_2_Count_Loops_Q1_opt_d">Four times</li><li data-component="feedback">We don\'t get to a fourth time.  Guess is 2, then 2.5, then 2.45 at which point the test fails and and the loop stops.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/while",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.4.4",
                  optional: false,
                  description:
                    " How many times do we execute the test ``abs(target-guessSquared) > 0.01`` when ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_4_3_Var1Var2",
                data: {
                  id: 11530,
                  base_course: "StudentCSP",
                  name: "8_4_3_Var1Var2",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "while",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.4.5" data-multipleanswers="false"  id="8_4_3_Var1Var2"  style="visibility: hidden;">\n    <p>What are the values of var1 and var2 that are printed when the following code executes?</p>\n<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="linenos">1</span><span class="n">var1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="o">-</span><span class="mi">2</span>\n<span class="linenos">2</span><span class="n">var2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="mi">0</span>\n<span class="linenos">3</span><span class="k">while</span><span class="w"> </span><span class="n">var1</span><span class="w"> </span><span class="o">!=</span><span class="w"> </span><span class="mi">0</span><span class="p">:</span>\n<span class="linenos">4</span><span class="w">    </span><span class="n">var1</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">var1</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="mi">1</span>\n<span class="linenos">5</span><span class="w">    </span><span class="n">var2</span><span class="w"> </span><span class="o">=</span><span class="w"> </span><span class="n">var2</span><span class="w"> </span><span class="o">-</span><span class="w"> </span><span class="mi">1</span>\n<span class="linenos">6</span><span class="n">print</span><span class="p">(</span><span class="s">&quot;var1: &quot;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">str</span><span class="p">(</span><span class="n">var1</span><span class="p">)</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="s">&quot; var2 &quot;</span><span class="w"> </span><span class="o">+</span><span class="w"> </span><span class="n">str</span><span class="p">(</span><span class="n">var2</span><span class="p">))</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="8_4_3_Var1Var2_opt_a">var1 = -2, var2 = 0</li><li data-component="feedback">These are the initial value, but they change during the loop</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="8_4_3_Var1Var2_opt_b">var1 = 0, var2 = -2</li><li data-component="feedback">This loop will execute two times so var1 will be 0 and var2 will be -2 after the loop finishes.</li>\n    \n    <li data-component="answer"  id="8_4_3_Var1Var2_opt_c">var1 = 0, var2 = -1</li><li data-component="feedback">This would be true if the loop stopped executing as soon as var1 was equal to 0, but that isn\'t what happens.  The body of the loop will finish executing before the value of var1 is tested again.</li>\n    \n    <li data-component="answer"  id="8_4_3_Var1Var2_opt_d">This is an infinite loop so it will never print anything.</li><li data-component="feedback">This would be true if it was <code>var1 = var1 - 1</code></li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/while",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.4.5",
                  optional: false,
                  description:
                    "What are the values of var1 and var2 that are printed when the following code ex",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8. Chapter 8 - While and For Loops/8.4 Looping When We Don’t Know When We’ll Stop",
                data: {
                  id: 11622,
                  base_course: "StudentCSP",
                  name: "8. Chapter 8 - While and For Loops/8.4 Looping When We Don’t Know When We’ll Stop",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "while",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "aDkkuM6QM-0",
                data: {
                  id: 23171,
                  base_course: "StudentCSP",
                  name: "aDkkuM6QM-0",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "while",
                  author: "bmiller",
                  question_type: "youtube",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone " style="margin-left: auto; margin-right:auto">\n        <div id="aDkkuM6QM-0" data-component="youtube" class="align-center youtube-video"\n            data-video-height="480" data-question_label="8.4.3"\n            data-video-width="640" data-video-videoid="aDkkuM6QM-0"\n            data-video-divid="aDkkuM6QM-0" data-video-start="0"\n            data-video-end="-1" ></div>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/while",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.4.3",
                  optional: false,
                  description: "",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "nestedLoops",
            data: {
              title: "8.5 Nested For Loops",
              num: 500,
              chapter: "CSPWhileAndForLoops",
              subchapter: "nestedLoops",
              id: 11623,
              numQuestions: 9
            },
            children: [
              {
                key: "Times_Table",
                data: {
                  id: 11518,
                  base_course: "StudentCSP",
                  name: "Times_Table",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "nestedLoops",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="8.5.1">\n        <div id=Times_Table_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Times_Table"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 8.5.1 (Times_Table)</span> </p>\n    </div>\n\n<script>\nvar Times_Table_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Times_Table"] = {"code": "for x in range(0,11):\\n    for y in range(0,11):\\n        print(str(x) + \\" * \\" + str(y) + \\" = \\" + str(x*y))", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 0}, "ordered_globals": ["x"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"x": 0, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"x": 1, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"x": 2, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"x": 3, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"x": 4, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"x": 5, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"x": 6, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"x": 7, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"x": 8, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"x": 9, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 0}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 1}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 2}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 3}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 4}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 5}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 6}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n10 * 6 = 60\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n10 * 6 = 60\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 7}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n10 * 6 = 60\\n10 * 7 = 70\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n10 * 6 = 60\\n10 * 7 = 70\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 8}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n10 * 6 = 60\\n10 * 7 = 70\\n10 * 8 = 80\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n10 * 6 = 60\\n10 * 7 = 70\\n10 * 8 = 80\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 9}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n10 * 6 = 60\\n10 * 7 = 70\\n10 * 8 = 80\\n10 * 9 = 90\\n"}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n10 * 6 = 60\\n10 * 7 = 70\\n10 * 8 = 80\\n10 * 9 = 90\\n"}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n10 * 6 = 60\\n10 * 7 = 70\\n10 * 8 = 80\\n10 * 9 = 90\\n10 * 10 = 100\\n"}, {"line": 1, "event": "step_line", "func_name": "<module>", "globals": {"x": 10, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n10 * 6 = 60\\n10 * 7 = 70\\n10 * 8 = 80\\n10 * 9 = 90\\n10 * 10 = 100\\n"}, {"line": 1, "event": "return", "func_name": "<module>", "globals": {"x": 10, "y": 10}, "ordered_globals": ["x", "y"], "stack_to_render": [], "heap": {}, "stdout": "0 * 0 = 0\\n0 * 1 = 0\\n0 * 2 = 0\\n0 * 3 = 0\\n0 * 4 = 0\\n0 * 5 = 0\\n0 * 6 = 0\\n0 * 7 = 0\\n0 * 8 = 0\\n0 * 9 = 0\\n0 * 10 = 0\\n1 * 0 = 0\\n1 * 1 = 1\\n1 * 2 = 2\\n1 * 3 = 3\\n1 * 4 = 4\\n1 * 5 = 5\\n1 * 6 = 6\\n1 * 7 = 7\\n1 * 8 = 8\\n1 * 9 = 9\\n1 * 10 = 10\\n2 * 0 = 0\\n2 * 1 = 2\\n2 * 2 = 4\\n2 * 3 = 6\\n2 * 4 = 8\\n2 * 5 = 10\\n2 * 6 = 12\\n2 * 7 = 14\\n2 * 8 = 16\\n2 * 9 = 18\\n2 * 10 = 20\\n3 * 0 = 0\\n3 * 1 = 3\\n3 * 2 = 6\\n3 * 3 = 9\\n3 * 4 = 12\\n3 * 5 = 15\\n3 * 6 = 18\\n3 * 7 = 21\\n3 * 8 = 24\\n3 * 9 = 27\\n3 * 10 = 30\\n4 * 0 = 0\\n4 * 1 = 4\\n4 * 2 = 8\\n4 * 3 = 12\\n4 * 4 = 16\\n4 * 5 = 20\\n4 * 6 = 24\\n4 * 7 = 28\\n4 * 8 = 32\\n4 * 9 = 36\\n4 * 10 = 40\\n5 * 0 = 0\\n5 * 1 = 5\\n5 * 2 = 10\\n5 * 3 = 15\\n5 * 4 = 20\\n5 * 5 = 25\\n5 * 6 = 30\\n5 * 7 = 35\\n5 * 8 = 40\\n5 * 9 = 45\\n5 * 10 = 50\\n6 * 0 = 0\\n6 * 1 = 6\\n6 * 2 = 12\\n6 * 3 = 18\\n6 * 4 = 24\\n6 * 5 = 30\\n6 * 6 = 36\\n6 * 7 = 42\\n6 * 8 = 48\\n6 * 9 = 54\\n6 * 10 = 60\\n7 * 0 = 0\\n7 * 1 = 7\\n7 * 2 = 14\\n7 * 3 = 21\\n7 * 4 = 28\\n7 * 5 = 35\\n7 * 6 = 42\\n7 * 7 = 49\\n7 * 8 = 56\\n7 * 9 = 63\\n7 * 10 = 70\\n8 * 0 = 0\\n8 * 1 = 8\\n8 * 2 = 16\\n8 * 3 = 24\\n8 * 4 = 32\\n8 * 5 = 40\\n8 * 6 = 48\\n8 * 7 = 56\\n8 * 8 = 64\\n8 * 9 = 72\\n8 * 10 = 80\\n9 * 0 = 0\\n9 * 1 = 9\\n9 * 2 = 18\\n9 * 3 = 27\\n9 * 4 = 36\\n9 * 5 = 45\\n9 * 6 = 54\\n9 * 7 = 63\\n9 * 8 = 72\\n9 * 9 = 81\\n9 * 10 = 90\\n10 * 0 = 0\\n10 * 1 = 10\\n10 * 2 = 20\\n10 * 3 = 30\\n10 * 4 = 40\\n10 * 5 = 50\\n10 * 6 = 60\\n10 * 7 = 70\\n10 * 8 = 80\\n10 * 9 = 90\\n10 * 10 = 100\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/nestedLoops",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.5.1",
                  optional: false,
                  description:
                    'for x in range(0,11):     for y in range(0,11):         print(str(x) + " * " + s',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Nested_Loops_Stars",
                data: {
                  id: 11521,
                  base_course: "StudentCSP",
                  name: "Nested_Loops_Stars",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "nestedLoops",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Nested_Loops_Stars data-question_label="8.5.1.1">\n<div id=Nested_Loops_Stars_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Nested_Loops_Stars_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfor x in range(0,2):\n    for y in range(0,3):\n        print(\'*\')\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/nestedLoops",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.5.1.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_5_1_NumStars",
                data: {
                  id: 11522,
                  base_course: "StudentCSP",
                  name: "8_5_1_NumStars",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "nestedLoops",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.5.1.2" data-multipleanswers="false"  id="8_5_1_NumStars"  style="visibility: hidden;">\n    <p>How many times will this loop print a <code class="docutils literal notranslate"><span class="pre">*</span></code>?</p>\n<div class="highlight-java notranslate"><div class="highlight"><pre><span></span><span class="k">for</span><span class="w"> </span><span class="n">x</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="nf">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">):</span>\n<span class="w">    </span><span class="k">for</span><span class="w"> </span><span class="n">y</span><span class="w"> </span><span class="n">in</span><span class="w"> </span><span class="nf">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">4</span><span class="p">):</span>\n<span class="w">        </span><span class="n">print</span><span class="p">(</span><span class="sc">&#39;*&#39;</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="8_5_1_NumStars_opt_a">6</li><li data-component="feedback">Remember that the range function will include the start value and all the numbers up to one less than the end value.  So the outer loop will execute 3 times ([0,1,2]).</li>\n    \n    <li data-component="answer"  id="8_5_1_NumStars_opt_b">9</li><li data-component="feedback">This would be true if they were both range(0,3).  Is that correct?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="8_5_1_NumStars_opt_c">12</li><li data-component="feedback">The number of times a nested loop executes is the number of times the outer loop executes (3) times the number of the times the inner loop executes (4) so that is 3 * 4 = 12.</li>\n    \n    <li data-component="answer"  id="8_5_1_NumStars_opt_d">16</li><li data-component="feedback">This would be true if both were range(0,4).  Is that right?</li>\n    \n    <li data-component="answer"  id="8_5_1_NumStars_opt_e">20</li><li data-component="feedback">This would be true if the range returned all the numbers from start to end, but it does not.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/nestedLoops",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.5.1.2",
                  optional: false,
                  description: "How many times will this loop print a ``*``?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Nested_Loops_Pattern",
                data: {
                  id: 11523,
                  base_course: "StudentCSP",
                  name: "Nested_Loops_Pattern",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "nestedLoops",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Nested_Loops_Pattern data-question_label="8.5.1.3">\n<div id=Nested_Loops_Pattern_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Nested_Loops_Pattern_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfor x in range(0,2):\n    line = ""\n    for y in range(0,3):\n        line = line + \'*\'\n    print(line)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/nestedLoops",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.5.1.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_5_2_WSq",
                data: {
                  id: 11524,
                  base_course: "StudentCSP",
                  name: "8_5_2_WSq",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "nestedLoops",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=8_5_2_WSq data-question_label="8.5.1.4">\n<div id=8_5_2_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="8_5_2_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/nestedLoops",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.5.1.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8_5_2_WSa",
                data: {
                  id: 11525,
                  base_course: "StudentCSP",
                  name: "8_5_2_WSa",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "nestedLoops",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=8_5_2_WSa data-question_label="8.5.1.5">\n<div id=8_5_2_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="8_5_2_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# TOP LINE\nline = ""\nfor x in range(0,4):\n  line = line + "*"\nprint(line)\n\n# MIDDLE LINES\nfor x in range(0,2):      # outer loop for edge of square\n  line = "*"\n  for y in range(0,2):    # inner loop for space in square\n      line = line + \' \'\n  line = line + \'*\'\n  print(line)\n\n# BOTTOM LINE\nline = ""\nfor x in range(0,4):\n  line = line + "*"\nprint(line)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/nestedLoops",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.5.1.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8. Chapter 8 - While and For Loops/8.5 Nested For Loops",
                data: {
                  id: 11623,
                  base_course: "StudentCSP",
                  name: "8. Chapter 8 - While and For Loops/8.5 Nested For Loops",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "nestedLoops",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "IKh1TdYL3o0",
                data: {
                  id: 23169,
                  base_course: "StudentCSP",
                  name: "IKh1TdYL3o0",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "nestedLoops",
                  author: "bmiller",
                  question_type: "youtube",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone " style="margin-left: auto; margin-right:auto">\n        <div id="IKh1TdYL3o0" data-component="youtube" class="align-center youtube-video"\n            data-video-height="480" data-question_label="8.5.2"\n            data-video-width="640" data-video-videoid="IKh1TdYL3o0"\n            data-video-divid="IKh1TdYL3o0" data-video-start="0"\n            data-video-end="-1" ></div>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/nestedLoops",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.5.2",
                  optional: false,
                  description: "",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "mIolNVIF1A4",
                data: {
                  id: 23170,
                  base_course: "StudentCSP",
                  name: "mIolNVIF1A4",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "nestedLoops",
                  author: "bmiller",
                  question_type: "youtube",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone " style="margin-left: auto; margin-right:auto">\n        <div id="mIolNVIF1A4" data-component="youtube" class="align-center youtube-video"\n            data-video-height="480" data-question_label="8.5.3"\n            data-video-width="640" data-video-videoid="mIolNVIF1A4"\n            data-video-divid="mIolNVIF1A4" data-video-start="0"\n            data-video-end="-1" ></div>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/nestedLoops",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.5.3",
                  optional: false,
                  description: "",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "8.6 Chapter 8 - Summary",
              num: 600,
              chapter: "CSPWhileAndForLoops",
              subchapter: "summary",
              id: 11624,
              numQuestions: 1
            },
            children: [
              {
                key: "8. Chapter 8 - While and For Loops/8.6 Chapter 8 - Summary",
                data: {
                  id: 11624,
                  base_course: "StudentCSP",
                  name: "8. Chapter 8 - While and For Loops/8.6 Chapter 8 - Summary",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "8.7 Chapter 8 Exercises",
              num: 700,
              chapter: "CSPWhileAndForLoops",
              subchapter: "Exercises",
              id: 11625,
              numQuestions: 21
            },
            children: [
              {
                key: "ch8ex1q",
                data: {
                  id: 11487,
                  base_course: "StudentCSP",
                  name: "ch8ex1q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex1q data-question_label="8.7.1">\n<div id=ch8ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ncounter = 10\nwhile Counter > 0:\n    Print(counter)\n    counter = Counter + 1\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex2q",
                data: {
                  id: 11488,
                  base_course: "StudentCSP",
                  name: "ch8ex2q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex2q data-question_label="8.7.2">\n<div id=ch8ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 5\nwhile x > 0:\n    print(x)\n    x = x + 1\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex3q",
                data: {
                  id: 11489,
                  base_course: "StudentCSP",
                  name: "ch8ex3q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex3q data-question_label="8.7.3">\n<div id=ch8ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\noutput = ""\nx = -10\nwhile x < 0\n    x = x - 1\noutput = output + str(x) + " "\nprint(output)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex4q",
                data: {
                  id: 11490,
                  base_course: "StudentCSP",
                  name: "ch8ex4q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex4q data-question_label="8.7.4">\n<div id=ch8ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfor x in range(1,2)\ny = 0\nwhile y < 4:\nprint("*")\ny += 1\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex5q",
                data: {
                  id: 11491,
                  base_course: "StudentCSP",
                  name: "ch8ex5q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex5q data-question_label="8.7.5">\n<div id=ch8ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\noutput =\nx = -5\nwhile x < 0:\n    output = output + str(x) + " "\n    x =\nprint(output)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex6q",
                data: {
                  id: 11492,
                  base_course: "StudentCSP",
                  name: "ch8ex6q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex6q data-question_label="8.7.6">\n<div id=ch8ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 3\ni = 0\nwhile i < 3:\n    x =\n    i = i + 1\nprint()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex7q",
                data: {
                  id: 11493,
                  base_course: "StudentCSP",
                  name: "ch8ex7q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex7q data-question_label="8.7.7">\n<div id=ch8ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ntarget = 6\n    guess = 2\nguessSquared = guess * guess\nwhile abs(target-guessSquared) > 0.01:\n    closer = target / guess\nguess = (guess + closer) / 2.0\n        guessSquared = guess * guess\n    print("Square root of", target,"is", guess)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex8q",
                data: {
                  id: 11494,
                  base_course: "StudentCSP",
                  name: "ch8ex8q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex8q data-question_label="8.7.8">\n<div id=ch8ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef sumFunc(start, stop):\n    sum = 0\n    for num in range(start, stop + 1):\n        sum = sum + num\n    return sum\n\nprint(sumFunc(1,10))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex9q",
                data: {
                  id: 11495,
                  base_course: "StudentCSP",
                  name: "ch8ex9q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex9q data-question_label="8.7.9">\n<div id=ch8ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfor x in range(1,3):\n    for y in range(1,10)\n        print(str(x) + " * " str(y) + " = " x*y)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex10q",
                data: {
                  id: 11496,
                  base_course: "StudentCSP",
                  name: "ch8ex10q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex10q data-question_label="8.7.10">\n<div id=ch8ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfor x in range(1,4):\n     for y in range(1,11):\n         print(str(x) + " * " + str(y) + " = " + str(x*y))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex11q",
                data: {
                  id: 11497,
                  base_course: "StudentCSP",
                  name: "ch8ex11q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex11q data-question_label="8.7.11">\n<div id=ch8ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nproduct = 1  # Start out with nothing\nnumbers = range(1,11)\nfor number in numbers:\n    product = product * number\nprint(product)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex12q",
                data: {
                  id: 11498,
                  base_course: "StudentCSP",
                  name: "ch8ex12q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex12q data-question_label="8.7.12">\n<div id=ch8ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsum = 10\nx = 0\nwhile x < 11:\nsum =  x\nx = x + 1\naverage = sum / 2\nprint(average)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex13q",
                data: {
                  id: 11499,
                  base_course: "StudentCSP",
                  name: "ch8ex13q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex13q data-question_label="8.7.13">\n<div id=ch8ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nproduct = 1  # init product to 1\n# STEP 2: GET DATA\nnumbers = range(10,21,2)\n# STEP 3: LOOP THROUGH THE DATA\nfor number in numbers:\n    # STEP 4: ACCUMULATE\n   product = product * number\n# STEP 5: PROCESS RESULT\nprint(product)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex14q",
                data: {
                  id: 11500,
                  base_course: "StudentCSP",
                  name: "ch8ex14q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex14q data-question_label="8.7.14">\n<div id=ch8ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnumber = 0\nwhile number < 10:\n    while number % 2 == 0:\n        print("Even")\n    while number % 2 != 0:\n        print("Odd")\n    number += 1\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex15q",
                data: {
                  id: 11501,
                  base_course: "StudentCSP",
                  name: "ch8ex15q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex15q data-question_label="8.7.15">\n<div id=ch8ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsum = 0\ncount = 0\nmessage = "Enter an integer or a negative number to stop"\nvalue = input(message)\nwhile int(value) > 0:\n    print("You entered " + value)\n    sum = sum + int(value)\n    count = count + 1\n    value = input(message)\nprint("The sum is: " + str(sum) +\n      " the average is: " + str(sum / count))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex16q",
                data: {
                  id: 11502,
                  base_course: "StudentCSP",
                  name: "ch8ex16q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex16q data-question_label="8.7.16">\n<div id=ch8ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfor x in range(0,11)\nfor y in range(1,11):\nprint(str(x) + " * " + str(y) + " = " + str(x*y))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex17q",
                data: {
                  id: 11503,
                  base_course: "StudentCSP",
                  name: "ch8ex17q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex17q data-question_label="8.7.17">\n<div id=ch8ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex18q",
                data: {
                  id: 11504,
                  base_course: "StudentCSP",
                  name: "ch8ex18q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex18q data-question_label="8.7.18">\n<div id=ch8ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex19q",
                data: {
                  id: 11505,
                  base_course: "StudentCSP",
                  name: "ch8ex19q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex19q data-question_label="8.7.19">\n<div id=ch8ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch8ex20q",
                data: {
                  id: 11506,
                  base_course: "StudentCSP",
                  name: "ch8ex20q",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch8ex20q data-question_label="8.7.20">\n<div id=ch8ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch8ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWhileAndForLoops/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.7.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8. Chapter 8 - While and For Loops/8.7 Chapter 8 Exercises",
                data: {
                  id: 11625,
                  base_course: "StudentCSP",
                  name: "8. Chapter 8 - While and For Loops/8.7 Chapter 8 Exercises",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "mixup_WhileAndFor",
            data: {
              title: "8.8 Mixed Up Code Practice",
              num: 800,
              chapter: "CSPWhileAndForLoops",
              subchapter: "mixup_WhileAndFor",
              id: 29718,
              numQuestions: 11
            },
            children: [
              {
                key: "ch88ex1muc",
                data: {
                  id: 29708,
                  base_course: "StudentCSP",
                  name: "ch88ex1muc",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "mixup_WhileAndFor",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch88ex1muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print the value of n as long as n is less than 5. But the blocks have been mixed up and include an extra block that isn’t needed in the solution. Drag the needed blocks from the left and put them in the correct order on the right. Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="8.8.1"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        n = 0\n---\nwhile n < 5:\n---\nwhile n > 5: #distractor\n---\n    print(n)\n---\n    n = n + 1\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/mixup_WhileAndFor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.8.1",
                  optional: false,
                  description:
                    "The following program segment should print the value of n as long as n is less t",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch88ex2muc",
                data: {
                  id: 29709,
                  base_course: "StudentCSP",
                  name: "ch88ex2muc",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "mixup_WhileAndFor",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch88ex2muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print 0, 2, 4, 6 on separate lines by using a while loop. Arrange the code so that “accum” prints before increasing its value. The blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="8.8.2"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        accum = 0\n---\nwhile accum < 7:\n---\n    print(accum)\n---\n    accum = accum + 2\n---\nwhile accum < 6 #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/mixup_WhileAndFor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.8.2",
                  optional: false,
                  description:
                    "The following program segment should print 0, 2, 4, 6 on separate lines by using",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch88ex3muc",
                data: {
                  id: 29710,
                  base_course: "StudentCSP",
                  name: "ch88ex3muc",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "mixup_WhileAndFor",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch88ex3muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print all even numbers from 0 to 8 (this includes 0 and 8). But the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="8.8.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        def skipCount(start, increment, stop):\n---\n    counter = start\n---\n    while counter < stop:\n---\n        print(counter)\n---\n        counter += increment\n---\n    return counter\n---\nprint(skipCount(0,2,9))\n---\nprint(skipCount(0,2,8)) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/mixup_WhileAndFor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.8.3",
                  optional: false,
                  description:
                    "The following program segment should print all even numbers from 0 to 8 (this in",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch88ex4muc",
                data: {
                  id: 29711,
                  base_course: "StudentCSP",
                  name: "ch88ex4muc",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "mixup_WhileAndFor",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch88ex4muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should result in an infinite loop. But the blocks have been mixed up and include an extra block that ins’t needed in the solution. Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="8.8.4"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        def loopMe(first, second):\n---\n    while first > second:\n---\n    while first == second: #distractor\n---\n        print(\'Am I infinitely looping?\')\n---\n    return True\n---\nloopMe(7, 4)\n---\nloopMe(1, 3) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/mixup_WhileAndFor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.8.4",
                  optional: false,
                  description:
                    "The following program segment should result in an infinite loop. But the blocks ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch88ex5muc",
                data: {
                  id: 29712,
                  base_course: "StudentCSP",
                  name: "ch88ex5muc",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "mixup_WhileAndFor",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch88ex5muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should calculate and print the average of a list of numbers using a for loop. Start by initializing the variable &lt;i&gt;sum&lt;/i&gt; and then create the list of numbers.  The blocks have been mixed up and include an extra block that ins’t needed in the solution. Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="8.8.5"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        sum = 0\n---\nnumbers = [90, 94, 85, 78, 87, 98]\n---\nfor number in numbers:\n---\n    sum = sum + number\n---\nprint(sum / 6)\n---\nprint(sum / 5) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/mixup_WhileAndFor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.8.5",
                  optional: false,
                  description:
                    "The following program segment should calculate and print the average of a list o",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch88ex6muc",
                data: {
                  id: 29713,
                  base_course: "StudentCSP",
                  name: "ch88ex6muc",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "mixup_WhileAndFor",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch88ex6muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should calculate and print the sum of all numbers between 0 and 30. Start by initializing the variable &lt;i&gt;sum&lt;/i&gt;. The blocks have been mixed up and include an extra block that ins’t needed in the solution. Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="8.8.6"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        sum = 0\n---\nnumbers = range(31)\n---\nnumbers = range(30) #distractor\n---\nfor number in numbers:\n---\n    sum = sum + number\n---\nprint(sum)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/mixup_WhileAndFor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.8.6",
                  optional: false,
                  description:
                    "The following program segment should calculate and print the sum of all numbers ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch88ex7muc",
                data: {
                  id: 29714,
                  base_course: "StudentCSP",
                  name: "ch88ex7muc",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "mixup_WhileAndFor",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch88ex7muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should calculate the sum of all odd numbers between 0 and 30. Start by initializing the variable &lt;i&gt;sum&lt;/i&gt; and loop through the odd numbers. The blocks have been mixed up and include an extra block that isn’t needed in the solution. Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="8.8.7"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        sum = 0\n---\nnumbers = range(1,30,2)\n---\nnumbers = range(0,29,2) #distractor\n---\nfor number in numbers:\n---\n    sum = sum + number\n---\nprint(sum)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/mixup_WhileAndFor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.8.7",
                  optional: false,
                  description:
                    "The following program segment should calculate the sum of all odd numbers betwee",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch88ex8muc",
                data: {
                  id: 29715,
                  base_course: "StudentCSP",
                  name: "ch88ex8muc",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "mixup_WhileAndFor",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch88ex8muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program should find the sum of every multiple of 3 between 3 and 36 and print the sum after each addition.  But, the blocks have been mixed up and include an extra block that isn’t needed in the solution. Drag the needed blocks from the left and put them in the correct order on the right. Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="8.8.8"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        sum = 0\n---\nnumbers = range(3, 37, 3)\n---\nfor number in numbers:\n---\n    sum = sum + number\n---\n    print(sum)\n---\n    print(number) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/mixup_WhileAndFor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.8.8",
                  optional: false,
                  description:
                    "The following program should find the sum of every multiple of 3 between 3 and 3",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch88ex9muc",
                data: {
                  id: 29716,
                  base_course: "StudentCSP",
                  name: "ch88ex9muc",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "mixup_WhileAndFor",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch88ex9muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program should find the average pH of 6 water samples. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution. Drag the needed blocks from the left and put them in the correct order on the right. Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="8.8.9"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        total = 0\n---\npHvalues =  [7.0, 8.2, 6.7, 7.5, 8.0, 7.2]\n---\nfor number in pHValues:\n---\n    total = total + number\n---\n    total = total * number #distractor\n---\naverage = total / 6\n---\nprint(average)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/mixup_WhileAndFor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.8.9",
                  optional: false,
                  description:
                    "The following program should find the average pH of 6 water samples. But, the bl",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch88ex10muc",
                data: {
                  id: 29717,
                  base_course: "StudentCSP",
                  name: "ch88ex10muc",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "mixup_WhileAndFor",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch88ex10muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program should print the numbers 5 to 1 starting with 5. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution. Drag the needed blocks from the left and put them in the correct order on the right. Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="8.8.10"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        counter = 5\n---\nwhile counter > 0:\n---\n    print(counter)\n---\n    counter = counter - 1\n---\n    counter = counter + 1 #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/mixup_WhileAndFor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.8.10",
                  optional: false,
                  description:
                    "The following program should print the numbers 5 to 1 starting with 5. But, the ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8. Chapter 8 - While and For Loops/8.8 Mixed Up Code Practice",
                data: {
                  id: 29718,
                  base_course: "StudentCSP",
                  name: "8. Chapter 8 - While and For Loops/8.8 Mixed Up Code Practice",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "mixup_WhileAndFor",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam7a8",
            data: {
              title: "8.9 Exam Questions for Chapters 7 and 8",
              num: 900,
              chapter: "CSPWhileAndForLoops",
              subchapter: "exam7a8",
              id: 11626,
              numQuestions: 6
            },
            children: [
              {
                key: "e7a8_1",
                data: {
                  id: 11507,
                  base_course: "StudentCSP",
                  name: "e7a8_1",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "exam7a8",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.9.2" data-multipleanswers="false"  id="e7a8_1"  style="visibility: hidden;">\n    <p>What is the last thing printed when the following code is run?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">number</span> <span class="o">=</span> <span class="mi">0</span>\n<span class="k">while</span> <span class="n">number</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="p">:</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;Number: &quot;</span><span class="p">,</span> <span class="n">number</span><span class="p">)</span>\n    <span class="n">number</span> <span class="o">=</span> <span class="n">number</span> <span class="o">+</span> <span class="mi">1</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="e7a8_1_opt_a">Number: 10</li><li data-component="feedback">Since this while loop continues while number is less than or equal to 10 the last time in the loop it will print Number: 10.</li>\n    \n    <li data-component="answer"  id="e7a8_1_opt_b">Number: number</li><li data-component="feedback">This would be true if it was print ("Number: ", "number").  But since there are no quotes around number it will print the value of number.</li>\n    \n    <li data-component="answer"  id="e7a8_1_opt_c">Number: 0</li><li data-component="feedback">While number is set to 0 to start it increments each time inside the loop.</li>\n    \n    <li data-component="answer"  id="e7a8_1_opt_d">Number: 11</li><li data-component="feedback">This would be true if the print statement was after number was incremented by 1, but it is before.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/exam7a8",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.9.2",
                  optional: false,
                  description: "What is the last thing printed when the following code is run?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e7a8_2",
                data: {
                  id: 11508,
                  base_course: "StudentCSP",
                  name: "e7a8_2",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "exam7a8",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.9.3" data-multipleanswers="false"  id="e7a8_2"  style="visibility: hidden;">\n    <p>When the following code is run, how many times is hello printed?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">helloArray</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">4</span><span class="p">)</span>\n<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="n">helloArray</span><span class="p">:</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;hello&quot;</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e7a8_2_opt_a">1</li><li data-component="feedback">This would be true if the print was outside of the loop, but it is in the loop.</li>\n    \n    <li data-component="answer"  id="e7a8_2_opt_b">2</li><li data-component="feedback">This would be true if it was range(1,3)</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e7a8_2_opt_c">3</li><li data-component="feedback">The range(1,4) returns a list with the values 1, 2, and 3.  So this will print hello 3 times.</li>\n    \n    <li data-component="answer"  id="e7a8_2_opt_d">4</li><li data-component="feedback">This would be true if it was range(1,5).  Remember that it includes the first value and ends before the second value.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/exam7a8",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.9.3",
                  optional: false,
                  description: "When the following code is run, how many times is hello printed?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e7a8_3",
                data: {
                  id: 11509,
                  base_course: "StudentCSP",
                  name: "e7a8_3",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "exam7a8",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.9.4" data-multipleanswers="false"  id="e7a8_3"  style="visibility: hidden;">\n    <p>What is the result of executing the following code?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">number</span> <span class="o">=</span> <span class="mi">5</span>\n<span class="k">while</span> <span class="n">number</span> <span class="o">&lt;=</span> <span class="mi">5</span><span class="p">:</span>\n    <span class="k">if</span> <span class="n">number</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">:</span>\n        <span class="n">number</span> <span class="o">=</span> <span class="n">number</span> <span class="o">+</span> <span class="mi">1</span>\n    <span class="nb">print</span><span class="p">(</span><span class="n">number</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="e7a8_3_opt_a">The program will loop indefinitely</li><li data-component="feedback">This code loops while number is less than or equal to 5 and number only increments if it is less than 5 and it is originally set to 5 so number never changes.</li>\n    \n    <li data-component="answer"  id="e7a8_3_opt_b">The value of number will be printed exactly 1 time</li><li data-component="feedback">This would be true if it was if number <= 5.</li>\n    \n    <li data-component="answer"  id="e7a8_3_opt_c">The while loop will never get executed</li><li data-component="feedback">This would be true if number was set to a number larger than 5 to start.</li>\n    \n    <li data-component="answer"  id="e7a8_3_opt_d">The value of number will be printed exactly 5 times</li><li data-component="feedback">This would be true if number was set to 1 to start.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/exam7a8",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.9.4",
                  optional: false,
                  description: "What is the result of executing the following code?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e7a8_4",
                data: {
                  id: 11510,
                  base_course: "StudentCSP",
                  name: "e7a8_4",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "exam7a8",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.9.5" data-multipleanswers="false"  id="e7a8_4"  style="visibility: hidden;">\n    <p>What will be printed by the following code when it executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>\n<span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>\n<span class="n">values</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">7</span><span class="p">]</span>\n<span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="n">values</span><span class="p">:</span>\n    <span class="nb">sum</span> <span class="o">=</span> <span class="nb">sum</span> <span class="o">+</span> <span class="n">number</span>\n<span class="nb">print</span> <span class="p">(</span><span class="nb">sum</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e7a8_4_opt_a">4</li><li data-component="feedback">This would be true if it was sum = sum + 1</li>\n    \n    <li data-component="answer"  id="e7a8_4_opt_b">0</li><li data-component="feedback">This would be true if sum never changed, but each time through the loop number is added to the current sum.</li>\n    \n    <li data-component="answer"  id="e7a8_4_opt_c">7</li><li data-component="feedback">This would be true if it printed the number.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e7a8_4_opt_d">16</li><li data-component="feedback">This adds up the numbers in values and prints the sum.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/exam7a8",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.9.5",
                  optional: false,
                  description: "What will be printed by the following code when it executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e7a8_5",
                data: {
                  id: 11511,
                  base_course: "StudentCSP",
                  name: "e7a8_5",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "exam7a8",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="8.9.6" data-multipleanswers="false"  id="e7a8_5"  style="visibility: hidden;">\n    <p>What will the following code print?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">counter</span> <span class="o">=</span> <span class="mi">1</span>\n<span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>\n<span class="k">while</span> <span class="n">counter</span> <span class="o">&lt;=</span> <span class="mi">6</span><span class="p">:</span>\n    <span class="nb">sum</span> <span class="o">=</span> <span class="nb">sum</span> <span class="o">+</span> <span class="n">counter</span>\n    <span class="n">counter</span> <span class="o">=</span> <span class="n">counter</span> <span class="o">+</span> <span class="mi">2</span>\n<span class="nb">print</span> <span class="p">(</span><span class="nb">sum</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e7a8_5_opt_a">12</li><li data-component="feedback">This would be true if counter started off with a value of 0.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e7a8_5_opt_b">9</li><li data-component="feedback">This loop executes 3 times.  After the first loop sum = 1 and counter = 3, after the second loop sum = 4 and counter = 5, and after the third loop sum = 9 and counter = 7.</li>\n    \n    <li data-component="answer"  id="e7a8_5_opt_c">7</li><li data-component="feedback">This is the value of counter, but this code prints the value of sum.</li>\n    \n    <li data-component="answer"  id="e7a8_5_opt_d">8</li><li data-component="feedback">This would be the value of counter after the loop if counter started at 0.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPWhileAndForLoops/exam7a8",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "8.9.6",
                  optional: false,
                  description: "What will the following code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "8. Chapter 8 - While and For Loops/8.9 Exam Questions for Chapters 7 and 8",
                data: {
                  id: 11626,
                  base_course: "StudentCSP",
                  name: "8. Chapter 8 - While and For Loops/8.9 Exam Questions for Chapters 7 and 8",
                  chapter: "CSPWhileAndForLoops",
                  subchapter: "exam7a8",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPRepeatStrings",
        data: {
          title: "9. Chapter 9 - Repeating Steps with Strings",
          num: 9
        },
        children: [
          {
            key: "repeatstrings",
            data: {
              title: "9.1 Using Repetition with Strings",
              num: 100,
              chapter: "CSPRepeatStrings",
              subchapter: "repeatstrings",
              id: 11627,
              numQuestions: 2
            },
            children: [
              {
                key: "Copy_Words",
                data: {
                  id: 11268,
                  base_course: "StudentCSP",
                  name: "Copy_Words",
                  chapter: "CSPRepeatStrings",
                  subchapter: "repeatstrings",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Copy_Words data-question_label="9.1.1">\n<div id=Copy_Words_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Copy_Words_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Lines of code*doubleq*; 2: strR1-line2; 4: strR1-line4; 6: strR1-line6; 8: strR1-line8; 10: strR1-line10;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nnewString = ""\n# STEP 2: GET DATA\nphrase = "Rubber baby buggy bumpers."\n# STEP 3: LOOP THROUGH THE DATA\nfor letter in phrase:\n    # STEP 4: ACCUMULATE\n    newString = newString + letter\n# STEP 5: PROCESS RESULT\nprint(newString)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/repeatstrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.1.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9. Chapter 9 - Repeating Steps with Strings/9.1 Using Repetition with Strings",
                data: {
                  id: 11627,
                  base_course: "StudentCSP",
                  name: "9. Chapter 9 - Repeating Steps with Strings/9.1 Using Repetition with Strings",
                  chapter: "CSPRepeatStrings",
                  subchapter: "repeatstrings",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "reverse",
            data: {
              title: "9.2 Reversing Text",
              num: 200,
              chapter: "CSPRepeatStrings",
              subchapter: "reverse",
              id: 11628,
              numQuestions: 5
            },
            children: [
              {
                key: "Copy_Reverse",
                data: {
                  id: 11269,
                  base_course: "StudentCSP",
                  name: "Copy_Reverse",
                  chapter: "CSPRepeatStrings",
                  subchapter: "reverse",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Copy_Reverse data-question_label="9.2.1">\n<div id=Copy_Reverse_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Copy_Reverse_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Lines of code*doubleq*; 2-3: strR2-line2-3; 5: strR2-line5; 7: strR2-line7; 9: strR2-line9; 10: strR2-line10; 12: strR2-line12; 13: strR2-line13; 14: strR2-line14; 15: strR2-line15;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATORS\nnewStringA = ""\nnewStringB = ""\n# STEP 2: GET DATA\nphrase = "Happy Birthday!"\n# STEP 3: LOOP THROUGH THE DATA\nfor letter in phrase:\n    # STEP 4: ACCUMULATE\n    newStringA = letter + newStringA\n    newStringB = newStringB + letter\n# STEP 5: PROCESS RESULT\nprint("Here\'s the result of using letter + newStringA:")\nprint(newStringA)\nprint("Here\'s the result of using newStringB + letter:")\nprint(newStringB)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/reverse",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.2.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9_2_1_Copy_Reverse_Q1",
                data: {
                  id: 11270,
                  base_course: "StudentCSP",
                  name: "9_2_1_Copy_Reverse_Q1",
                  chapter: "CSPRepeatStrings",
                  subchapter: "reverse",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="9.2.2" data-multipleanswers="false"  id="9_2_1_Copy_Reverse_Q1"  style="visibility: hidden;">\n    <p>Why do you think <code class="docutils literal notranslate"><span class="pre">newStringB</span></code> has all the letters, but in the reverse order?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="9_2_1_Copy_Reverse_Q1_opt_a">Because we add each new letter at the <i>end</i> of <code>newStringB</code>.</li><li data-component="feedback">Each new letter gets added at the end, which creates a reversal.</li>\n    \n    <li data-component="answer"  id="9_2_1_Copy_Reverse_Q1_opt_b">Because <code>newStringA</code> is adding the characters from left to right.</li><li data-component="feedback">How would that reverse the other string?</li>\n    \n    <li data-component="answer"  id="9_2_1_Copy_Reverse_Q1_opt_c">Because we called a reverse function.</li><li data-component="feedback">There is no reverse function in this program.</li>\n    \n    <li data-component="answer"  id="9_2_1_Copy_Reverse_Q1_opt_d">Because the <code>for</code> loop is doing a reversal</li><li data-component="feedback">The same <code>for</code> loop is creating both an in-order copy of the string and a reversed order of the string.  The <code>for</code> loop is the same in both cases.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/reverse",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.2.2",
                  optional: false,
                  description:
                    "Why do you think ``newStringB`` has all the letters, but in the reverse order?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9_2_2_WSq",
                data: {
                  id: 11271,
                  base_course: "StudentCSP",
                  name: "9_2_2_WSq",
                  chapter: "CSPRepeatStrings",
                  subchapter: "reverse",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=9_2_2_WSq data-question_label="9.2.3">\n<div id=9_2_2_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="9_2_2_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/reverse",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.2.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9_2_2_WSa",
                data: {
                  id: 11272,
                  base_course: "StudentCSP",
                  name: "9_2_2_WSa",
                  chapter: "CSPRepeatStrings",
                  subchapter: "reverse",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=9_2_2_WSa data-question_label="9.2.4">\n<div id=9_2_2_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="9_2_2_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# INITIALIZE ACCUMULATORS\nnewStringA = ""\nnewStringB = ""\n# NAME DATA\nword = "popsicle"\n# LOOP THROUGH THE DATA\nfor letter in word:\n  # ACCUMULATE RESULT\n    newStringA = letter + newStringA\n    newStringB = newStringB + letter\n# DISPLAY RESULT\nprint("Here\'s the result of using newStringB + letter:")\nprint(newStringB + newStringA)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/reverse",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.2.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9. Chapter 9 - Repeating Steps with Strings/9.2 Reversing Text",
                data: {
                  id: 11628,
                  base_course: "StudentCSP",
                  name: "9. Chapter 9 - Repeating Steps with Strings/9.2 Reversing Text",
                  chapter: "CSPRepeatStrings",
                  subchapter: "reverse",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "mirror",
            data: {
              title: "9.3 Mirroring Text",
              num: 300,
              chapter: "CSPRepeatStrings",
              subchapter: "mirror",
              id: 11629,
              numQuestions: 6
            },
            children: [
              {
                key: "Copy_Mirror",
                data: {
                  id: 11255,
                  base_course: "StudentCSP",
                  name: "Copy_Mirror",
                  chapter: "CSPRepeatStrings",
                  subchapter: "mirror",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Copy_Mirror data-question_label="9.3.1">\n<div id=Copy_Mirror_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Copy_Mirror_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Lines of code*doubleq*; 2: strR3-line1; 4: strR3-line2; 6: strR3-line3; 8: strR3-line4; 10: strR3-line5;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nnewString = ""\n# STEP 2: GET DATA\nphrase = "This is a test"\n# STEP 3: LOOP THROUGH THE DATA\nfor letter in phrase:\n    # STEP 4: ACCUMULATE\n    newString = letter + newString + letter\n# STEP 5: PROCESS RESULT\nprint(newString)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/mirror",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9_3_1_Copy_Mirror_Q1",
                data: {
                  id: 11256,
                  base_course: "StudentCSP",
                  name: "9_3_1_Copy_Mirror_Q1",
                  chapter: "CSPRepeatStrings",
                  subchapter: "mirror",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="9.3.2" data-multipleanswers="false"  id="9_3_1_Copy_Mirror_Q1"  style="visibility: hidden;">\n    <p>Change the mirroring program to mirror the phrase <code class="docutils literal notranslate"><span class="pre">&quot;Time</span> <span class="pre">to</span> <span class="pre">Panic&quot;</span></code> with a single exclamation point in the middle, to make the printed words look like this: <code class="docutils literal notranslate"><span class="pre">cinaP</span> <span class="pre">ot</span> <span class="pre">emiT!Time</span> <span class="pre">to</span> <span class="pre">Panic</span></code>.  How do you do it?</p>\n\n    <li data-component="answer"  id="9_3_1_Copy_Mirror_Q1_opt_a">Make the phrase <code>"Time to panic!"</code></li><li data-component="feedback">That would give us <code>!cinaP ot emiTTime to Panic!</code>.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="9_3_1_Copy_Mirror_Q1_opt_b">Change the <code>newString</code> in line 1 to <code>"!"</code> instead of <cod>""</code></li><li data-component="feedback">We can start our accumulator with something in it.</li>\n    \n    <li data-component="answer"  id="9_3_1_Copy_Mirror_Q1_opt_c">Change the right hand side of line 4 to <code>letter + "!" + newstring + letter</code></li><li data-component="feedback">That would give us <code>!!c!i!n!a!P! !o!t! !e!m!i!T!Time to Panic!</code> -- exclamation points between the letters in the first half of the mirror.</li>\n    \n    <li data-component="answer"  id="9_3_1_Copy_Mirror_Q1_opt_d">Change the right hand side of line 4 to <code>letter + newstring + "!" + letter</code></li><li data-component="feedback">That would give us <code>!cinaP ot emiT!T!i!m!e! !t!o! !P!a!n!i!c!!</code> -- exclamation points between the letters in the second half of the mirror.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/mirror",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.3.2",
                  optional: false,
                  description:
                    'Change the mirroring program to mirror the phrase ``"Time to Panic"`` with a sin',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Char_In_Middle",
                data: {
                  id: 11257,
                  base_course: "StudentCSP",
                  name: "Char_In_Middle",
                  chapter: "CSPRepeatStrings",
                  subchapter: "mirror",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="9.3.3">\n        <div id=Char_In_Middle_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Char_In_Middle"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 9.3.3 (Char_In_Middle)</span> </p>\n    </div>\n\n<script>\nvar Char_In_Middle_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Char_In_Middle"] = {"code": "newString = \\"!\\"\\nphrase = \\"We\'re off to see the Wizard!\\"\\nfor letter in phrase:\\n    newString = letter + newString + letter\\nprint(newString)", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"newString": "!"}, "ordered_globals": ["newString"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "!", "phrase": "We\'re off to see the Wizard!"}, "ordered_globals": ["newString", "phrase"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "!", "phrase": "We\'re off to see the Wizard!", "letter": "W"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "W!W", "phrase": "We\'re off to see the Wizard!", "letter": "W"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "W!W", "phrase": "We\'re off to see the Wizard!", "letter": "e"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "eW!We", "phrase": "We\'re off to see the Wizard!", "letter": "e"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "eW!We", "phrase": "We\'re off to see the Wizard!", "letter": "\'"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "\'eW!We\'", "phrase": "We\'re off to see the Wizard!", "letter": "\'"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "\'eW!We\'", "phrase": "We\'re off to see the Wizard!", "letter": "r"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "r\'eW!We\'r", "phrase": "We\'re off to see the Wizard!", "letter": "r"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "r\'eW!We\'r", "phrase": "We\'re off to see the Wizard!", "letter": "e"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "er\'eW!We\'re", "phrase": "We\'re off to see the Wizard!", "letter": "e"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "er\'eW!We\'re", "phrase": "We\'re off to see the Wizard!", "letter": " "}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": " er\'eW!We\'re ", "phrase": "We\'re off to see the Wizard!", "letter": " "}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": " er\'eW!We\'re ", "phrase": "We\'re off to see the Wizard!", "letter": "o"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "o er\'eW!We\'re o", "phrase": "We\'re off to see the Wizard!", "letter": "o"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "o er\'eW!We\'re o", "phrase": "We\'re off to see the Wizard!", "letter": "f"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "fo er\'eW!We\'re of", "phrase": "We\'re off to see the Wizard!", "letter": "f"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "fo er\'eW!We\'re of", "phrase": "We\'re off to see the Wizard!", "letter": "f"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "ffo er\'eW!We\'re off", "phrase": "We\'re off to see the Wizard!", "letter": "f"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "ffo er\'eW!We\'re off", "phrase": "We\'re off to see the Wizard!", "letter": " "}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": " ffo er\'eW!We\'re off ", "phrase": "We\'re off to see the Wizard!", "letter": " "}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": " ffo er\'eW!We\'re off ", "phrase": "We\'re off to see the Wizard!", "letter": "t"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "t ffo er\'eW!We\'re off t", "phrase": "We\'re off to see the Wizard!", "letter": "t"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "t ffo er\'eW!We\'re off t", "phrase": "We\'re off to see the Wizard!", "letter": "o"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "ot ffo er\'eW!We\'re off to", "phrase": "We\'re off to see the Wizard!", "letter": "o"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "ot ffo er\'eW!We\'re off to", "phrase": "We\'re off to see the Wizard!", "letter": " "}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": " ot ffo er\'eW!We\'re off to ", "phrase": "We\'re off to see the Wizard!", "letter": " "}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": " ot ffo er\'eW!We\'re off to ", "phrase": "We\'re off to see the Wizard!", "letter": "s"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "s ot ffo er\'eW!We\'re off to s", "phrase": "We\'re off to see the Wizard!", "letter": "s"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "s ot ffo er\'eW!We\'re off to s", "phrase": "We\'re off to see the Wizard!", "letter": "e"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "es ot ffo er\'eW!We\'re off to se", "phrase": "We\'re off to see the Wizard!", "letter": "e"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "es ot ffo er\'eW!We\'re off to se", "phrase": "We\'re off to see the Wizard!", "letter": "e"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "ees ot ffo er\'eW!We\'re off to see", "phrase": "We\'re off to see the Wizard!", "letter": "e"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "ees ot ffo er\'eW!We\'re off to see", "phrase": "We\'re off to see the Wizard!", "letter": " "}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": " ees ot ffo er\'eW!We\'re off to see ", "phrase": "We\'re off to see the Wizard!", "letter": " "}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": " ees ot ffo er\'eW!We\'re off to see ", "phrase": "We\'re off to see the Wizard!", "letter": "t"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "t ees ot ffo er\'eW!We\'re off to see t", "phrase": "We\'re off to see the Wizard!", "letter": "t"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "t ees ot ffo er\'eW!We\'re off to see t", "phrase": "We\'re off to see the Wizard!", "letter": "h"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "ht ees ot ffo er\'eW!We\'re off to see th", "phrase": "We\'re off to see the Wizard!", "letter": "h"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "ht ees ot ffo er\'eW!We\'re off to see th", "phrase": "We\'re off to see the Wizard!", "letter": "e"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "eht ees ot ffo er\'eW!We\'re off to see the", "phrase": "We\'re off to see the Wizard!", "letter": "e"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "eht ees ot ffo er\'eW!We\'re off to see the", "phrase": "We\'re off to see the Wizard!", "letter": " "}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": " eht ees ot ffo er\'eW!We\'re off to see the ", "phrase": "We\'re off to see the Wizard!", "letter": " "}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": " eht ees ot ffo er\'eW!We\'re off to see the ", "phrase": "We\'re off to see the Wizard!", "letter": "W"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "W eht ees ot ffo er\'eW!We\'re off to see the W", "phrase": "We\'re off to see the Wizard!", "letter": "W"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "W eht ees ot ffo er\'eW!We\'re off to see the W", "phrase": "We\'re off to see the Wizard!", "letter": "i"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "iW eht ees ot ffo er\'eW!We\'re off to see the Wi", "phrase": "We\'re off to see the Wizard!", "letter": "i"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "iW eht ees ot ffo er\'eW!We\'re off to see the Wi", "phrase": "We\'re off to see the Wizard!", "letter": "z"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "ziW eht ees ot ffo er\'eW!We\'re off to see the Wiz", "phrase": "We\'re off to see the Wizard!", "letter": "z"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "ziW eht ees ot ffo er\'eW!We\'re off to see the Wiz", "phrase": "We\'re off to see the Wizard!", "letter": "a"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "aziW eht ees ot ffo er\'eW!We\'re off to see the Wiza", "phrase": "We\'re off to see the Wizard!", "letter": "a"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "aziW eht ees ot ffo er\'eW!We\'re off to see the Wiza", "phrase": "We\'re off to see the Wizard!", "letter": "r"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "raziW eht ees ot ffo er\'eW!We\'re off to see the Wizar", "phrase": "We\'re off to see the Wizard!", "letter": "r"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "raziW eht ees ot ffo er\'eW!We\'re off to see the Wizar", "phrase": "We\'re off to see the Wizard!", "letter": "d"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "draziW eht ees ot ffo er\'eW!We\'re off to see the Wizard", "phrase": "We\'re off to see the Wizard!", "letter": "d"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"newString": "draziW eht ees ot ffo er\'eW!We\'re off to see the Wizard", "phrase": "We\'re off to see the Wizard!", "letter": "!"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"newString": "!draziW eht ees ot ffo er\'eW!We\'re off to see the Wizard!", "phrase": "We\'re off to see the Wizard!", "letter": "!"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"newString": "!draziW eht ees ot ffo er\'eW!We\'re off to see the Wizard!", "phrase": "We\'re off to see the Wizard!", "letter": "!"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "return", "func_name": "<module>", "globals": {"newString": "!draziW eht ees ot ffo er\'eW!We\'re off to see the Wizard!", "phrase": "We\'re off to see the Wizard!", "letter": "!"}, "ordered_globals": ["newString", "phrase", "letter"], "stack_to_render": [], "heap": {}, "stdout": "!draziW eht ees ot ffo er\'eW!We\'re off to see the Wizard!\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/mirror",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.3.3",
                  optional: false,
                  description:
                    'newString = "!" phrase = "We\'re off to see the Wizard!" for letter in phrase:   ',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9_3_2_Count_Exclamations_Q1",
                data: {
                  id: 11258,
                  base_course: "StudentCSP",
                  name: "9_3_2_Count_Exclamations_Q1",
                  chapter: "CSPRepeatStrings",
                  subchapter: "mirror",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="9.3.4" data-multipleanswers="false"  id="9_3_2_Count_Exclamations_Q1"  style="visibility: hidden;">\n    <p>When the variable <code class="docutils literal notranslate"><span class="pre">letter</span></code> contains the <code class="docutils literal notranslate"><span class="pre">&quot;W&quot;</span></code> from <code class="docutils literal notranslate"><span class="pre">Wizard</span></code>, how many exclamation points are in <code class="docutils literal notranslate"><span class="pre">newString</span></code>?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="9_3_2_Count_Exclamations_Q1_opt_a">One</li><li data-component="feedback">There is just the one in the accumulator to start.</li>\n    \n    <li data-component="answer"  id="9_3_2_Count_Exclamations_Q1_opt_b">Two</li><li data-component="feedback">If we just mirrored the string, there would be only two.  But we are mirroring with something in the accumulator.</li>\n    \n    <li data-component="answer"  id="9_3_2_Count_Exclamations_Q1_opt_c">Three</li><li data-component="feedback">That is true at the end, but not when letter contains the first letter of <code>"Wizard"</code></li>\n    \n    <li data-component="answer"  id="9_3_2_Count_Exclamations_Q1_opt_d">Four</li><li data-component="feedback">At most, there will be three in <code>newString</code>.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/mirror",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.3.4",
                  optional: false,
                  description:
                    'When the variable ``letter`` contains the ``"W"`` from ``Wizard``, how many excl',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9_3_3_Palindrome",
                data: {
                  id: 11259,
                  base_course: "StudentCSP",
                  name: "9_3_3_Palindrome",
                  chapter: "CSPRepeatStrings",
                  subchapter: "mirror",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="9_3_3_Palindrome" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>&lt;p&gt;The phrase &lt;code&gt;”A but tuba”&lt;/code&gt; is a &lt;b&gt;palindrome&lt;/b&gt;.  The letters are the same forward and backward.  The below program generates the output: &lt;code&gt;”abut tub a&lt;=&gt;a but tuba”&lt;/code&gt;  Put the lines in the right order with the right indentation.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="9.3.5"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        newStr = "<=>"\nphrase = "a but tuba"\n---\nfor char in phrase:\n---\n    newStr = char + newStr + char\n---\nprint(newStr)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/mirror",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.3.5",
                  optional: false,
                  description:
                    '<p>The phrase <code>"A but tuba"</code> is a <b>palindrome</b>.  The letters are',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9. Chapter 9 - Repeating Steps with Strings/9.3 Mirroring Text",
                data: {
                  id: 11629,
                  base_course: "StudentCSP",
                  name: "9. Chapter 9 - Repeating Steps with Strings/9.3 Mirroring Text",
                  chapter: "CSPRepeatStrings",
                  subchapter: "mirror",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "modify",
            data: {
              title: "9.4 Modifying Text",
              num: 400,
              chapter: "CSPRepeatStrings",
              subchapter: "modify",
              id: 11630,
              numQuestions: 9
            },
            children: [
              {
                key: "Change_Ones",
                data: {
                  id: 11260,
                  base_course: "StudentCSP",
                  name: "Change_Ones",
                  chapter: "CSPRepeatStrings",
                  subchapter: "modify",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="9.4.1">\n        <div id=Change_Ones_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Change_Ones"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 9.4.1 (Change_Ones)</span> </p>\n    </div>\n\n<script>\nvar Change_Ones_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Change_Ones"] = {"code": "str = \\"Th1s is a str1ng\\"\\npos = str.find(\\"1\\")\\nwhile pos >= 0:\\n    str = str[0:pos] + \\"i\\" + str[pos+1:len(str)]\\n    pos = str.find(\\"1\\")\\nprint(str)", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"str": "Th1s is a str1ng"}, "ordered_globals": ["str"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"str": "Th1s is a str1ng", "pos": 2}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"str": "Th1s is a str1ng", "pos": 2}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"str": "This is a str1ng", "pos": 2}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": "", "question": {"text": "What is the value of pos after the line with the red arrow executes?", "correct": "globals.pos", "div": "Change_Ones_modal", "feedback": "Remember that find returns the starting index if the target string is found and -1 if not."}}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"str": "This is a str1ng", "pos": 13}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"str": "This is a str1ng", "pos": 13}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"str": "This is a string", "pos": 13}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": "", "question": {"text": "What is the value of pos after the line with the red arrow executes?", "correct": "globals.pos", "div": "Change_Ones_modal", "feedback": "Remember that find returns the starting index if the target string is found and -1 if not."}}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"str": "This is a string", "pos": -1}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"str": "This is a string", "pos": -1}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "return", "func_name": "<module>", "globals": {"str": "This is a string", "pos": -1}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": "This is a string\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/modify",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.4.1",
                  optional: false,
                  description:
                    'str = "Th1s is a str1ng" pos = str.find("1") while pos >= 0:     str = str[0:pos',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Change_Word",
                data: {
                  id: 11261,
                  base_course: "StudentCSP",
                  name: "Change_Word",
                  chapter: "CSPRepeatStrings",
                  subchapter: "modify",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="9.4.2">\n        <div id=Change_Word_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Change_Word"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 9.4.2 (Change_Word)</span> </p>\n    </div>\n\n<script>\nvar Change_Word_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Change_Word"] = {"code": "str = \\"He wanted a peice of candy\\"\\nstr = str + \\" so he gave her a peice.\\"\\npos = str.find(\\"peice\\")\\nwhile pos >= 0:\\n    str = str[0:pos] + \\"piece\\" + str[pos+len(\\"peice\\"):len(str)]\\n    pos = str.find(\\"peice\\")\\nprint(str)", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"str": "He wanted a peice of candy"}, "ordered_globals": ["str"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"str": "He wanted a peice of candy so he gave her a peice."}, "ordered_globals": ["str"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"str": "He wanted a peice of candy so he gave her a peice.", "pos": 12}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"str": "He wanted a peice of candy so he gave her a peice.", "pos": 12}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"str": "He wanted a piece of candy so he gave her a peice.", "pos": 12}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": "", "question": {"text": "What is the value of pos after the line with the red arrow executes?", "correct": "globals.pos", "div": "Change_Word_modal", "feedback": "Remember that find returns the starting index if the target string is found and -1 if not."}}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"str": "He wanted a piece of candy so he gave her a peice.", "pos": 44}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"str": "He wanted a piece of candy so he gave her a peice.", "pos": 44}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"str": "He wanted a piece of candy so he gave her a piece.", "pos": 44}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": "", "question": {"text": "What is the value of pos after the line with the red arrow executes?", "correct": "globals.pos", "div": "Change_Word_modal", "feedback": "Remember that find returns the starting index if the target string is found and -1 if not."}}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"str": "He wanted a piece of candy so he gave her a piece.", "pos": -1}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"str": "He wanted a piece of candy so he gave her a piece.", "pos": -1}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "return", "func_name": "<module>", "globals": {"str": "He wanted a piece of candy so he gave her a piece.", "pos": -1}, "ordered_globals": ["str", "pos"], "stack_to_render": [], "heap": {}, "stdout": "He wanted a piece of candy so he gave her a piece.\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/modify",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.4.2",
                  optional: false,
                  description:
                    'str = "He wanted a peice of candy" str = str + " so he gave her a peice." pos = ',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Encode_String",
                data: {
                  id: 11262,
                  base_course: "StudentCSP",
                  name: "Encode_String",
                  chapter: "CSPRepeatStrings",
                  subchapter: "modify",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="9.4.3">\n        <div id=Encode_String_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Encode_String"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 9.4.3 (Encode_String)</span> </p>\n    </div>\n\n<script>\nvar Encode_String_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Encode_String"] = {"code": "message = \\"meet me at midnight\\"\\nstr = \\"abcdefghijklmnopqrstuvwxyz. \\"\\neStr = \\"zyxwvutsrqponmlkjihgfedcba .\\"\\nencodedMessage = \\"\\"\\nfor letter in message:\\n    pos = str.find(letter)\\n    encodedMessage = encodedMessage + eStr[pos:pos+1]\\nprint(encodedMessage)", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight"}, "ordered_globals": ["message"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. "}, "ordered_globals": ["message", "str"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba ."}, "ordered_globals": ["message", "str", "eStr"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": ""}, "ordered_globals": ["message", "str", "eStr", "encodedMessage"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "", "letter": "m"}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "", "letter": "m", "pos": 12}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "n", "letter": "m", "pos": 12}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "n", "letter": "e", "pos": 12}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "n", "letter": "e", "pos": 4}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nv", "letter": "e", "pos": 4}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nv", "letter": "e", "pos": 4}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nv", "letter": "e", "pos": 4}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvv", "letter": "e", "pos": 4}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvv", "letter": "t", "pos": 4}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvv", "letter": "t", "pos": 19}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg", "letter": "t", "pos": 19}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg", "letter": " ", "pos": 19}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg", "letter": " ", "pos": 27}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.", "letter": " ", "pos": 27}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.", "letter": "m", "pos": 27}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.", "letter": "m", "pos": 12}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.n", "letter": "m", "pos": 12}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.n", "letter": "e", "pos": 12}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.n", "letter": "e", "pos": 4}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv", "letter": "e", "pos": 4}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv", "letter": " ", "pos": 4}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv", "letter": " ", "pos": 27}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.", "letter": " ", "pos": 27}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.", "letter": "a", "pos": 27}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.", "letter": "a", "pos": 0}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.z", "letter": "a", "pos": 0}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.z", "letter": "t", "pos": 0}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.z", "letter": "t", "pos": 19}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg", "letter": "t", "pos": 19}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg", "letter": " ", "pos": 19}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg", "letter": " ", "pos": 27}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.", "letter": " ", "pos": 27}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.", "letter": "m", "pos": 27}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.", "letter": "m", "pos": 12}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.n", "letter": "m", "pos": 12}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.n", "letter": "i", "pos": 12}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.n", "letter": "i", "pos": 8}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nr", "letter": "i", "pos": 8}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nr", "letter": "d", "pos": 8}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nr", "letter": "d", "pos": 3}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrw", "letter": "d", "pos": 3}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrw", "letter": "n", "pos": 3}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrw", "letter": "n", "pos": 13}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwm", "letter": "n", "pos": 13}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwm", "letter": "i", "pos": 13}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwm", "letter": "i", "pos": 8}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwmr", "letter": "i", "pos": 8}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwmr", "letter": "g", "pos": 8}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwmr", "letter": "g", "pos": 6}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwmrt", "letter": "g", "pos": 6}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwmrt", "letter": "h", "pos": 6}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwmrt", "letter": "h", "pos": 7}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwmrts", "letter": "h", "pos": 7}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwmrts", "letter": "t", "pos": 7}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 7, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwmrts", "letter": "t", "pos": 19}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwmrtsg", "letter": "t", "pos": 19}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 8, "event": "step_line", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwmrtsg", "letter": "t", "pos": 19}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 8, "event": "return", "func_name": "<module>", "globals": {"message": "meet me at midnight", "str": "abcdefghijklmnopqrstuvwxyz. ", "eStr": "zyxwvutsrqponmlkjihgfedcba .", "encodedMessage": "nvvg.nv.zg.nrwmrtsg", "letter": "t", "pos": 19}, "ordered_globals": ["message", "str", "eStr", "encodedMessage", "letter", "pos"], "stack_to_render": [], "heap": {}, "stdout": "nvvg.nv.zg.nrwmrtsg\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/modify",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.4.3",
                  optional: false,
                  description:
                    'message = "meet me at midnight" str = "abcdefghijklmnopqrstuvwxyz. " eStr = "zyx',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9_4_1_replace_m",
                data: {
                  id: 11263,
                  base_course: "StudentCSP",
                  name: "9_4_1_replace_m",
                  chapter: "CSPRepeatStrings",
                  subchapter: "modify",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="9.4.4" data-multipleanswers="false"  id="9_4_1_replace_m"  style="visibility: hidden;">\n    <p>What character is e replaced with when the message is encoded?</p>\n\n    <li data-component="answer"  id="9_4_1_replace_m_opt_a">a</li><li data-component="feedback">The letter in str is replaced with the letter at the same position in eStr.</li>\n    \n    <li data-component="answer"  id="9_4_1_replace_m_opt_b">d</li><li data-component="feedback">The letter in str is replaced with the letter at the same position in eStr.</li>\n    \n    <li data-component="answer"  id="9_4_1_replace_m_opt_c">w</li><li data-component="feedback">Try counting the letters in str to figure out how many letters to count in eStr.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="9_4_1_replace_m_opt_d">v</li><li data-component="feedback">The letter e is at position 4 in str and will be replaced with the letter v at position 4 in eStr.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/modify",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.4.4",
                  optional: false,
                  description: "What character is e replaced with when the message is encoded?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9_4_2_encodeMess1",
                data: {
                  id: 11264,
                  base_course: "StudentCSP",
                  name: "9_4_2_encodeMess1",
                  chapter: "CSPRepeatStrings",
                  subchapter: "modify",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="9.4.5" data-multipleanswers="false"  id="9_4_2_encodeMess1"  style="visibility: hidden;">\n    <p>What is the value of encodedMessage after the loop executes the first time?</p>\n\n    <li data-component="answer"  id="9_4_2_encodeMess1_opt_a">""</li><li data-component="feedback">It starts out as the empty string, but a letter is added each time through the loop.</li>\n    \n    <li data-component="answer"  id="9_4_2_encodeMess1_opt_b">"o"</li><li data-component="feedback">The letter in str is replaced with the letter at the same position in eStr.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="9_4_2_encodeMess1_opt_c">"n"</li><li data-component="feedback">The letter in eStr at the same position as the m in str is n.</li>\n    \n    <li data-component="answer"  id="9_4_2_encodeMess1_opt_d">"m"</li><li data-component="feedback">Notice that we are adding the letter in eStr at pos not the letter in str at pos.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/modify",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.4.5",
                  optional: false,
                  description:
                    "What is the value of encodedMessage after the loop executes the first time?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9_4_3_Decode_String",
                data: {
                  id: 11265,
                  base_course: "StudentCSP",
                  name: "9_4_3_Decode_String",
                  chapter: "CSPRepeatStrings",
                  subchapter: "modify",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="9_4_3_Decode_String" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The program below decodes an encoded message, but the lines are mixed up.  Put the lines in the right order with the right indentation.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="9.4.6"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        message = ""\nstr = "abcdefghijklmnopqrstuvwxyz. "\neStr = "zyxwvutsrqponmlkjihgfedcba ."\nencodedMessage = "nvvg.nv.zg.nrwmrtsg"\n---\nfor letter in encodedMessage:\n---\n    pos = eStr.find(letter)\n---\n    message = message + str[pos:pos+1]\n---\nprint(message)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/modify",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.4.6",
                  optional: false,
                  description:
                    "The program below decodes an encoded message, but the lines are mixed up.  Put t",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9_4_4_WSq",
                data: {
                  id: 11266,
                  base_course: "StudentCSP",
                  name: "9_4_4_WSq",
                  chapter: "CSPRepeatStrings",
                  subchapter: "modify",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=9_4_4_WSq data-question_label="9.4.7">\n<div id=9_4_4_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="9_4_4_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/modify",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.4.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9_4_4_WSa",
                data: {
                  id: 11267,
                  base_course: "StudentCSP",
                  name: "9_4_4_WSa",
                  chapter: "CSPRepeatStrings",
                  subchapter: "modify",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=9_4_4_WSa data-question_label="9.4.8">\n<div id=9_4_4_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="9_4_4_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nstr = "The 0wl h00ts l0udly"\n# SET POS TO A VALUE GREATER THAN OR EQUAL TO 0\npos = 1\n# SET WHILE CONDITION\nwhile pos >= 0:\n    # REPLACE VALUE\n    pos = str.find("0")\n    if pos == -1:\n      break\n    str = str[0:pos] + "o" + str[pos+1:len(str)]\n# PRINT RESULT\nprint(str)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/modify",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.4.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9. Chapter 9 - Repeating Steps with Strings/9.4 Modifying Text",
                data: {
                  id: 11630,
                  base_course: "StudentCSP",
                  name: "9. Chapter 9 - Repeating Steps with Strings/9.4 Modifying Text",
                  chapter: "CSPRepeatStrings",
                  subchapter: "modify",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "9.5 Chapter 9 - Summary",
              num: 500,
              chapter: "CSPRepeatStrings",
              subchapter: "summary",
              id: 11631,
              numQuestions: 1
            },
            children: [
              {
                key: "9. Chapter 9 - Repeating Steps with Strings/9.5 Chapter 9 - Summary",
                data: {
                  id: 11631,
                  base_course: "StudentCSP",
                  name: "9. Chapter 9 - Repeating Steps with Strings/9.5 Chapter 9 - Summary",
                  chapter: "CSPRepeatStrings",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "9.6 Chapter 9 Exercises",
              num: 600,
              chapter: "CSPRepeatStrings",
              subchapter: "Exercises",
              id: 11632,
              numQuestions: 21
            },
            children: [
              {
                key: "ch9ex1q",
                data: {
                  id: 11235,
                  base_course: "StudentCSP",
                  name: "ch9ex1q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex1q data-question_label="9.6.1">\n<div id=ch9ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nnewString = ""\n# STEP 2: GET DATA\nPhrase = "Rubber baby buggy bumpers.\n# STEP 3: LOOP THROUGH THE DATA\nfor letter in phrase\n    # STEP 4: ACCUMULATE\n    newString = newString letter\n# STEP 5: PROCESS RESULT\nprint(newString\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex2q",
                data: {
                  id: 11236,
                  base_course: "StudentCSP",
                  name: "ch9ex2q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex2q data-question_label="9.6.2">\n<div id=ch9ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nnewString = ""\n# STEP 2: GET DATA\nphrase = "This is a string."\n# STEP 3: LOOP THROUGH THE DATA\nfor letter in phrase:\n    # STEP 4: ACCUMULATE\n    newString = letter + newString\n# STEP 5: PROCESS RESULT\nprint(newString)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex3q",
                data: {
                  id: 11237,
                  base_course: "StudentCSP",
                  name: "ch9ex3q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex3q data-question_label="9.6.3">\n<div id=ch9ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATORS\nnewString = ""\n# STEP 2: GET DATA\n    phrase = "Happy Birthday!"\n# STEP 3: LOOP THROUGH THE DATA\nfor letter in phrase:\n# STEP 4: ACCUMULATE\nnewString = letter + newString\n# STEP 5: PROCESS RESULT\n    print(newString)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex4q",
                data: {
                  id: 11238,
                  base_course: "StudentCSP",
                  name: "ch9ex4q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex4q data-question_label="9.6.4">\n<div id=ch9ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 2: GET DATA\nphrase = "Hey look, I\'m a string!"\n# STEP 3: LOOP THROUGH THE DATA\nfor letter in phrase:\n    newString = ""\n    # STEP 4: ACCUMULATE\n    newString = newString + phrase\n    # STEP 5: PROCESS RESULT\n    print(phrase)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex5q",
                data: {
                  id: 11239,
                  base_course: "StudentCSP",
                  name: "ch9ex5q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex5q data-question_label="9.6.5">\n<div id=ch9ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nnewString =\n# STEP 2: GET DATA\nphrase = "This is a test"\n# STEP 3: LOOP THROUGH THE DATA\nfor l in phrase:\n    # STEP 4: ACCUMULATE\n    newString = letter + newString  letter\n# STEP 5: PROCESS RESULT\nprint()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex6q",
                data: {
                  id: 11240,
                  base_course: "StudentCSP",
                  name: "ch9ex6q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex6q data-question_label="9.6.6">\n<div id=ch9ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nnewString = ""\n# STEP 2: GET DATA\nphrase = "It\'s like looking in a mirror!"\n# STEP 3: LOOP THROUGH THE DATA\nfor letter in phrase:\n    # STEP 4: ACCUMULATE\n    newString = newString + letter + letter\n# STEP 5: PROCESS RESULT\nprint(newString)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex7q",
                data: {
                  id: 11241,
                  base_course: "StudentCSP",
                  name: "ch9ex7q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex7q data-question_label="9.6.7">\n<div id=ch9ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nstr = "Th1s is a str1ng"\npos = str.find("1")\nwhile pos >= 0:\n    str = str[0:pos] + "i" + str[pos+1:len(str)]\nprint(str)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex8q",
                data: {
                  id: 11242,
                  base_course: "StudentCSP",
                  name: "ch9ex8q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex8q data-question_label="9.6.8">\n<div id=ch9ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nnewString = "  "\n# STEP 2: GET DATA\nphrase = "I\'m just a string."\n# STEP 3: LOOP THROUGH THE DATA\nfor phrase in letter\n    # STEP 4: ACCUMULATE\n    letter = letter + newString\n# STEP 5: PROCESS RESULT\nprint(newString)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex9q",
                data: {
                  id: 11243,
                  base_course: "StudentCSP",
                  name: "ch9ex9q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex9q data-question_label="9.6.9">\n<div id=ch9ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nmessage = "meet me at midnight"\nstr = "abcdefghijklmnopqrstuvwxyz.\neStr = zyxwvutsrqponmlkjihgfedcba ."\nencodedMessage = message\nfor letter in message\n    pos = str.find(letter)\n    encodedMessage = encodedMessage + eStr[pos:pos+1]\nprint encodedMessage)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex10q",
                data: {
                  id: 11244,
                  base_course: "StudentCSP",
                  name: "ch9ex10q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex10q data-question_label="9.6.10">\n<div id=ch9ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nstr = "Th1s is a str1ng"\npos = str.find("1")\nwhile pos >= 0:\n    pos = str.find("1")\n    str = str[0:pos] + "i" + str[pos+1:len(str)]\nprint(str)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex11q",
                data: {
                  id: 11245,
                  base_course: "StudentCSP",
                  name: "ch9ex11q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex11q data-question_label="9.6.11">\n<div id=ch9ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATORS\nnewString = ""\n# STEP 2: GET DATA\nphrase = "Happy Birthday!"\n# STEP 3: LOOP THROUGH THE DATA\nfor letter in phrase:\n    # STEP 4: ACCUMULATE\n    newString = letter + newString\n# STEP 5: PROCESS RESULT\nprint(newString)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex12q",
                data: {
                  id: 11246,
                  base_course: "StudentCSP",
                  name: "ch9ex12q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex12q data-question_label="9.6.12">\n<div id=ch9ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nstr = "He recieved candy"\npos = str.find("received")\nwhile pos >= 0:\n    str = str[0:pos+len("recieved")] + "received" + str[pos:len(str)]\n    pos = str.find("recieved")\nprint(str)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex13q",
                data: {
                  id: 11247,
                  base_course: "StudentCSP",
                  name: "ch9ex13q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex13q data-question_label="9.6.13">\n<div id=ch9ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nnewString = ""\n# STEP 2: GET DATA\nphrase = "This is a test"\n# STEP 3: LOOP THROUGH THE DATA\nfor letter in phrase:\n    # STEP 4: ACCUMULATE\n    newString = letter + newString + letter\n# STEP 5: PROCESS RESULT\nprint(newString)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex14q",
                data: {
                  id: 11248,
                  base_course: "StudentCSP",
                  name: "ch9ex14q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex14q data-question_label="9.6.14">\n<div id=ch9ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nstr = "I like to eat. sleep. learn. and code!"\npos = str.\nwhile pos >= :\n    str = str[0:pos] +   + str[  :len(str)]\n    pos =\nprint(str)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex15q",
                data: {
                  id: 11249,
                  base_course: "StudentCSP",
                  name: "ch9ex15q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex15q data-question_label="9.6.15">\n<div id=ch9ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nmessage = "meet me at midnight"\nstr = "abcdefghijklmnopqrstuvwxyz. "\neStr = "zyxwvutsrqponmlkjihgfedcba ."\nencodedMessage = ""\nfor letter in message:\n    pos = str.find(letter)\n    encodedMessage = encodedMessage + eStr[pos:pos+1]\nprint(encodedMessage)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex16q",
                data: {
                  id: 11250,
                  base_course: "StudentCSP",
                  name: "ch9ex16q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex16q data-question_label="9.6.16">\n<div id=ch9ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nreverseString = ""\nmirrorString = " "\n# STEP 2: GET DATA\nphrase = "This is the string"\n# STEP 3: LOOP THROUGH THE DATA\nfor phrase in phrase:\n    # STEP 4: ACCUMULATE\n    reverseString = reverseString + letter\n    mirrorString = letter + letter + reverseString\n# STEP 5: PROCESS RESULT\nprint(reverseString)\nprint(mirrorString)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex17q",
                data: {
                  id: 11251,
                  base_course: "StudentCSP",
                  name: "ch9ex17q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex17q data-question_label="9.6.17">\n<div id=ch9ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nmessage = ""\nstr = "abcdefghijklmnopqrstuvwxyz. "\neStr = "zyxwvutsrqponmlkjihgfedcba ."\nencodedMessage = "nvvg.nv.zg.nrwmrtsg"\nfor letter in encodedMessage:\n    pos = eStr.find(letter)\n    message = message + str[pos:pos+1]\nprint(message)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex18q",
                data: {
                  id: 11252,
                  base_course: "StudentCSP",
                  name: "ch9ex18q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex18q data-question_label="9.6.18">\n<div id=ch9ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: INITIALIZE ACCUMULATOR\nnewString = ""\naString = ""\n# STEP 2: GET DATA\nphrase = "This is a mirror!"\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex19q",
                data: {
                  id: 11253,
                  base_course: "StudentCSP",
                  name: "ch9ex19q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex19q data-question_label="9.6.19">\n<div id=ch9ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch9ex20q",
                data: {
                  id: 11254,
                  base_course: "StudentCSP",
                  name: "ch9ex20q",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch9ex20q data-question_label="9.6.20">\n<div id=ch9ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch9ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nmessage = "meet me at midnight"\nstr = "abcdefghijklmnopqrstuvwxyz. "\neStr = "zyxwvutsrqponmlkjihgfedcba ."\nencodedMessage = ""\nfor letter in message:\n    pos = str.find(letter)\n    encodedMessage = encodedMessage + eStr[pos:pos+1]\nprint(encodedMessage)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatStrings/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "9.6.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "9. Chapter 9 - Repeating Steps with Strings/9.6 Chapter 9 Exercises",
                data: {
                  id: 11632,
                  base_course: "StudentCSP",
                  name: "9. Chapter 9 - Repeating Steps with Strings/9.6 Chapter 9 Exercises",
                  chapter: "CSPRepeatStrings",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPRepeatTurtles",
        data: {
          title: "10. Chapter 10 - Repeating Steps with Turtles",
          num: 10
        },
        children: [
          {
            key: "repeatturtles",
            data: {
              title: "10.1 Using Repetition with Turtles",
              num: 100,
              chapter: "CSPRepeatTurtles",
              subchapter: "repeatturtles",
              id: 11633,
              numQuestions: 6
            },
            children: [
              {
                key: "Turtle_For",
                data: {
                  id: 11302,
                  base_course: "StudentCSP",
                  name: "Turtle_For",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "repeatturtles",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_For data-question_label="10.1.1">\n<div id=Turtle_For_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_For_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Lines of code*doubleq*; 1: tR1-line1; 2: tR1-line2; 3: tR1-line3; 4: tR1-line4; 5: tR1-line5; 6: tR1-line6; 7: tR1-line7;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *        # use the turtle library\nspace = Screen()            # create a turtle space\nalisha = Turtle()           # create a turtle named alisha\nalisha.setheading(90)       # point due north\nfor sides in [1,2,3,4]:     # repeat the indented lines 4 times\n    alisha.forward(100)             # move forward by 100 units\n    alisha.right(90)                # turn by 90 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/repeatturtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.1.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10_1_1_Turtle_For_Q1",
                data: {
                  id: 11303,
                  base_course: "StudentCSP",
                  name: "10_1_1_Turtle_For_Q1",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "repeatturtles",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="10.1.2" data-multipleanswers="false"  id="10_1_1_Turtle_For_Q1"  style="visibility: hidden;">\n    <p>The numbers in the list <code class="docutils literal notranslate"><span class="pre">[1,2,3,4]</span></code> are not important.  It’s the fact that there are <em>four</em> items in the list that is important.  Only one of these choices does <em>not</em> make a square.  Which one?  (It’s not cheating to actually try each of them and run the program each time!)</p>\n\n    <li data-component="answer"  id="10_1_1_Turtle_For_Q1_opt_a">[0,1,2,3]</li><li data-component="feedback">This still has four sides -- they are just numbered differently.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="10_1_1_Turtle_For_Q1_opt_b">[0,1,2]</li><li data-component="feedback">This would only draw 3 side since there are only 3 items in the list.</li>\n    \n    <li data-component="answer"  id="10_1_1_Turtle_For_Q1_opt_c">[2,3,4,5]</li><li data-component="feedback">This still has four sides -- they are just numbered differently.</li>\n    \n    <li data-component="answer"  id="10_1_1_Turtle_For_Q1_opt_d">[1,2,3,4,5]</li><li data-component="feedback">This <i>will</i> draw a square. The turtle will just go on to trace the first side twice.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/repeatturtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.1.2",
                  optional: false,
                  description:
                    "The numbers in the list ``[1,2,3,4]`` are not important.  It's the fact that the",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10_1_2_Rectangle",
                data: {
                  id: 11304,
                  base_course: "StudentCSP",
                  name: "10_1_2_Rectangle",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "repeatturtles",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="10_1_2_Rectangle" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses a turtle to draw a rectangle as shown below, but the lines are mixed up.  The program should do all necessary set-up and create the turtle.  After that, iterate (loop) 2 times, and each time through the loop the turtle should go forward 175 pixels, turn right 90 degrees, go forward 150 pixels, and turn right 90 degrees. Drag the needed blocks of statements from the left column to the right column and put them in the right order with the correct indention.  There may be additional blocks that are not needed in a correct solution.   Click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/TurtleRect.png"><img alt="../_images/TurtleRect.png" class="align-center" src="../_images/TurtleRect.png" style="width: 150px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="10.1.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nfrom Turtle import * #paired\n---\nspace = Screen()\ncarlos = Turtle()\n---\n# repeat 2 times\nfor i in [1,2]:\n---\n# repeat 2 times\nfor i in [1,2]  #paired\n---\n    carlos.forward(175)\n---\n    carlos.Forward(175) #paired\n---\n    carlos.right(90)\n---\n    carlos.forward(150)\n    carlos.right(90)\n---\n    carlos.forward(150)\n    carlos.turn(90) #paired\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/repeatturtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.1.3",
                  optional: false,
                  description:
                    "The following program uses a turtle to draw a rectangle as shown below, but the ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_For_Range",
                data: {
                  id: 11305,
                  base_course: "StudentCSP",
                  name: "Turtle_For_Range",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "repeatturtles",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_For_Range data-question_label="10.1.4">\n<div id=Turtle_For_Range_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_For_Range_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line tour*doubleq*; 1: tR2-line1; 2: tR2-line2; 3: tR2-line3; 4: tR2-line4; 7: tR2-line7; 8: tR2-line8; 9: tR2-line9;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *          # use the turtle library\nspace = Screen()              # create a turtle space\nmarcus = Turtle()             # create a turtle named marcus\nmarcus.setheading(90)         # point due north\n\n# Now make a square\nfor sides in range(4):        # repeat the indented lines 4 times\n    marcus.forward(100)               # move forward by 100 units\n    marcus.right(90)                          # turn by 90 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/repeatturtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.1.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Print_Range",
                data: {
                  id: 11306,
                  base_course: "StudentCSP",
                  name: "Turtle_Print_Range",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "repeatturtles",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Print_Range data-question_label="10.1.5">\n<div id=Turtle_Print_Range_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Print_Range_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nprint(range(4))\nprint(range(10))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/repeatturtles",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.1.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10. Chapter 10 - Repeating Steps with Turtles/10.1 Using Repetition with Turtles",
                data: {
                  id: 11633,
                  base_course: "StudentCSP",
                  name: "10. Chapter 10 - Repeating Steps with Turtles/10.1 Using Repetition with Turtles",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "repeatturtles",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "turtleGeom",
            data: {
              title: "10.2 teacher note Teacher Note: Turtle Geometry",
              num: 200,
              chapter: "CSPRepeatTurtles",
              subchapter: "turtleGeom",
              id: 11634,
              numQuestions: 8
            },
            children: [
              {
                key: "Turtle_Triangle",
                data: {
                  id: 11310,
                  base_course: "StudentCSP",
                  name: "Turtle_Triangle",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "turtleGeom",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Triangle data-question_label="10.3.1">\n<div id=Turtle_Triangle_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Triangle_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Lines of code*doubleq*; 1: tR3-line1; 2: tR3-line2; 3: tR3-line3; 4: tR3-line4; 5: tR3-line5; 6: tR3-line6; 7: tR3-line7;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *        # use the turtle library\nspace = Screen()            # create a turtle space\navery = Turtle()            # create a turtle named avery\navery.setheading(90)        # point due north\nfor sides in range(3):      # repeat the indented lines 3 times\n    avery.forward(100)      # move forward by 100 units\n    avery.right(120)                # turn by 120 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/turtleGeom",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Pentagon",
                data: {
                  id: 11311,
                  base_course: "StudentCSP",
                  name: "Turtle_Pentagon",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "turtleGeom",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Pentagon data-question_label="10.3.2">\n<div id=Turtle_Pentagon_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Pentagon_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Lines of code*doubleq*; 1: tR3-line1; 2: tR3-line2; 3: tR4-line3; 4: tR4-line4; 5: tR4-line5; 6: tR4-line6; 7: tR4-line7;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *        # use the turtle library\nspace = Screen()            # create a turtle space\nwill = Turtle()             # create a turtle named will\nwill.setheading(90)         # point due north\nfor sides in range(5):      # repeat the indented lines 5 times\n    will.forward(100)       # move forward by 100 units\n    will.right(72)                  # turn by 72 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/turtleGeom",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.3.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Dodecagon",
                data: {
                  id: 11312,
                  base_course: "StudentCSP",
                  name: "Turtle_Dodecagon",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "turtleGeom",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Dodecagon data-question_label="10.3.3">\n<div id=Turtle_Dodecagon_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Dodecagon_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Lines of code*doubleq*; 1: tR3-line1; 2: tR3-line2; 3: tR5-line3; 4: tR5-line4; 5: tR5-line5; 6: tR5-line6; 7: tR5-line7;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *        # use the turtle library\nspace = Screen()            # create a turtle space\nmia = Turtle()              # create a turtle named maria\nmia.setheading(90)          # point due north\nfor sides in range(12):     # repeat the indented lines 12 times\n    mia.forward(40)         # move forward by 40 units\n    mia.right(??)           # change ?? to the amount to turn\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/turtleGeom",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.3.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10_2_1_Turtle_Dodecagon_Q1",
                data: {
                  id: 11313,
                  base_course: "StudentCSP",
                  name: "10_2_1_Turtle_Dodecagon_Q1",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "turtleGeom",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="10.3.4" data-multipleanswers="false"  id="10_2_1_Turtle_Dodecagon_Q1"  style="visibility: hidden;">\n    <p>How much does <code class="docutils literal notranslate"><span class="pre">mia</span></code> need turn in the program above to create a closed dodecagon (12-sided figure)?  Only one of these works.</p>\n\n    <li data-component="answer"  id="10_2_1_Turtle_Dodecagon_Q1_opt_a">15</li><li data-component="feedback">This one will not close</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="10_2_1_Turtle_Dodecagon_Q1_opt_b">30</li><li data-component="feedback">Exactly! 12 * 30 = 360</li>\n    \n    <li data-component="answer"  id="10_2_1_Turtle_Dodecagon_Q1_opt_c">12</li><li data-component="feedback">No, 12 * 12 is 144, which is not a multiple of 360</li>\n    \n    <li data-component="answer"  id="10_2_1_Turtle_Dodecagon_Q1_opt_d">90</li><li data-component="feedback">This one will generate a square, three times. 12 * 90 = 1080 = 360 * 3</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/turtleGeom",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.3.4",
                  optional: false,
                  description:
                    "How much does ``mia`` need turn in the program above to create a closed dodecago",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10_2_2_Triangle",
                data: {
                  id: 11314,
                  base_course: "StudentCSP",
                  name: "10_2_2_Triangle",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "turtleGeom",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="10_2_2_Triangle" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses a turtle to draw a triangle as shown below, but the lines are mixed up.  The program should do all necessary set-up and create the turtle.  After that, iterate (loop) 3 times, and each time through the loop the turtle should go forward 100 pixels, and then turn left 120 degrees. Drag the needed blocks of statements from the left column to the right column and put them in the right order with the correct indention.  There may be additional blocks that are not needed in a correct solution.  Click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/TurtleTriangle.png"><img alt="../_images/TurtleTriangle.png" class="align-center" src="../_images/TurtleTriangle.png" style="width: 150px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="10.3.5"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nspace = Screen()\n---\nspace = screen() #paired\n---\nmarie = Turtle()\n---\n# repeat 3 times\nfor i in range(3):\n---\n# repeat 3 times\nfor i in range(3) #paired\n---\n    marie.forward(100)\n---\n    marie.forward(100 #paired\n---\n    marie.left(120)\n---\n    marie.turn(120) #paired\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/turtleGeom",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.3.5",
                  optional: false,
                  description:
                    "The following program uses a turtle to draw a triangle as shown below, but the l",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10_2_3_WSq",
                data: {
                  id: 11315,
                  base_course: "StudentCSP",
                  name: "10_2_3_WSq",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "turtleGeom",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=10_2_3_WSq data-question_label="10.3.6">\n<div id=10_2_3_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="10_2_3_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/turtleGeom",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.3.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10_2_3_WSa",
                data: {
                  id: 11316,
                  base_course: "StudentCSP",
                  name: "10_2_3_WSa",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "turtleGeom",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=10_2_3_WSa data-question_label="10.3.7">\n<div id=10_2_3_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="10_2_3_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# DEFINE THE PROCEDURE\ndef polygon(turtle, sides):\n    degree = 360 / sides\n    for side in range(sides):\n        mia.forward(40)\n        mia.right(degree)\n\n# CREATE THE TURTLE WORLD\nfrom turtle import *\nspace = Screen()\nmia = Turtle()\nmia.setheading(90)\n\n# CALL THE PROCEDURE\npolygon(mia,5)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/turtleGeom",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.3.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10. Chapter 10 - Repeating Steps with Turtles/10.2 teacher note Teacher Note: Turtle Geometry",
                data: {
                  id: 11634,
                  base_course: "StudentCSP",
                  name: "10. Chapter 10 - Repeating Steps with Turtles/10.2 teacher note Teacher Note: Turtle Geometry",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "turtleGeom",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "patterns",
            data: {
              title: "10.4 Making Patterns within Patterns",
              num: 400,
              chapter: "CSPRepeatTurtles",
              subchapter: "patterns",
              id: 11635,
              numQuestions: 7
            },
            children: [
              {
                key: "Turtle_Spirograph1",
                data: {
                  id: 11296,
                  base_course: "StudentCSP",
                  name: "Turtle_Spirograph1",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "patterns",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Spirograph1 data-question_label="10.4.1">\n<div id=Turtle_Spirograph1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Spirograph1_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Lines of code*doubleq*; 1-2: tr3-1-line1-2; 3: tr3-1-line3; 4: tr3-1-line4; 5: tr3-1-line5; 6: tr3-1-line6; 8: tr3-1-line8; 9: tr3-1-line9; 10: tr3-1-line10; 13: tr3-1-line13; 14: tr3-1-line14; 15: tr3-1-line15;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *     # use the turtle library\nfrom sys import *        # use the system library\nsetExecutionLimit(50000) # let this take up to 50 seconds\nspace = Screen()         # create a turtle space\nzoe = Turtle()           # create a turtle named zoe\nzoe.setheading(90)       # point due north\n\nfor repeats in range(20):   # draw the pattern 20 times\n    zoe.forward(10)                 # Offset the shapes a bit\n    zoe.right(18)                   # And turn each one a bit\n\n    # This part makes a pentagon\n    for sides in range(5):    # repeat 5 times\n        zoe.forward(50)         # move forward by 50 unit\n        zoe.right(72)           # turn by 72 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/patterns",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Spirograph2",
                data: {
                  id: 11297,
                  base_course: "StudentCSP",
                  name: "Turtle_Spirograph2",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "patterns",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Spirograph2 data-question_label="10.4.2">\n<div id=Turtle_Spirograph2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Spirograph2_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Lines of code*doubleq*; 1-2: tr3-1-line1-2; 3: tr3-1-line3; 4: tr3-1-line4; 5: tr3-1-line5; 6: tr3-1-line6; 8: tr3-1-line8; 9: ts2-line9; 10: ts2-line10; 11: ts2-line11; 12: ts2-line12; 15: ts2-line15; 16: ts2-line16; 17: ts2-line17;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *     # use the turtle library\nfrom sys import *        # use the system library\nsetExecutionLimit(50000) # let this take up to 50 seconds\nspace = Screen()         # create a turtle space\nzoe = Turtle()           # create a turtle named zoe\nzoe.setheading(90)       # point zoe due north\n\nfor repeats in range(20):   # 20 times to draw the pattern\n    zoe.color("green")      # set the color to green\n    zoe.forward(10)           # Offset the shapes a bit\n    zoe.right(18)             # And turn each one a bit\n    zoe.color("red")          # set the color to red\n\n    # This part makes a pentagon\n    for sides in range(5):    # repeat 5 times\n        zoe.forward(50)         # move forward 50 units\n        zoe.right(72)           # turn by 72 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/patterns",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.4.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10_3_1_Turtle_Spiro",
                data: {
                  id: 11298,
                  base_course: "StudentCSP",
                  name: "10_3_1_Turtle_Spiro",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "patterns",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="10_3_1_Turtle_Spiro" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>There is a way of arranging the statements below such that the image shown below is created. The turtle will draw many triangles.  Move the needed pieces of the program from the left into the space on the right.  Indent lines as needed.</p>\n<a class="reference internal image-reference" href="../_images/BlueTrianglesRedCircle.png"><img alt="../_images/BlueTrianglesRedCircle.png" class="align-center" src="../_images/BlueTrianglesRedCircle.png" style="width: 150px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="10.4.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\nfrom sys import *\nsetExecutionLimit(50000)\n---\nwn = Screen()\nmateo = Turtle()\nmateo.setheading(90)\n---\nfor repeats in range(20):\n---\nfor repeats in range(20) #distractor\n---\n    mateo.color("red")\n    mateo.forward(10)\n    mateo.left(18)\n---\n    mateo.color("red")\n    mateo.forward(10)\n    mateo.left(12) #distractor\n---\n    for sides in range(3):\n    ---\n    for sides in range(4): #distractor\n---\n        mateo.color("blue")\n        mateo.forward(50)\n        mateo.right(120)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/patterns",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.4.3",
                  optional: false,
                  description:
                    "There is a way of arranging the statements below such that the image shown below",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10_3_2_Turtle_Spiro_Blue_Red",
                data: {
                  id: 11299,
                  base_course: "StudentCSP",
                  name: "10_3_2_Turtle_Spiro_Blue_Red",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "patterns",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="10_3_2_Turtle_Spiro_Blue_Red" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>There is a way of arranging the statements below such that the image shown below is created. The turtle will draw many triangles. Move the needed pieces of the program from the left into the space on the right.  Indent lines as needed.</p>\n<a class="reference internal image-reference" href="../_images/RedTrianglesBlueCircle.png"><img alt="../_images/RedTrianglesBlueCircle.png" class="align-center" src="../_images/RedTrianglesBlueCircle.png" style="width: 150px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="10.4.4"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\nfrom sys import *\nsetExecutionLimit(50000)\n---\nwn = Screen()\nmateo = Turtle()\nmateo.setheading(90)\n---\nfor repeats in range(20):\n---\nfor repeats in range(20) #distractor\n---\n    mateo.color("blue")\n    mateo.forward(10)\n    mateo.left(18)\n\n---\n    for sides in range(3):\n---\n    for sides in range(3) #distractor\n---\n        mateo.color("red")\n        mateo.forward(50)\n        mateo.right(120)\n---\n        mateo.color("red")\n        mateo.forward(50)\n        mateo.right(60) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/patterns",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.4.4",
                  optional: false,
                  description:
                    "There is a way of arranging the statements below such that the image shown below",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Nested_Error1",
                data: {
                  id: 11300,
                  base_course: "StudentCSP",
                  name: "Turtle_Nested_Error1",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "patterns",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Nested_Error1 data-question_label="10.4.5">\n<div id=Turtle_Nested_Error1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Nested_Error1_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *    # use the turtle library\nfrom sys import *\nsetExecutionLimit(50000)\n\nwn = Screen\nmateo = Turtle()\nmateo.setheading(90)\n\nfor repeats in range(20)\n    mateo.color("red")\n    mateo.forward(10)\n    mateo.left(18)\n\n    for sides in range(3):\n        mateo.Color("blue")\n        mateo.forward(50)\n        mateo.Right(120)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/patterns",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.4.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Nested_Error2",
                data: {
                  id: 11301,
                  base_course: "StudentCSP",
                  name: "Turtle_Nested_Error2",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "patterns",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Nested_Error2 data-question_label="10.4.6">\n<div id=Turtle_Nested_Error2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Nested_Error2_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *    # use the turtle library\nfrom sys import *\nsetExecutionLimit(50000)\n\nwn = screen()\nmateo = Turtle\nmateo.setheading(90)\n\nfor repeats in range(20):\n    mateo.color("red")\n    mateo.forward(10)\n    mateo.left(18)\n\n    for sides in range(3)\n        mateo.color("blue")\n        mateo.Forward(50)\n        mateo.right(120)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/patterns",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.4.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10. Chapter 10 - Repeating Steps with Turtles/10.4 Making Patterns within Patterns",
                data: {
                  id: 11635,
                  base_course: "StudentCSP",
                  name: "10. Chapter 10 - Repeating Steps with Turtles/10.4 Making Patterns within Patterns",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "patterns",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "stamp",
            data: {
              title: "10.5 The Turtle Stamp Procedure",
              num: 500,
              chapter: "CSPRepeatTurtles",
              subchapter: "stamp",
              id: 11636,
              numQuestions: 4
            },
            children: [
              {
                key: "stampex",
                data: {
                  id: 11307,
                  base_course: "StudentCSP",
                  name: "stampex",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "stamp",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=stampex data-question_label="10.5.1">\n<div id=stampex_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="stampex_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Line-by-line Tour*doubleq*; 1: stamp1-line1; 2: stamp1-line2; 3: stamp1-line3; 4: stamp1-line4; 5: stamp1-line5; 7: stamp1-line7; 8: stamp1-line8; 9: stamp1-line9; 10: stamp1-line10; 11: stamp1-line11; 12: stamp1-line12;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\ntess = Turtle()\ntess.color("blue")\ntess.shape("turtle")\n\nprint(range(5, 60, 2))\ntess.penup()                  # ask tess to pick up her pen\nfor size in range(5, 60, 2):  # start with size = 5 and grow by 2\n    tess.stamp()                # leave an impression on the canvas\n    tess.forward(size)          # move tess along\n    tess.right(24)              # and turn her\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/stamp",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.5.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10_4_1_turtle-stamp",
                data: {
                  id: 11308,
                  base_course: "StudentCSP",
                  name: "10_4_1_turtle-stamp",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "stamp",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="10_4_1_turtle-stamp" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses the stamp method to create a line of turtle shapes as shown below, but the lines are mixed up.  The program should do all necessary set-up, create the turtle, set the shape to “turtle”, and pick up the pen.  Then the turtle should repeat the following three times: go forward 50 pixels and leave a copy of the turtle at the current position. Drag the needed blocks of statements from the left column to the right column and put them in the right order with the correct indention.  Click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/Turtle3Stamp.png"><img alt="../_images/Turtle3Stamp.png" class="align-center" src="../_images/Turtle3Stamp.png" style="width: 150px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="10.5.2"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\nspace = Screen()\nspace.setup(400,400)\n---\nnikea = Turtle()\n---\nnikea.shape("turtle")\n---\nnikea.shape(turtle) #paired\n---\nnikea.penup()\n---\nnikea.penUp() #paired\n---\nfor size in range(3):\n---\nfor size in range(3)  #paired\n---\n    nikea.forward(50)\n---\n    nikea.stamp()\n---\n    nikea.stamp #paired\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/stamp",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.5.2",
                  optional: false,
                  description:
                    "The following program uses the stamp method to create a line of turtle shapes as",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10_4_2_turtle-circle",
                data: {
                  id: 11309,
                  base_course: "StudentCSP",
                  name: "10_4_2_turtle-circle",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "stamp",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="10_4_2_turtle-circle" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses the stamp method to create a circle of turtle shapes as shown below, but the lines are mixed up.  The program should do all necessary set-up, create the turtle, set the shape to “turtle”, and pick up the pen.  Then the turtle should repeat the following ten times: go forward 50 pixels, leave a copy of the turtle at the current position, reverse for 50 pixels, and then turn right 36 degrees.  Drag the needed blocks of statements from the left column to the right column and put them in the right order with the correct indention.  Click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/TurtleCircle.png"><img alt="../_images/TurtleCircle.png" class="align-center" src="../_images/TurtleCircle.png" style="width: 150px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="10.5.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\nspace = Screen()\njose = Turtle()\n---\njose.shape("turtle")\njose.penup()\n---\njose.shape("turtle")\njose.penup #paired\n---\nfor size in range(10):\n---\nfor size in range(10) #paired\n---\n    jose.forward(50)\n---\n    jose.stamp()\n---\n    jose.Stamp() #paired\n---\n    jose.forward(-50)\n---\n    jose.forward(-25) #paired\n---\n    jose.right(36)\n---\n    jose.right(20) #paired\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/stamp",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.5.3",
                  optional: false,
                  description:
                    "The following program uses the stamp method to create a circle of turtle shapes ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10. Chapter 10 - Repeating Steps with Turtles/10.5 The Turtle Stamp Procedure",
                data: {
                  id: 11636,
                  base_course: "StudentCSP",
                  name: "10. Chapter 10 - Repeating Steps with Turtles/10.5 The Turtle Stamp Procedure",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "stamp",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "RepeatTurtlesPractice",
            data: {
              title: "10.6 More Turtle Stamp Practice",
              num: 600,
              chapter: "CSPRepeatTurtles",
              subchapter: "RepeatTurtlesPractice",
              id: 11637,
              numQuestions: 4
            },
            children: [
              {
                key: "10_5_1_turtle-x",
                data: {
                  id: 11273,
                  base_course: "StudentCSP",
                  name: "10_5_1_turtle-x",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "RepeatTurtlesPractice",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="10_5_1_turtle-x" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses the stamp method to create an X of turtle shapes as shown below, but the lines are mixed up.  The program should do all necessary set-up, create the turtle, set the shape to “turtle”, and pick up the pen. Stamp the blue turtles before you stamp the green ones. Drag the needed blocks of statements from the left column to the right column and put them in the right order with the correct indention.  Click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/TurtleStampX.png"><img alt="../_images/TurtleStampX.png" class="align-center" src="../_images/TurtleStampX.png" style="width: 150px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="10.6.1"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\n---\nspace = Screen()\n---\nspace = screen() #distractor\n---\nnick = Turtle()\nnick.shape("turtle")\n---\nnick.penup()\n---\nnick.penUp() #distractor\n---\nnick.goto(-150,-150)\nnick.left(45)\n---\nnick.goto(-150,-150)\nnick.left(90) #distractor\n---\nnick.color("blue")\nfor num in range(15):\n    nick.stamp()\n    nick.forward(30)\n---\nnick.goto(150,-150)\nnick.left(90)\n---\nnick.goto(150,-150)\nnick.left(45) #distractor\n---\nnick.color("green")\nfor num in range(14):\n---\n    nick.stamp()\n    nick.forward(30)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/RepeatTurtlesPractice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.6.1",
                  optional: false,
                  description:
                    "The following program uses the stamp method to create an X of turtle shapes as s",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10_5_2_turtle-squares",
                data: {
                  id: 11274,
                  base_course: "StudentCSP",
                  name: "10_5_2_turtle-squares",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "RepeatTurtlesPractice",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="10_5_2_turtle-squares" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program uses the stamp method to create two squares of turtle shapes as shown below, but the lines are mixed up.  The program should do all necessary set-up, create the turtle, set the shape to “turtle”, and pick up the pen.  Draw the blue square before you draw the green one. Drag the needed blocks of statements from the left column to the right column and put them in the right order with the correct indention.  Click on <em>Check Me</em> to see if you are right. You will be told if any of the lines are in the wrong order or are the wrong blocks.</p>\n<a class="reference internal image-reference" href="../_images/TurtleStampDoubleSquare.png"><img alt="../_images/TurtleStampDoubleSquare.png" class="align-center" src="../_images/TurtleStampDoubleSquare.png" style="width: 150px;" /></a>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="10.6.2"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\nspace = Screen()\n---\nnick = Turtle()\nnick.shape("turtle")\n---\nnick = Turtle()\nnick.shape("Turtle") #distractor\n---\nnick.penup()\n---\nnick.goto(-150,-150)\nnick.left(90)\n---\nnick.goto(-150,-150)\nnick.right(90) #distractor\n---\nnick.color("blue")\nfor count in range(4):\n    for num in range(5):\n        nick.stamp()\n        nick.forward(30)\n    nick.right(90)\n---\nnick.goto(-120,-120)\nnick.color("green")\nfor count in range(4):\n---\n    for num in range(3):\n---\n    for num in range(2): #distractor\n---\n        nick.stamp()\n        nick.forward(30)\n---\n    nick.right(90)\n---\n    nick.left(90) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/RepeatTurtlesPractice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.6.2",
                  optional: false,
                  description:
                    "The following program uses the stamp method to create two squares of turtle shap",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Turtle_Stamp_Open",
                data: {
                  id: 11275,
                  base_course: "StudentCSP",
                  name: "Turtle_Stamp_Open",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "RepeatTurtlesPractice",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Turtle_Stamp_Open data-question_label="10.6.3">\n<div id=Turtle_Stamp_Open_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Turtle_Stamp_Open_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/RepeatTurtlesPractice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.6.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10. Chapter 10 - Repeating Steps with Turtles/10.6 More Turtle Stamp Practice",
                data: {
                  id: 11637,
                  base_course: "StudentCSP",
                  name: "10. Chapter 10 - Repeating Steps with Turtles/10.6 More Turtle Stamp Practice",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "RepeatTurtlesPractice",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "10.7 Chapter 10 - Summary",
              num: 700,
              chapter: "CSPRepeatTurtles",
              subchapter: "summary",
              id: 11638,
              numQuestions: 1
            },
            children: [
              {
                key: "10. Chapter 10 - Repeating Steps with Turtles/10.7 Chapter 10 - Summary",
                data: {
                  id: 11638,
                  base_course: "StudentCSP",
                  name: "10. Chapter 10 - Repeating Steps with Turtles/10.7 Chapter 10 - Summary",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "10.8 Chapter 10 Exercises",
              num: 800,
              chapter: "CSPRepeatTurtles",
              subchapter: "Exercises",
              id: 11639,
              numQuestions: 21
            },
            children: [
              {
                key: "ch10ex1q",
                data: {
                  id: 11276,
                  base_course: "StudentCSP",
                  name: "ch10ex1q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex1q data-question_label="10.8.1">\n<div id=ch10ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import          # use the turtle library\nspace = screen()                # create a turtle space\nalisha = Turtle                 # create a turtle named alisha\nalisha.setheading(90)   # point due north\nfor sides in [1,2,3]:   # repeat the indented lines 4 times\n    alisha.forward(100)         # move forward by 100 units\n    alisha.right(90)            # turn by 90 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex2q",
                data: {
                  id: 11277,
                  base_course: "StudentCSP",
                  name: "ch10ex2q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex2q data-question_label="10.8.2">\n<div id=ch10ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *      # use the turtle library\nspace = Screen()          # create a turtle space\nalisha = Turtle()         # create a turtle named alisha\nalisha.setheading(90)     # point due north\nfor sides in [1,2,3,4]:   # repeat the indented lines 4 times\n    alisha.forward(100)\n    alisha.right(90)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex3q",
                data: {
                  id: 11278,
                  base_course: "StudentCSP",
                  name: "ch10ex3q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex3q data-question_label="10.8.3">\n<div id=ch10ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\n    space = Screen()\ncarlos = Turtle()\n\n# repeat 2 times\nfor i in [1,2]:\n    carlos.forward(175)\n    carlos.right(90)\ncarlos.forward(150)\ncarlos.right(90)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex4q",
                data: {
                  id: 11279,
                  base_course: "StudentCSP",
                  name: "ch10ex4q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex4q data-question_label="10.8.4">\n<div id=ch10ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\nliz = Turtle()\nliz.setheading(90)\nfor sides in range(9)\n    liz.forward(45)\nliz.right(50)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex5q",
                data: {
                  id: 11280,
                  base_course: "StudentCSP",
                  name: "ch10ex5q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex5q data-question_label="10.8.5">\n<div id=ch10ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *    # use the turtle library\nspace = Screen()        # create a turtle space\nwill = Turtle()                 # create a turtle named will\nwill.setheading(90)     # point due north\nfor sides in range(x):  # repeat the indented lines\n    will.forward(100)           # move forward by 100 units\n    will.right(y)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex6q",
                data: {
                  id: 11281,
                  base_course: "StudentCSP",
                  name: "ch10ex6q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex6q data-question_label="10.8.6">\n<div id=ch10ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\nmia = Turtle()\nmia.setheading(90)\nfor sides in\n    mia.forward(40)\n    mia.\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex7q",
                data: {
                  id: 11282,
                  base_course: "StudentCSP",
                  name: "ch10ex7q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex7q data-question_label="10.8.7">\n<div id=ch10ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom\nspace =\nmarie =\n\n# repeat\nfor i in range():\n    marie.forward(100)\n    marie.left()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex8q",
                data: {
                  id: 11283,
                  base_course: "StudentCSP",
                  name: "ch10ex8q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex8q data-question_label="10.8.8">\n<div id=ch10ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\nhi = Turtle()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex9q",
                data: {
                  id: 11284,
                  base_course: "StudentCSP",
                  name: "ch10ex9q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex9q data-question_label="10.8.9">\n<div id=ch10ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *     # use the turtle library\nfrom sys import *        # use the system library\nsetExecutionLimit(50000) # let this take up to 50 seconds\nspace = Screen()         # create a turtle space\nzoe = Turtle()           # create a turtle named zoe\nzoe.setheading(90)       # point due north\n\nfor repeats in range(20):   # draw the pattern 20 times\n    zoe.forward(10)             # Offset the shapes a bit\n    zoe.right(18)               # And turn each one a bit\n\n# This part makes a pentagon\nfor sides in range(5):    # repeat 5 times\n    zoe.forward(50)         # move forward by 50 unit\n    zoe.right(72)           # turn by 72 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex10q",
                data: {
                  id: 11285,
                  base_course: "StudentCSP",
                  name: "ch10ex10q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex10q data-question_label="10.8.10">\n<div id=ch10ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef square(aTurtle):\n    for sides in range(4):\n        aTurtle.forward(100)\n        aTurtle.right(90)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex11q",
                data: {
                  id: 11286,
                  base_course: "StudentCSP",
                  name: "ch10ex11q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex11q data-question_label="10.8.11">\n<div id=ch10ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\njose = Turtle()\njose.shape("turtle")\njose.\nfor size in range():\n    jose.forward(50)\n    jose.stamp()\n    jose.forward()\n    jose.right(36)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex12q",
                data: {
                  id: 11287,
                  base_course: "StudentCSP",
                  name: "ch10ex12q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex12q data-question_label="10.8.12">\n<div id=ch10ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nfrom sys import *              # use the system library\nsetExecutionLimit(50000)      # let this take up to 50 seconds\nspace = Screen()\nt = x\nt.setheading(90)\nfor repeats in range(x):\n    t.color("blue")\n    t.forward(10)\n    t.left(18)\n    for sides in range(x):\n        t.color("green")\n        t.forward(x)\n        t.right(x)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex13q",
                data: {
                  id: 11288,
                  base_course: "StudentCSP",
                  name: "ch10ex13q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex13q data-question_label="10.8.13">\n<div id=ch10ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *    # use the turtle library\nspace = Screen()                # create a turtle space\nalisha = Turtle()               # create a turtle named alisha\nalisha.setheading(90)   # point due north\nfor sides in [1,2,3,4]: # repeat the indented lines 4 times\n    alisha.forward(100)         # move forward by 100 units\n    alisha.right(90)            # turn by 90 degrees\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex14q",
                data: {
                  id: 11289,
                  base_course: "StudentCSP",
                  name: "ch10ex14q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex14q data-question_label="10.8.14">\n<div id=ch10ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\ntess = Turtle()\ntess.color("blue")\ntess.shape("turtle")\n\n\nfor size in range(5, 60, 2):\n\n    tess.forward(size)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex15q",
                data: {
                  id: 11290,
                  base_course: "StudentCSP",
                  name: "ch10ex15q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex15q data-question_label="10.8.15">\n<div id=ch10ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\ncarlos = Turtle()\n\n# repeat 2 times\nfor i in [1,2]:\n    carlos.forward(175)\n    carlos.right(90)\n    carlos.forward(150)\n    carlos.right(90)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex16q",
                data: {
                  id: 11291,
                  base_course: "StudentCSP",
                  name: "ch10ex16q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex16q data-question_label="10.8.16">\n<div id=ch10ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nfrom sys import *               # use the system library\nsetExecutionLimit(50000)        # let this take up to 50 seconds\nspace = Screen()\nzoe = Turtle()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex17q",
                data: {
                  id: 11292,
                  base_course: "StudentCSP",
                  name: "ch10ex17q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex17q data-question_label="10.8.17">\n<div id=ch10ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex18q",
                data: {
                  id: 11293,
                  base_course: "StudentCSP",
                  name: "ch10ex18q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex18q data-question_label="10.8.18">\n<div id=ch10ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex19q",
                data: {
                  id: 11294,
                  base_course: "StudentCSP",
                  name: "ch10ex19q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex19q data-question_label="10.8.19">\n<div id=ch10ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch10ex20q",
                data: {
                  id: 11295,
                  base_course: "StudentCSP",
                  name: "ch10ex20q",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch10ex20q data-question_label="10.8.20">\n<div id=ch10ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch10ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatTurtles/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "10.8.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "10. Chapter 10 - Repeating Steps with Turtles/10.8 Chapter 10 Exercises",
                data: {
                  id: 11639,
                  base_course: "StudentCSP",
                  name: "10. Chapter 10 - Repeating Steps with Turtles/10.8 Chapter 10 Exercises",
                  chapter: "CSPRepeatTurtles",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPRepeatImages",
        data: {
          title: "11. Chapter 11 - Repeating Steps with Images",
          num: 11
        },
        children: [
          {
            key: "repeatimages",
            data: {
              title: "11.1 Using Repetition with Images",
              num: 100,
              chapter: "CSPRepeatImages",
              subchapter: "repeatimages",
              id: 11640,
              numQuestions: 2
            },
            children: [
              {
                key: "Image_Remove_Red",
                data: {
                  id: 11186,
                  base_course: "StudentCSP",
                  name: "Image_Remove_Red",
                  chapter: "CSPRepeatImages",
                  subchapter: "repeatimages",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Image_Remove_Red data-question_label="11.1.1">\n<div id=Image_Remove_Red_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Image_Remove_Red_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important Lines Tour*doubleq*; 1: timg3-line1; 4: timg3-line4; 7-8: timg3-line7-8; 11: timg3-line11; 14: timg3-line14; 17-18: timg3-line17-18;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("arch.jpg")\n\n# LOOP THROUGH THE PIXELS\npixelList = img.getPixels()\nfor p in pixelList:\n\n    # SET THE RED TO 0\n    p.setRed(0)\n\n    # UPDATE THE IMAGE\n    img.updatePixel(p)\n\n# SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/repeatimages",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.1.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11. Chapter 11 - Repeating Steps with Images/11.1 Using Repetition with Images",
                data: {
                  id: 11640,
                  base_course: "StudentCSP",
                  name: "11. Chapter 11 - Repeating Steps with Images/11.1 Using Repetition with Images",
                  chapter: "CSPRepeatImages",
                  subchapter: "repeatimages",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "imageAbstractions",
            data: {
              title: "11.3 Understanding Image Representation",
              num: 300,
              chapter: "CSPRepeatImages",
              subchapter: "imageAbstractions",
              id: 11641,
              numQuestions: 1
            },
            children: [
              {
                key: "11. Chapter 11 - Repeating Steps with Images/11.3 Understanding Image Representation",
                data: {
                  id: 11641,
                  base_course: "StudentCSP",
                  name: "11. Chapter 11 - Repeating Steps with Images/11.3 Understanding Image Representation",
                  chapter: "CSPRepeatImages",
                  subchapter: "imageAbstractions",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "pattern",
            data: {
              title: "11.4 A Pattern for Image Processing",
              num: 400,
              chapter: "CSPRepeatImages",
              subchapter: "pattern",
              id: 11642,
              numQuestions: 2
            },
            children: [
              {
                key: "Image_Pattern",
                data: {
                  id: 11185,
                  base_course: "StudentCSP",
                  name: "Image_Pattern",
                  chapter: "CSPRepeatImages",
                  subchapter: "pattern",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Image_Pattern data-question_label="11.4.1">\n<div id=Image_Pattern_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Image_Pattern_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important Lines Tour*doubleq*; 2: timg4-line2; 5: timg4-line5; 8-9: timg4-line8-9; 12-14: timg4-line12-14; 17-19: timg4-line17-19; 22: timg4-line22; 25-26: timg4-line25-26;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("beach.jpg")\n\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels()\nfor p in pixels:\n\n    # STEP 4: GET THE DATA\n    r = p.getRed()\n    g = p.getGreen()\n    b = p.getBlue()\n\n    # STEP 5: MODIFY THE COLOR\n    p.setRed(g)\n    p.setGreen(b)\n    p.setBlue(r)\n\n    # STEP 6: UPDATE THE IMAGE\n    img.updatePixel(p)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/pattern",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11. Chapter 11 - Repeating Steps with Images/11.4 A Pattern for Image Processing",
                data: {
                  id: 11642,
                  base_course: "StudentCSP",
                  name: "11. Chapter 11 - Repeating Steps with Images/11.4 A Pattern for Image Processing",
                  chapter: "CSPRepeatImages",
                  subchapter: "pattern",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "changeColor",
            data: {
              title: "11.5 Changing Step 5: Increasing and decreasing color values",
              num: 500,
              chapter: "CSPRepeatImages",
              subchapter: "changeColor",
              id: 11643,
              numQuestions: 6
            },
            children: [
              {
                key: "Image_Decrease_Red",
                data: {
                  id: 11165,
                  base_course: "StudentCSP",
                  name: "Image_Decrease_Red",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeColor",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Image_Decrease_Red data-question_label="11.5.1">\n<div id=Image_Decrease_Red_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Image_Decrease_Red_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important Lines Tour*doubleq*; 2: timg5-line2; 5: timg5-line5; 8-9: timg5-line8-9; 12: timg5-line12; 15: timg5-line15; 18: timg5-line18; 21-22: timg5-line21-22;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("beach.jpg")\n\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels();\nfor p in pixels:\n\n    # STEP 4: GET THE DATA\n    r = p.getRed()\n\n    # STEP 5: MODIFY THE COLOR\n    p.setRed(r * 0.5);\n\n    # STEP 6: UPDATE THE IMAGE\n    img.updatePixel(p)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeColor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.5.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Image_Increase_Red",
                data: {
                  id: 11166,
                  base_course: "StudentCSP",
                  name: "Image_Increase_Red",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeColor",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Image_Increase_Red data-question_label="11.5.2">\n<div id=Image_Increase_Red_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Image_Increase_Red_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important Lines Tour*doubleq*; 2: timg5-line2; 5: timg5-line5; 8-9: timg5-line8-9; 12: timg5-line12; 15: timg6-line15; 18: timg5-line18; 21-22: timg5-line21-22;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("beach.jpg")\n\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels()\nfor p in pixels:\n\n    # STEP 4: GET THE DATA\n    r = p.getRed()\n\n    # STEP 5: MODIFY THE COLOR\n    p.setRed(r * 1.5)\n\n    # STEP 6: UPDATE THE IMAGE\n    img.updatePixel(p)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeColor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.5.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Image_Decrease_GB",
                data: {
                  id: 11167,
                  base_course: "StudentCSP",
                  name: "Image_Decrease_GB",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeColor",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="Image_Decrease_GB" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>Another way to get a similar effect to increasing the red, is to decrease the green and blue.  Figure out how to do that in the program above and then use that information to drag the code blocks below from the left to the right in the correct order with the correct indention.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="11.5.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from image import *\n---\nimg = Image("beach.jpg")\n---\npixels = img.getPixels()\nfor p in pixels:\n---\n    g = p.getGreen()\n    b = p.getBlue()\n---\n    p.setGreen(g * 0.75)\n    p.setBlue(b * 0.75)\n---\n    img.updatePixel(p)\n---\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeColor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.5.3",
                  optional: false,
                  description:
                    "Another way to get a similar effect to increasing the red, is to decrease the gr",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11_4_1_WSq",
                data: {
                  id: 11168,
                  base_course: "StudentCSP",
                  name: "11_4_1_WSq",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeColor",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=11_4_1_WSq data-question_label="11.5.4">\n<div id=11_4_1_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="11_4_1_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeColor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.5.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11_4_1_WSa",
                data: {
                  id: 11169,
                  base_course: "StudentCSP",
                  name: "11_4_1_WSa",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeColor",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=11_4_1_WSa data-question_label="11.5.5">\n<div id=11_4_1_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="11_4_1_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("puppy.jpg")\n\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels()\nfor p in pixels:\n\n    # STEP 4: GET THE DATA\n    r = p.getRed()\n    g = p.getGreen()\n    b = p.getBlue()\n\n    # STEP 5: MODIFY THE COLOR\n    p.setRed(r * .5)\n    p.setGreen(g * 1.5)\n    p.setBlue(b * 1.5)\n\n    # STEP 6: UPDATE THE IMAGE\n    img.updatePixel(p)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeColor",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.5.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11. Chapter 11 - Repeating Steps with Images/11.5 Changing Step 5: Increasing and decreasing color values",
                data: {
                  id: 11643,
                  base_course: "StudentCSP",
                  name: "11. Chapter 11 - Repeating Steps with Images/11.5 Changing Step 5: Increasing and decreasing color values",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeColor",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "changeColorLoc",
            data: {
              title: "11.6 Changing Step 6: Changing where we put the colors",
              num: 600,
              chapter: "CSPRepeatImages",
              subchapter: "changeColorLoc",
              id: 11644,
              numQuestions: 5
            },
            children: [
              {
                key: "Nested_Loop_Clear_Red",
                data: {
                  id: 11170,
                  base_course: "StudentCSP",
                  name: "Nested_Loop_Clear_Red",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeColorLoc",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Nested_Loop_Clear_Red data-question_label="11.6.1">\n<div id=Nested_Loop_Clear_Red_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Nested_Loop_Clear_Red_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important Lines Tour*doubleq*; 2: nli1-line2; 5: nli1-line5; 8: nli1-line8; 9: nli1-line9; 12: nli1-line12; 15: nli1-line15; 18: nli1-line18; 21-22: nli1-line21-22;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("vangogh.jpg")\n\n# STEP 3: LOOP THROUGH THE PIXELS\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight()):\n\n        # STEP 4: GET THE DATA\n        p = img.getPixel(x, y)\n\n        # STEP 5: MODIFY THE COLOR\n        p.setRed(0)\n\n        # STEP 6: MODIFY THE IMAGE\n        img.updatePixel(p)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeColorLoc",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.6.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Image_Location_Change",
                data: {
                  id: 11171,
                  base_course: "StudentCSP",
                  name: "Image_Location_Change",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeColorLoc",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Image_Location_Change data-question_label="11.6.2">\n<div id=Image_Location_Change_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Image_Location_Change_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important Lines Tour*doubleq*; 2: nli2-line2; 5: nli2-line5; 8-9: nli2-line8-9; 12: nli2-line12; 15: nli2-line15; 18-19: nli2-line18-19;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("vangogh.jpg")\n\n# STEP 3: LOOP THROUGH THE PIXELS\nlast = min(img.getWidth(), img.getHeight())\nfor x in range(last):\n    for y in range(last):\n\n        # STEP 4: GET THE DATA\n        p = img.getPixel(x, y)\n\n        # STEP 6: MODIFY THE IMAGE\n        img.setPixel(y, x, p)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeColorLoc",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.6.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11_5_1_Image_YX_Q1",
                data: {
                  id: 11172,
                  base_course: "StudentCSP",
                  name: "11_5_1_Image_YX_Q1",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeColorLoc",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="11.6.3" data-multipleanswers="false"  id="11_5_1_Image_YX_Q1"  style="visibility: hidden;">\n    <p>What happened when we copied the pixel color from (x,y) to (y,x)?</p>\n\n    <li data-component="answer"  id="11_5_1_Image_YX_Q1_opt_a">We rotated the image 90 degrees to the left and flipped it over.</li><li data-component="feedback">This would be true if we created a new image and set the values in the new image from the old pixel values.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="11_5_1_Image_YX_Q1_opt_b">We mirrored the image around a diagonal line from the top left to the bottom right.</li><li data-component="feedback">This is true since we copy the pixel colors from the current image to the new location.</li>\n    \n    <li data-component="answer"  id="11_5_1_Image_YX_Q1_opt_c">We flipped the image horizontally.</li><li data-component="feedback">The pixels would be copied to the same row.</li>\n    \n    <li data-component="answer"  id="11_5_1_Image_YX_Q1_opt_d">No change.</li><li data-component="feedback">Compare this image to the original vangogh.jpg image.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeColorLoc",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.6.3",
                  optional: false,
                  description: "What happened when we copied the pixel color from (x,y) to (y,x)?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11_5_2_Image_Flip_Both",
                data: {
                  id: 11173,
                  base_course: "StudentCSP",
                  name: "11_5_2_Image_Flip_Both",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeColorLoc",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=11_5_2_Image_Flip_Both data-question_label="11.6.4">\n<div id=11_5_2_Image_Flip_Both_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="11_5_2_Image_Flip_Both_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important Lines Tour*doubleq*; 8-9: nli3-line8-9; 12: nli3-line12; 15: nli3-line15;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("vangogh.jpg")\n\n# STEP 3: SELECT THE DATA\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight()):\n\n        # STEP 4: GET THE DATA\n        p = img.getPixel(x, y)\n\n        # STEP 6: CHANGE THE IMAGE\n        img.setPixel(img.getWidth() - 1 - x,\n                     img.getHeight() - 1 - y,\n                     p)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeColorLoc",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.6.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11. Chapter 11 - Repeating Steps with Images/11.6 Changing Step 6: Changing where we put the colors",
                data: {
                  id: 11644,
                  base_course: "StudentCSP",
                  name: "11. Chapter 11 - Repeating Steps with Images/11.6 Changing Step 6: Changing where we put the colors",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeColorLoc",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "changeData",
            data: {
              title: "11.7 Changing Step 3: Changing which data we use",
              num: 700,
              chapter: "CSPRepeatImages",
              subchapter: "changeData",
              id: 11645,
              numQuestions: 7
            },
            children: [
              {
                key: "Image_Negate_Quarter",
                data: {
                  id: 11174,
                  base_course: "StudentCSP",
                  name: "Image_Negate_Quarter",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeData",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Image_Negate_Quarter data-question_label="11.7.1">\n<div id=Image_Negate_Quarter_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Image_Negate_Quarter_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important Lines Tour*doubleq*; 1-2: imgR2-line1-2; 4-5: imgR2-line4-5; 8: imgR6-line8; 9: imgR6-line9; 10: imgR6-line10; 11: imgR6-line11; 13-17: imgR6-line13-17; 19-20: imgR6-line19-20; 22-23: imgR6-line22-23; 25-27: imgR6-line25-27;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("vangogh.jpg")\n\n# STEP 3: SELECT THE DATA\nhalfWidth = (int) (img.getWidth() / 2)\nhalfHeight = (int) (img.getHeight() / 2)\nfor x in range(halfWidth):\n    for y in range(halfHeight):\n\n        # STEP 4: GET THE DATA\n        p = img.getPixel(x, y)\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # STEP 5: CREATE THE COLOR\n        newPixel = Pixel(255-r, 255-g, 255-b)\n\n        # STEP 6: CHANGE THE PIXEL\n        img.setPixel(x, y, newPixel)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeData",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.7.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Image_Every_Other",
                data: {
                  id: 11175,
                  base_course: "StudentCSP",
                  name: "Image_Every_Other",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeData",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Image_Every_Other data-question_label="11.7.2">\n<div id=Image_Every_Other_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Image_Every_Other_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important Lines Tour*doubleq*; 1-2: imgR2-line1-2; 4-5: imgR2-line4-5; 8: imgR7-line8; 9: imgR7-line9;  11-13: imgR7-line11-13; 15-16: imgR7-line15-16; 18-19: imgR7-line18-19; 21-23: imgR7-line21-23; 25-27:*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("vangogh.jpg")\n\n# STEP 3: SELECT THE DATA\nfor x in range(0,img.getWidth(),2):\n    for y in range(0,img.getHeight(),2):\n\n        # STEP 4: GET THE DATA\n        p = img.getPixel(x, y)\n        r = p.getRed()\n\n        # STEP 5: CREATE THE COLOR\n        newPixel = Pixel(r, 255, 0)\n\n        # STEP 6: CHANGE THE PIXEL\n        img.setPixel(x, y, newPixel)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeData",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.7.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Image_Copy_Left",
                data: {
                  id: 11176,
                  base_course: "StudentCSP",
                  name: "Image_Copy_Left",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeData",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Image_Copy_Left data-question_label="11.7.3">\n<div id=Image_Copy_Left_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Image_Copy_Left_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Important Lines Tour*doubleq*; 1-2: imgR2-line1-2; 4-5: imgR2-line4-5; 8: imgR8-line8; 9: imgR8-line9; 10: imgR8-line10; 12-16: imgR8-line12-16; 18-19: imgR8-line18-19; 21-22: imgR8-line21-22; 24-26: imgR8-line24-26;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("vangogh.jpg")\n\n# STEP 3: SELECT THE DATA\nhalfway = (int) (img.getWidth() / 2)\nfor x in range(halfway):\n    for y in range(img.getHeight()):\n\n        # STEP 4: GET THE DATA\n        p = img.getPixel(x, y)\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # STEP 5: CREATE THE COLOR\n        newPixel = Pixel(r, g, b)\n\n        # STEP 6: CHANGE THE PIXEL\n        img.setPixel(halfway + x, y, newPixel)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeData",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.7.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11_6_1_Image_Mirror_Q1",
                data: {
                  id: 11177,
                  base_course: "StudentCSP",
                  name: "11_6_1_Image_Mirror_Q1",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeData",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="11.7.4" data-multipleanswers="false"  id="11_6_1_Image_Mirror_Q1"  style="visibility: hidden;">\n    <p>Try it: How would you mirror the image from left-to-right around a vertical line in the middle of the picture?  Try changing line 22 to these.  If you get it right it will look like the women is nose to nose with herself.</p>\n\n    <li data-component="answer"  id="11_6_1_Image_Mirror_Q1_opt_a">img.setPixel(halfway - x, y, newPixel)</li><li data-component="feedback">It does mirror, but only the left half</li>\n    \n    <li data-component="answer"  id="11_6_1_Image_Mirror_Q1_opt_b">img.setPixel(x - halfway, y, newPixel)</li><li data-component="feedback">This creates two copies of the left half</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="11_6_1_Image_Mirror_Q1_opt_c">img.setPixel(img.getWidth() - 1 - x, y, newPixel)</li><li data-component="feedback">Yes, it looks like the woman is kissing herself</li>\n    \n    <li data-component="answer"  id="11_6_1_Image_Mirror_Q1_opt_d">img.setPixel(x - img.getWidth(), y, newPixel)</li><li data-component="feedback">No, no effect.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeData",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.7.4",
                  optional: false,
                  description:
                    "Try it: How would you mirror the image from left-to-right around a vertical line",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11_6_1_WSq",
                data: {
                  id: 11178,
                  base_course: "StudentCSP",
                  name: "11_6_1_WSq",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeData",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=11_6_1_WSq data-question_label="11.7.5">\n<div id=11_6_1_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="11_6_1_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeData",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.7.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11_6_1_WSa",
                data: {
                  id: 11179,
                  base_course: "StudentCSP",
                  name: "11_6_1_WSa",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeData",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=11_6_1_WSa data-question_label="11.7.6">\n<div id=11_6_1_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="11_6_1_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# USE THE IMAGE LIBRARY\nfrom image import *\n\n# PICK THE IMAGE\nimg = Image("vangogh.jpg")\n\n# SELECT THE DATA\nhalfwayWidth = (int) (img.getWidth() / 2)\nhalfwayHeight = (int) (img.getHeight() / 2)\nfor x in range(halfwayWidth):\n    for y in range(halfwayHeight):\n\n        # GET THE DATA\n        p = img.getPixel(x, y)\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # CREATE THE COLOR\n        newPixel = Pixel(r, g, b)\n\n        # CHANGE THE PIXEL\n        img.setPixel(halfwayWidth + x, halfwayHeight + y, newPixel)\n\n# SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/changeData",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.7.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11. Chapter 11 - Repeating Steps with Images/11.7 Changing Step 3: Changing which data we use",
                data: {
                  id: 11645,
                  base_course: "StudentCSP",
                  name: "11. Chapter 11 - Repeating Steps with Images/11.7 Changing Step 3: Changing which data we use",
                  chapter: "CSPRepeatImages",
                  subchapter: "changeData",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "11.8 Chapter 11 - Summary",
              num: 800,
              chapter: "CSPRepeatImages",
              subchapter: "summary",
              id: 11646,
              numQuestions: 1
            },
            children: [
              {
                key: "11. Chapter 11 - Repeating Steps with Images/11.8 Chapter 11 - Summary",
                data: {
                  id: 11646,
                  base_course: "StudentCSP",
                  name: "11. Chapter 11 - Repeating Steps with Images/11.8 Chapter 11 - Summary",
                  chapter: "CSPRepeatImages",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "11.9 Chapter 11 Exercises",
              num: 900,
              chapter: "CSPRepeatImages",
              subchapter: "Exercises",
              id: 11647,
              numQuestions: 21
            },
            children: [
              {
                key: "ch11ex1q",
                data: {
                  id: 11145,
                  base_course: "StudentCSP",
                  name: "ch11ex1q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex1q data-question_label="11.9.1">\n<div id=ch11ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("gal2.jpg"\n\n# LOOP THROUGH THE PIXELS\npixelList = img.getPixels()\nfor p in pixelList:\n\n    # SET THE RED TO 0\n    p.setRed()\n\n    # UPDATE THE IMAGE\n    img.updatePixel()\n\n# SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex2q",
                data: {
                  id: 11146,
                  base_course: "StudentCSP",
                  name: "ch11ex2q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex2q data-question_label="11.9.2">\n<div id=ch11ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# USE THE IMAGE LIBRARY\nfrom image import *\n# PICK THE IMAGE\nimg = Image("puppy.jpg")\n# LOOP THROUGH THE PIXELS\npixelList = img.getPixels()\nfor p in pixelList:\n    # SET THE COLOR\n    p.setRed(0)\n    # UPDATE THE PIXEL\n    img.updatePixel(p)\n\n# SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex3q",
                data: {
                  id: 11147,
                  base_course: "StudentCSP",
                  name: "ch11ex3q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex3q data-question_label="11.9.3">\n<div id=ch11ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("beach.jpg")\n\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels()\nfor p in pixels:\n\n# STEP 4: GET THE DATA\nr = p.getRed()\ng = p.getGreen()\nb = p.getBlue()\n\n# STEP 5: MODIFY THE COLOR\np.setRed(g)\np.setGreen(b)\np.setBlue(r)\n\n# STEP 6: UPDATE THE IMAGE\nimg.updatePixel(p)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex4q",
                data: {
                  id: 11148,
                  base_course: "StudentCSP",
                  name: "ch11ex4q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex4q data-question_label="11.9.4">\n<div id=ch11ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n# STEP 2: PICK THE IMAGE\nimg = Image("kitten")\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels()\nfor p in pixel:\n    # STEP 4: GET THE DATA\n    r = p.getred()\n    b = p.getGreen()\n    g = p.getBlue()\n    # STEP 5: MODIFY THE COLOR\n    p.setRed(g)\n    p.setGreen(b)\n    p.setBlue(r)\n    # STEP 6: UPDATE THE IMAGE\n    img.updatePixel(p)\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex5q",
                data: {
                  id: 11149,
                  base_course: "StudentCSP",
                  name: "ch11ex5q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex5q data-question_label="11.9.5">\n<div id=ch11ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("beach.jpg")\n\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels();\nfor p\n\n    # STEP 4: GET THE DATA\n    r = p.\n\n    # STEP 5: MODIFY THE COLOR\n    p.setRed(r * 0.5);\n\n    # STEP 6: UPDATE THE IMAGE\n    img.\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex6q",
                data: {
                  id: 11150,
                  base_course: "StudentCSP",
                  name: "ch11ex6q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex6q data-question_label="11.9.6">\n<div id=ch11ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n# STEP 2: PICK THE IMAGE\nimg = Image("swan.jpg")\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels()\nfor\n    # STEP 4: GET THE DATA\n    b = p.get\n    g = p.get\n            r = p.get\n    # STEP 5: MODIFY THE COLOR\n    p.set\n    # STEP 6: UPDATE THE IMAGE\n    img.updatePixel(p)\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex7q",
                data: {
                  id: 11151,
                  base_course: "StudentCSP",
                  name: "ch11ex7q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex7q data-question_label="11.9.7">\n<div id=ch11ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n    # STEP 2: PICK THE IMAGE\n    img = Image("beach.jpg")\n\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels();\nfor p in pixels:\n\n    # STEP 4: GET THE DATA\n    r = p.getRed()\n\n# STEP 5: MODIFY THE COLOR\np.setRed(r * 1.5);\n\n    # STEP 6: UPDATE THE IMAGE\n    img.updatePixel(p)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex8q",
                data: {
                  id: 11152,
                  base_course: "StudentCSP",
                  name: "ch11ex8q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex8q data-question_label="11.9.8">\n<div id=ch11ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\n        from image import *\n# STEP 2: PICK THE IMAGE\nimg = Image("motorcycle.jpg")\n\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels()\nfor p in pixels:\n    # STEP 4: GET THE DATA\n    r = p.getRed()\n    b = p.getBlue()\n    g = p.getGreen()\n    # STEP 5: MODIFY THE COLOR\n    p.setRed(0)\n    p.setGreen(0)\n    p.setBlue(0)\n    # STEP 6: UPDATE THE IMAGE\n    img.updatePixel(p)\n    # STEP 7: SHOW THE RESULT\n    win = ImageWin(img.getWidth(),img.getHeight())\n    img.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex9q",
                data: {
                  id: 11153,
                  base_course: "StudentCSP",
                  name: "ch11ex9q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex9q data-question_label="11.9.9">\n<div id=ch11ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("beach.jpg")\n\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels();\nfor p in pixels:\n\n    p.setGreen(g * 0)\n    p.setBlue(b * 0)\n    g = p.getGreen()\n    b = p.getBlue()\n\n    # STEP 6: UPDATE THE IMAGE\n    img.updatePixel(p)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex10q",
                data: {
                  id: 11154,
                  base_course: "StudentCSP",
                  name: "ch11ex10q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex10q data-question_label="11.9.10">\n<div id=ch11ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\n        from image import *\n# STEP 2: PICK THE IMAGE\nimg = Image("baby.jpg")\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels()\nfor p in pixels:\n    # STEP 4: GET THE DATA\n    r = p.getRed()\n    b = p.getBlue()\n    g = p.getGreen()\n    # STEP 5: MODIFY THE COLOR\n    p.setRed(r/2)\n    p.setGreen(g/2)\n    p.setBlue(b/2)\n    # STEP 6: UPDATE THE IMAGE\n    img.updatePixel(p)\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex11q",
                data: {
                  id: 11155,
                  base_course: "StudentCSP",
                  name: "ch11ex11q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex11q data-question_label="11.9.11">\n<div id=ch11ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("gal2.jpg")\n\n# LOOP THROUGH THE PIXELS\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight()):\n\n        # GET THE DATA\n        p = img.getPixel(x, y)\n\n        # SET THE RED TO 0\n        p.setRed(0)\n\n        # UPDATE THE IMAGE\n        img.updatePixel(p)\n\n# SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex12q",
                data: {
                  id: 11156,
                  base_course: "StudentCSP",
                  name: "ch11ex12q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex12q data-question_label="11.9.12">\n<div id=ch11ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n# CREATE AN IMAGE FROM A FILE\nimg = Image("vangogh.jpg")\n# LOOP THROUGH THE PIXELS\nfor x in range(int(img.getWidth())):\n    for y in range(int(img.getHeight())):\n        # GET THE DATA\n        p = img.getPixel(x, y)\n        # SET THE PIXEL\n        p.setRed(0)\n        # UPDATE THE PIXEL\n        img.updatePixel(p)\n# SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex13q",
                data: {
                  id: 11157,
                  base_course: "StudentCSP",
                  name: "ch11ex13q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex13q data-question_label="11.9.13">\n<div id=ch11ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("gal2.jpg")\n\n# LOOP THROUGH THE PIXELS\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight()):\n\n        # GET THE DATA\n        p = img.getPixel(x, y)\n\n        # SET THE RED TO 0\n        p.setRed(0)\n\n        # UPDATE THE IMAGE\n        img.updatePixel(p)\n\n# SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex14q",
                data: {
                  id: 11158,
                  base_course: "StudentCSP",
                  name: "ch11ex14q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex14q data-question_label="11.9.14">\n<div id=ch11ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n# CREATE AN IMAGE FROM A FILE\n        img = Image("guy1.jpg")\n# LOOP THROUGH THE PIXELS\n        for x in range(int(img.getWidth())):\n            for y in range(img.getHeight()):\n    # GET THE DATA\n            p = img.getPixel(x, y)\n    # SET THE PIXEL\n            p.setGreen(0)\n            p.setBlue(0)\n    # UPDATE THE IMAGE\n            img.updatePixel(p)\n# SHOW THE RESULT\n    win = ImageWin(img.getWidth(),img.getHeight())\n    img.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex15q",
                data: {
                  id: 11159,
                  base_course: "StudentCSP",
                  name: "ch11ex15q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex15q data-question_label="11.9.15">\n<div id=ch11ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# STEP 1: USE THE IMAGE LIBRARY\nfrom image import *\n\n# STEP 2: PICK THE IMAGE\nimg = Image("beach.jpg")\n\n# STEP 3: LOOP THROUGH THE PIXELS\npixels = img.getPixels();\nfor p in pixels:\n\n    # STEP 5: MODIFY THE COLOR\n    p.setRed(0)\n    p.setBlue(0)\n\n    # STEP 6: UPDATE THE IMAGE\n    img.updatePixel(p)\n\n# STEP 7: SHOW THE RESULT\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex16q",
                data: {
                  id: 11160,
                  base_course: "StudentCSP",
                  name: "ch11ex16q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex16q data-question_label="11.9.16">\n<div id=ch11ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex17q",
                data: {
                  id: 11161,
                  base_course: "StudentCSP",
                  name: "ch11ex17q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex17q data-question_label="11.9.17">\n<div id=ch11ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex18q",
                data: {
                  id: 11162,
                  base_course: "StudentCSP",
                  name: "ch11ex18q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex18q data-question_label="11.9.18">\n<div id=ch11ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex19q",
                data: {
                  id: 11163,
                  base_course: "StudentCSP",
                  name: "ch11ex19q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex19q data-question_label="11.9.19">\n<div id=ch11ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch11ex20q",
                data: {
                  id: 11164,
                  base_course: "StudentCSP",
                  name: "ch11ex20q",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch11ex20q data-question_label="11.9.20">\n<div id=ch11ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch11ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPRepeatImages/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.9.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11. Chapter 11 - Repeating Steps with Images/11.9 Chapter 11 Exercises",
                data: {
                  id: 11647,
                  base_course: "StudentCSP",
                  name: "11. Chapter 11 - Repeating Steps with Images/11.9 Chapter 11 Exercises",
                  chapter: "CSPRepeatImages",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam9t11",
            data: {
              title: "11.10 Exam Questions for Chapters 9 to 11",
              num: 1000,
              chapter: "CSPRepeatImages",
              subchapter: "exam9t11",
              id: 11648,
              numQuestions: 6
            },
            children: [
              {
                key: "e9t11_1",
                data: {
                  id: 11180,
                  base_course: "StudentCSP",
                  name: "e9t11_1",
                  chapter: "CSPRepeatImages",
                  subchapter: "exam9t11",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="11.10.2" data-multipleanswers="false"  id="e9t11_1"  style="visibility: hidden;">\n    <p>Given the following code, what will be printed?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">newString</span> <span class="o">=</span> <span class="s2">&quot;!&quot;</span>\n<span class="n">phrase</span> <span class="o">=</span> <span class="s2">&quot;We&#39;re off to see the Wizard!&quot;</span>\n<span class="k">for</span> <span class="n">letter</span> <span class="ow">in</span> <span class="n">phrase</span><span class="p">:</span>\n    <span class="n">newString</span> <span class="o">=</span> <span class="n">letter</span> <span class="o">+</span> <span class="n">newString</span> <span class="o">+</span> <span class="n">letter</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">newString</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e9t11_1_opt_a">!We\'re off to see the Wizard!</li><li data-component="feedback">This would be true if it was newString = newString + letter</li>\n    \n    <li data-component="answer"  id="e9t11_1_opt_b">!draziW eht ees ot ffo er\'eW!</li><li data-component="feedback">This would be true if it was newString = letter + newString</li>\n    \n    <li data-component="answer"  id="e9t11_1_opt_c">We\'re off to see the Wizard!!draziW eht ees ot ffo er\'eW</li><li data-component="feedback">This would be true if it was newString = letter + newString in the loop and you printed phrase + newString</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e9t11_1_opt_d">!draziW eht ees ot ffo er\'eW!We\'re off to see the Wizard!</li><li data-component="feedback">This code adds each letter to the front and back of the string which will print the reverse of the string ! and the string.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPRepeatImages/exam9t11",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.10.2",
                  optional: false,
                  description: "Given the following code, what will be printed?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e9t11_2",
                data: {
                  id: 11181,
                  base_course: "StudentCSP",
                  name: "e9t11_2",
                  chapter: "CSPRepeatImages",
                  subchapter: "exam9t11",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="11.10.3" data-multipleanswers="false"  id="e9t11_2"  style="visibility: hidden;">\n    <p>If we would like to draw a decagon (10 sided figure), what should the values of X and Y be in the code below?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>       <span class="c1"># use the turtle library</span>\n<span class="n">space</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>           <span class="c1"># create a turtle space</span>\n<span class="n">zoe</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>             <span class="c1"># create a turtle named zoe</span>\n<span class="n">zoe</span><span class="o">.</span><span class="n">setheading</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>         <span class="c1"># point due north</span>\n<span class="k">for</span> <span class="n">sides</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">X</span><span class="p">):</span>     <span class="c1"># repeat the indented lines X times</span>\n    <span class="n">zoe</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>        <span class="c1"># move forward by 50 units</span>\n    <span class="n">zoe</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="n">Y</span><span class="p">)</span>           <span class="c1"># And turn each one by Y</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e9t11_2_opt_a">X = 5 and Y = 72</li><li data-component="feedback">This would be true if you were trying to draw a 5 sided figure.</li>\n    \n    <li data-component="answer"  id="e9t11_2_opt_b">X = 36 and Y = 10</li><li data-component="feedback">This would be true if you were trying to draw a 36 sided figure.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e9t11_2_opt_c">X = 10 and Y = 36</li><li data-component="feedback">The value of X is 10 to make a 10 sided figure and the amount to turn is 360 / 10 = 36.</li>\n    \n    <li data-component="answer"  id="e9t11_2_opt_d">X = 12 and Y = 30</li><li data-component="feedback">This would be true if you were trying to draw a 12 sided figure.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPRepeatImages/exam9t11",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.10.3",
                  optional: false,
                  description:
                    "If we would like to draw a decagon (10 sided figure), what should the values of ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e9t11_3",
                data: {
                  id: 11182,
                  base_course: "StudentCSP",
                  name: "e9t11_3",
                  chapter: "CSPRepeatImages",
                  subchapter: "exam9t11",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="11.10.4" data-multipleanswers="false"  id="e9t11_3"  style="visibility: hidden;">\n    <p>Which of the following statements is false?</p>\n\n    <li data-component="answer"  id="e9t11_3_opt_a">Pictures are made up of little pixels, laid out on an (x,y) grid.</li><li data-component="feedback">Pictures are grids of pixels.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e9t11_3_opt_b">Each pixel is stored as a number between 0 and 255.</li><li data-component="feedback">A pixel has a color and the color has a red, green, and blue part.</li>\n    \n    <li data-component="answer"  id="e9t11_3_opt_c">Each color has a red part, a green part, and a blue part.</li><li data-component="feedback">One way to describe a color is a combination of red, green, and blue.</li>\n    \n    <li data-component="answer"  id="e9t11_3_opt_d">Each color part is actually a number between 0 and 255.</li><li data-component="feedback">On a computer the value for red, green, and blue is between 0 and 255.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPRepeatImages/exam9t11",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.10.4",
                  optional: false,
                  description: "Which of the following statements is false?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e9t11_4",
                data: {
                  id: 11183,
                  base_course: "StudentCSP",
                  name: "e9t11_4",
                  chapter: "CSPRepeatImages",
                  subchapter: "exam9t11",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="11.10.5" data-multipleanswers="false"  id="e9t11_4"  style="visibility: hidden;">\n    <p>What does the following code do?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">image</span> <span class="kn">import</span> <span class="o">*</span>\n<span class="n">img</span> <span class="o">=</span> <span class="n">Image</span><span class="p">(</span><span class="s2">&quot;beach.jpg&quot;</span><span class="p">)</span>\n<span class="n">pixels</span> <span class="o">=</span> <span class="n">img</span><span class="o">.</span><span class="n">getPixels</span><span class="p">()</span>\n<span class="k">for</span> <span class="n">p</span> <span class="ow">in</span> <span class="n">pixels</span><span class="p">:</span>\n    <span class="n">g</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">getGreen</span><span class="p">()</span>\n    <span class="n">b</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">getBlue</span><span class="p">()</span>\n    <span class="n">p</span><span class="o">.</span><span class="n">setGreen</span><span class="p">(</span><span class="n">b</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>\n    <span class="n">p</span><span class="o">.</span><span class="n">setBlue</span><span class="p">(</span><span class="n">g</span> <span class="o">/</span> <span class="mi">2</span><span class="p">)</span>\n    <span class="n">img</span><span class="o">.</span><span class="n">updatePixel</span><span class="p">(</span><span class="n">p</span><span class="p">)</span>\n<span class="n">win</span> <span class="o">=</span> <span class="n">ImageWin</span><span class="p">(</span><span class="n">img</span><span class="o">.</span><span class="n">getWidth</span><span class="p">(),</span> <span class="n">img</span><span class="o">.</span><span class="n">getHeight</span><span class="p">())</span>\n<span class="n">img</span><span class="o">.</span><span class="n">draw</span><span class="p">(</span><span class="n">win</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e9t11_4_opt_a">Double the blue and green values in the picture</li><li data-component="feedback">This would be true if it was p.setGreen(g * 2) and p.setBlue(b * 2)</li>\n    \n    <li data-component="answer"  id="e9t11_4_opt_b">Halve the blue and green values in the picture</li><li data-component="feedback">This would be true if it was p.setGreen(g / 2) and p.setBlue(b / 2)</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e9t11_4_opt_c">Set the green values to half the original blue and the blue to half the original green</li><li data-component="feedback">This sets the green values to half the original blue values and the blue values to half the original green values.</li>\n    \n    <li data-component="answer"  id="e9t11_4_opt_d">Set the green to double half the original blue and the blue to double the original green</li><li data-component="feedback">This would be true if it was p.setGreen(b * 2) and p.setBlue(g * 2)</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPRepeatImages/exam9t11",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.10.5",
                  optional: false,
                  description: "What does the following code do?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e9t11_5",
                data: {
                  id: 11184,
                  base_course: "StudentCSP",
                  name: "e9t11_5",
                  chapter: "CSPRepeatImages",
                  subchapter: "exam9t11",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="11.10.6" data-multipleanswers="false"  id="e9t11_5"  style="visibility: hidden;">\n    <p>What would the following draw?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>\n<span class="n">space</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>\n<span class="n">zoe</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>\n<span class="n">zoe</span><span class="o">.</span><span class="n">shape</span><span class="p">(</span><span class="s2">&quot;turtle&quot;</span><span class="p">)</span>\n<span class="n">zoe</span><span class="o">.</span><span class="n">penup</span><span class="p">()</span>\n<span class="k">for</span> <span class="n">size</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span>\n    <span class="n">zoe</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">50</span><span class="p">)</span>\n    <span class="n">zoe</span><span class="o">.</span><span class="n">stamp</span><span class="p">()</span>\n    <span class="n">zoe</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="o">-</span><span class="mi">50</span><span class="p">)</span>\n    <span class="n">zoe</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">72</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="e9t11_5_opt_a"><img src="../_static/turtleStamp5.png" alt="5 turtles facing out in a circle with one in the center facing east" width="300"></li><li data-component="feedback">This stamps 5 turtles on a circle with a radius of 25.</li>\n    \n    <li data-component="answer"  id="e9t11_5_opt_b"><img src="../_static/turtleStamp5WithLines.png" alt="5 turtles facing out in a circle with one in the center facing east with lines from the center to each turtle on the circle" width="300"></li><li data-component="feedback">This would be true if the line zoe.penup() was removed.</li>\n    \n    <li data-component="answer"  id="e9t11_5_opt_c"><img src="../_static/turtleStamp10.png" alt="10 turtles facing out in a circle with one in the center facing east" width="300"></li><li data-component="feedback">This would be true if it was range(10) and right(36)</li>\n    \n    <li data-component="answer"  id="e9t11_5_opt_d"><img src="../_static/turtleStamp10WithLines.png" alt="10 turtles facing out in a circle with one in the center facing east with lines from the center to each turtle on the circle" width="300"></li><li data-component="feedback">This would be true if it was range(10) and right(36) and if the line zoe.penup() was removed.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPRepeatImages/exam9t11",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "11.10.6",
                  optional: false,
                  description: "What would the following draw?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "11. Chapter 11 - Repeating Steps with Images/11.10 Exam Questions for Chapters 9 to 11",
                data: {
                  id: 11648,
                  base_course: "StudentCSP",
                  name: "11. Chapter 11 - Repeating Steps with Images/11.10 Exam Questions for Chapters 9 to 11",
                  chapter: "CSPRepeatImages",
                  subchapter: "exam9t11",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPIntroDecisions",
        data: {
          title: "12. Chapter 12 - A Computer can Make Decisions",
          num: 12
        },
        children: [
          {
            key: "decisions",
            data: {
              title: "12.1 Making Decisions",
              num: 100,
              chapter: "CSPIntroDecisions",
              subchapter: "decisions",
              id: 11649,
              numQuestions: 1
            },
            children: [
              {
                key: "12. Chapter 12 - A Computer can Make Decisions/12.1 Making Decisions",
                data: {
                  id: 11649,
                  base_course: "StudentCSP",
                  name: "12. Chapter 12 - A Computer can Make Decisions/12.1 Making Decisions",
                  chapter: "CSPIntroDecisions",
                  subchapter: "decisions",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "if",
            data: {
              title: "12.2 The if Statement",
              num: 200,
              chapter: "CSPIntroDecisions",
              subchapter: "if",
              id: 11650,
              numQuestions: 3
            },
            children: [
              {
                key: "If_Structure",
                data: {
                  id: 10863,
                  base_course: "StudentCSP",
                  name: "If_Structure",
                  chapter: "CSPIntroDecisions",
                  subchapter: "if",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=If_Structure data-question_label="12.2.1">\n<div id=If_Structure_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="If_Structure_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: c0-line1; 2-3: c0-line2-3; 4: c0-line4;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 0\nif x < 3:\n    print ("x is less than 3")\nprint ("All done")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/if",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.2.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_2_1_If_Structure",
                data: {
                  id: 10864,
                  base_course: "StudentCSP",
                  name: "12_2_1_If_Structure",
                  chapter: "CSPIntroDecisions",
                  subchapter: "if",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="12.2.2" data-multipleanswers="false"  id="12_2_1_If_Structure"  style="visibility: hidden;">\n    <blockquote>\n<div><p>Given the code below, what line executes after line 2 executes?</p>\n<div class="highlight-python notranslate"><div class="highlight"><pre><span></span><span class="linenos">1</span><span class="n">x</span> <span class="o">=</span> <span class="mi">4</span>\n<span class="linenos">2</span><span class="k">if</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">:</span>\n<span class="linenos">3</span>    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;x is less than 3&quot;</span><span class="p">)</span>\n<span class="linenos">4</span><span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;All done&quot;</span><span class="p">)</span>\n</pre></div>\n</div>\n</div></blockquote>\n\n    <li data-component="answer"  id="12_2_1_If_Structure_opt_a">line 3</li><li data-component="feedback">Line 3 will only execute when x is less than 3.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="12_2_1_If_Structure_opt_b">line 4</li><li data-component="feedback">Execution continues at the next statement beyond the block following the <code>if</code> when the logical expression is false.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroDecisions/if",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.2.2",
                  optional: false,
                  description: " Given the code below, what line executes after line 2 executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12. Chapter 12 - A Computer can Make Decisions/12.2 The if Statement",
                data: {
                  id: 11650,
                  base_course: "StudentCSP",
                  name: "12. Chapter 12 - A Computer can Make Decisions/12.2 The if Statement",
                  chapter: "CSPIntroDecisions",
                  subchapter: "if",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "multiple",
            data: {
              title: "12.3 Using Multiple if statements",
              num: 300,
              chapter: "CSPIntroDecisions",
              subchapter: "multiple",
              id: 11651,
              numQuestions: 7
            },
            children: [
              {
                key: "Price_If",
                data: {
                  id: 10871,
                  base_course: "StudentCSP",
                  name: "Price_If",
                  chapter: "CSPIntroDecisions",
                  subchapter: "multiple",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Price_If data-question_label="12.3.1">\n<div id=Price_If_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Price_If_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: c1-line1; 2-3: c1-line2-3; 4-5: c1-line4-5; 6: c1-line6; 7-9: c3f-line7-9;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nif weight < 1:\n    price = 1.45\nif weight >= 1:\n    price = 1.15\ntotal = weight * price\nprint(weight)\nprint(price)\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/multiple",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Price_If_Default",
                data: {
                  id: 10872,
                  base_course: "StudentCSP",
                  name: "Price_If_Default",
                  chapter: "CSPIntroDecisions",
                  subchapter: "multiple",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Price_If_Default data-question_label="12.3.2">\n<div id=Price_If_Default_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Price_If_Default_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: c2-line1; 2: c2-line2; 3-4: c2-line3-4; 5: c2-line5; 6-8: c3f-line7-9;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nprice = 1.45\nif weight >= 1:\n    price = 1.15\ntotal = weight * price\nprint(weight)\nprint(price)\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/multiple",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.3.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_3_1_Price_If_Equivalent",
                data: {
                  id: 10873,
                  base_course: "StudentCSP",
                  name: "12_3_1_Price_If_Equivalent",
                  chapter: "CSPIntroDecisions",
                  subchapter: "multiple",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="12.3.3" data-multipleanswers="false"  id="12_3_1_Price_If_Equivalent"  style="visibility: hidden;">\n    <blockquote>\n<div><p>Are there values for weight that make the two programs above print different results when the same weight is used in both programs?</p>\n</div></blockquote>\n\n    <li data-component="answer" data-correct=\'yes\' id="12_3_1_Price_If_Equivalent_opt_a">No, they\'re always the same.</li><li data-component="feedback">The end result is the same.</li>\n    \n    <li data-component="answer"  id="12_3_1_Price_If_Equivalent_opt_b">Yes, they\'re different if the weight is exactly 1 pound.</li><li data-component="feedback">If the weight is exactly 1 pound the price will be 1.15 in both programs.</li>\n    \n    <li data-component="answer"  id="12_3_1_Price_If_Equivalent_opt_c">Yes, they\'re different if the weight is under 1 pound.</li><li data-component="feedback">If the weight is under 1 pound the price will be 1.45 in both programs.</li>\n    \n    <li data-component="answer"  id="12_3_1_Price_If_Equivalent_opt_d">Yes, they\'re different if the weight is over 1 pound.</li><li data-component="feedback">If the weight is over 1 pound the price will be 1.15 in both programs.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/multiple",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.3.3",
                  optional: false,
                  description:
                    " Are there values for weight that make the two programs above print different re",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_3_2_Price_By_Weight",
                data: {
                  id: 10874,
                  base_course: "StudentCSP",
                  name: "12_3_2_Price_By_Weight",
                  chapter: "CSPIntroDecisions",
                  subchapter: "multiple",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="12_3_2_Price_By_Weight" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program should calculate the total price, but the lines are mixed up.   The price is based on the weight.  Items that weigh less than 2 pounds should cost 1.5.  Items that weigh more than 2 pounds should cost 1.3.   Drag the blocks from the left and place them in the correct order on the right.  Be sure to also indent correctly! Click on &lt;i&gt;Check Me&lt;/i&gt; to see if you are right. You will be told if any of the lines are in the wrong order or have the wrong indention.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="12.3.4"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        weight = 0.5\nnumItems = 5\nif weight < 2:\n---\n    price = 1.50\n---\nif weight >= 2:\n---\n    price = 1.30\n---\ntotal = weight * price\n---\nprint(weight)\nprint(price)\nprint(total)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroDecisions/multiple",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.3.4",
                  optional: false,
                  description:
                    "The following program should calculate the total price, but the lines are mixed ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_3_3_WSq",
                data: {
                  id: 10875,
                  base_course: "StudentCSP",
                  name: "12_3_3_WSq",
                  chapter: "CSPIntroDecisions",
                  subchapter: "multiple",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=12_3_3_WSq data-question_label="12.3.5">\n<div id=12_3_3_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="12_3_3_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/multiple",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.3.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12. Chapter 12 - A Computer can Make Decisions/12.3 Using Multiple if statements",
                data: {
                  id: 11651,
                  base_course: "StudentCSP",
                  name: "12. Chapter 12 - A Computer can Make Decisions/12.3 Using Multiple if statements",
                  chapter: "CSPIntroDecisions",
                  subchapter: "multiple",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_3_3_WSa",
                data: {
                  id: 23163,
                  base_course: "StudentCSP",
                  name: "12_3_3_WSa",
                  chapter: "CSPIntroDecisions",
                  subchapter: "multiple",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=12_3_3_WSa data-question_label="12.3.6">\n<div id=12_3_3_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="12_3_3_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndistance = 14\n# SET CONDITIONS\nif distance <= 12:\n    rate = 2.00\nif distance > 12:\n    rate = 1.50\n# CALCULATE TRIP COST\ntotal = distance * rate\nprint("Total cost of trip: " + str(total))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/multiple",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.3.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "logicalEx",
            data: {
              title: "12.4 Logical Expressions",
              num: 400,
              chapter: "CSPIntroDecisions",
              subchapter: "logicalEx",
              id: 11652,
              numQuestions: 1
            },
            children: [
              {
                key: "12. Chapter 12 - A Computer can Make Decisions/12.4 Logical Expressions",
                data: {
                  id: 11652,
                  base_course: "StudentCSP",
                  name: "12. Chapter 12 - A Computer can Make Decisions/12.4 Logical Expressions",
                  chapter: "CSPIntroDecisions",
                  subchapter: "logicalEx",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "complex",
            data: {
              title: "12.5 Complex Conditionals (and, or, and not)",
              num: 500,
              chapter: "CSPIntroDecisions",
              subchapter: "complex",
              id: 11653,
              numQuestions: 5
            },
            children: [
              {
                key: "Example_With_And",
                data: {
                  id: 10859,
                  base_course: "StudentCSP",
                  name: "Example_With_And",
                  chapter: "CSPIntroDecisions",
                  subchapter: "complex",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Example_With_And data-question_label="12.5.1">\n<div id=Example_With_And_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Example_With_And_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: and1-line1; 2-3: and1-line2-3; 4: and1-line4;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 3\nif x >= 1 and x <= 10:\n    print ("x is a number from 1 to 10")\nprint ("All done")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/complex",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.5.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_5_1_and1",
                data: {
                  id: 10860,
                  base_course: "StudentCSP",
                  name: "12_5_1_and1",
                  chapter: "CSPIntroDecisions",
                  subchapter: "complex",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="12.5.2" data-multipleanswers="false"  id="12_5_1_and1"  style="visibility: hidden;">\n    <blockquote>\n<div><p>Given the code below, what describes the values of x that will cause the code to print “condition true”?</p>\n<div class="highlight-python notranslate"><div class="highlight"><pre><span></span><span class="linenos">1</span><span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">:</span>\n<span class="linenos">2</span>    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;condition true&quot;</span><span class="p">)</span>\n<span class="linenos">3</span><span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;All done&quot;</span><span class="p">)</span>\n</pre></div>\n</div>\n</div></blockquote>\n\n    <li data-component="answer"  id="12_5_1_and1_opt_a">1 to 10</li><li data-component="feedback">This would be true if the second expression was x <= 10.</li>\n    \n    <li data-component="answer"  id="12_5_1_and1_opt_b">0 to 9</li><li data-component="feedback">This would be true if the first logical expression was x >= 0.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="12_5_1_and1_opt_c">1 to 9</li><li data-component="feedback">The "condition true" will only be printed when x is greater than 0 and less than 10 so this is the range from 1 to 9.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroDecisions/complex",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.5.2",
                  optional: false,
                  description:
                    " Given the code below, what describes the values of x that will cause the code t",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Example_With_Or",
                data: {
                  id: 10861,
                  base_course: "StudentCSP",
                  name: "Example_With_Or",
                  chapter: "CSPIntroDecisions",
                  subchapter: "complex",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Example_With_Or data-question_label="12.5.3">\n<div id=Example_With_Or_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Example_With_Or_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: and2-line1; 2: and2-line2; 3-4: and2-line3-4; 5: and2-line5;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ncleanedRoom = 1\nfinishedHomework = 0\nif cleanedRoom or finishedHomework:\n    print ("You can go out!")\nprint ("All done")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/complex",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.5.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_5_2_or1",
                data: {
                  id: 10862,
                  base_course: "StudentCSP",
                  name: "12_5_2_or1",
                  chapter: "CSPIntroDecisions",
                  subchapter: "complex",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="12.5.4" data-multipleanswers="false"  id="12_5_2_or1"  style="visibility: hidden;">\n    <blockquote>\n<div><p>Given the code below, what describes the values of x that will cause the code to print “condition true”?</p>\n<div class="highlight-python notranslate"><div class="highlight"><pre><span></span><span class="linenos">1</span><span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">0</span> <span class="ow">or</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="p">:</span>\n<span class="linenos">2</span>    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;condition true&quot;</span><span class="p">)</span>\n<span class="linenos">3</span><span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;All done&quot;</span><span class="p">)</span>\n</pre></div>\n</div>\n</div></blockquote>\n\n    <li data-component="answer" data-correct=\'yes\' id="12_5_2_or1_opt_a">all values of x</li><li data-component="feedback">This will be true if x is greater than 0 or less than 10.  This covers all possible values of x.</li>\n    \n    <li data-component="answer"  id="12_5_2_or1_opt_b">1 to 9</li><li data-component="feedback">This would be true if the logical expressions were joined with and instead of or.</li>\n    \n    <li data-component="answer"  id="12_5_2_or1_opt_c">0 to 9</li><li data-component="feedback">This would be true if the logical expressions were jointed with and instead of or and if the first logical expression was x >= 0.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroDecisions/complex",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.5.4",
                  optional: false,
                  description:
                    " Given the code below, what describes the values of x that will cause the code t",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12. Chapter 12 - A Computer can Make Decisions/12.5 Complex Conditionals (and, or, and not)",
                data: {
                  id: 11653,
                  base_course: "StudentCSP",
                  name: "12. Chapter 12 - A Computer can Make Decisions/12.5 Complex Conditionals (and, or, and not)",
                  chapter: "CSPIntroDecisions",
                  subchapter: "complex",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "practice",
            data: {
              title: "12.6 Practice with if",
              num: 600,
              chapter: "CSPIntroDecisions",
              subchapter: "practice",
              id: 11654,
              numQuestions: 7
            },
            children: [
              {
                key: "Price_If_Broken",
                data: {
                  id: 10877,
                  base_course: "StudentCSP",
                  name: "Price_If_Broken",
                  chapter: "CSPIntroDecisions",
                  subchapter: "practice",
                  author: "bmiller",
                  question_type: "activeCode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Price_If_Broken data-question_label="12.6.1">\n<div id=Price_If_Broken_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Price_If_Broken_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: c1-line1; 2-3: c1-line2-3; 4-5: c3-line4-5; 6: c1-line6; 7-9: c3f-line7-9;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nif weight < 1:\n    price = 1.45\nif weight > 1:\n    price = 1.15\ntotal = weight * price\nprint(weight)\nprint(price)\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/practice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.6.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_6_1_brokenrange_fill",
                data: {
                  id: 10878,
                  base_course: "StudentCSP",
                  name: "12_6_1_brokenrange_fill",
                  chapter: "CSPIntroDecisions",
                  subchapter: "practice",
                  author: "bmiller",
                  question_type: "fillintheblank",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone">\n            <div data-component="fillintheblank" data-question_label="12.6.2" id="12_6_1_brokenrange_fill"  style="visibility: hidden;">\n                <script type="application/json">\n                    {"problemHtml": "<p>What value for weight will result in an error complaining that price is not defined?</p>\\n<input type=\\"text\\" name=\'\' />", "dyn_vars": null, "blankNames": {}, "feedbackArray": [[{"regex": "^\\\\s*^1$|1\\\\.[0]*$\\\\s*$", "regexFlags": "", "feedback": "<p>Correct!</p>\\n"}, {"regex": "^\\\\s*.*\\\\s*$", "regexFlags": "", "feedback": "<p>Which value is not tested currently?</p>\\n"}]]}\n                </script>\n            </div>\n        </div>\n            ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/practice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.6.2",
                  optional: false,
                  description:
                    "What value for weight will result in an error complaining that price is not defi",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Multiple_Ifs",
                data: {
                  id: 10879,
                  base_course: "StudentCSP",
                  name: "Multiple_Ifs",
                  chapter: "CSPIntroDecisions",
                  subchapter: "practice",
                  author: "bmiller",
                  question_type: "activeCode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Multiple_Ifs data-question_label="12.6.3">\n<div id=Multiple_Ifs_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Multiple_Ifs_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: c1-line1; 2: c4-line2; 3-4: c1-line2-3; 5-6: c1-line4-5; 7: c1-line6; 8-9: c4-line8-9; 10-12: c3f-line7-9;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nnumItems = 5\nif weight < 1:\n    price = 1.45\nif weight >= 1:\n    price = 1.15\ntotal = weight * price\nif numItems >= 10:\n    total = total * 0.9\nprint(weight)\nprint(price)\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/practice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.6.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_6_2_Multiple_Ifs",
                data: {
                  id: 10880,
                  base_course: "StudentCSP",
                  name: "12_6_2_Multiple_Ifs",
                  chapter: "CSPIntroDecisions",
                  subchapter: "practice",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="12.6.4" data-multipleanswers="false"  id="12_6_2_Multiple_Ifs"  style="visibility: hidden;">\n    <blockquote>\n<div><p>What is the total for 12 items that weigh 3 pounds?</p>\n</div></blockquote>\n\n    <li data-component="answer"  id="12_6_2_Multiple_Ifs_opt_a">$3.45</li><li data-component="feedback">This would be the answer without the 10% discount for buying 10 or more items</li>\n    \n    <li data-component="answer"  id="12_6_2_Multiple_Ifs_opt_b">$3.11</li><li data-component="feedback">Python doesn\'t automatically round up</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="12_6_2_Multiple_Ifs_opt_c">$3.105</li><li data-component="feedback">This is the actual result.  But, can you pay $3.105?</li>\n    \n    <li data-component="answer"  id="12_6_2_Multiple_Ifs_opt_d">$3.10</li><li data-component="feedback">Python doesn\'t automatically change $3.105 to $3.10.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/practice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.6.4",
                  optional: false,
                  description: " What is the total for 12 items that weigh 3 pounds?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_6_3_Grade_Ifs",
                data: {
                  id: 10881,
                  base_course: "StudentCSP",
                  name: "12_6_3_Grade_Ifs",
                  chapter: "CSPIntroDecisions",
                  subchapter: "practice",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="12.6.5" data-multipleanswers="false"  id="12_6_3_Grade_Ifs"  style="visibility: hidden;">\n    <p>What is printed when the following code executes?</p>\n<div class="highlight-python notranslate"><div class="highlight"><pre><span></span><span class="linenos"> 1</span><span class="n">score</span> <span class="o">=</span> <span class="mi">93</span>\n<span class="linenos"> 2</span><span class="k">if</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">90</span><span class="p">:</span>\n<span class="linenos"> 3</span>    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;A&quot;</span>\n<span class="linenos"> 4</span><span class="k">if</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">80</span><span class="p">:</span>\n<span class="linenos"> 5</span>    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;B&quot;</span>\n<span class="linenos"> 6</span><span class="k">if</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">70</span><span class="p">:</span>\n<span class="linenos"> 7</span>    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;C&quot;</span>\n<span class="linenos"> 8</span><span class="k">if</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">60</span><span class="p">:</span>\n<span class="linenos"> 9</span>    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;D&quot;</span>\n<span class="linenos">10</span><span class="k">if</span> <span class="n">score</span> <span class="o">&lt;</span> <span class="mi">60</span><span class="p">:</span>\n<span class="linenos">11</span>    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;E&quot;</span>\n<span class="linenos">12</span><span class="nb">print</span><span class="p">(</span><span class="n">grade</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="12_6_3_Grade_Ifs_opt_a">A</li><li data-component="feedback">Notice that each of the first 4 statements start with an if.  What is the value of grade when it is printed?</li>\n    \n    <li data-component="answer"  id="12_6_3_Grade_Ifs_opt_b">B</li><li data-component="feedback">Each of the first 4 if statements will execute.</li>\n    \n    <li data-component="answer"  id="12_6_3_Grade_Ifs_opt_c">C</li><li data-component="feedback">Copy this code to an activecode window and run it.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="12_6_3_Grade_Ifs_opt_d">D</li><li data-component="feedback">Each of the first 4 if statements will be executed. So grade will be set to A, then B then C and finally D.</li>\n    \n    <li data-component="answer"  id="12_6_3_Grade_Ifs_opt_e">E</li><li data-component="feedback">This will only be true when score is less than 60.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroDecisions/practice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.6.5",
                  optional: false,
                  description: "What is printed when the following code executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_6_4_Logic_Ifs",
                data: {
                  id: 10882,
                  base_course: "StudentCSP",
                  name: "12_6_4_Logic_Ifs",
                  chapter: "CSPIntroDecisions",
                  subchapter: "practice",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="12.6.6" data-multipleanswers="false"  id="12_6_4_Logic_Ifs"  style="visibility: hidden;">\n    <p>Which of the following is true about the code below?</p>\n<div class="highlight-python notranslate"><div class="highlight"><pre><span></span><span class="linenos">1</span><span class="n">x</span> <span class="o">=</span> <span class="mi">3</span>\n<span class="linenos">2</span><span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">):</span>\n<span class="linenos">3</span>    <span class="n">x</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="mi">2</span><span class="p">;</span>\n<span class="linenos">4</span><span class="k">if</span> <span class="p">(</span><span class="n">x</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">):</span>\n<span class="linenos">5</span>    <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>\n<span class="linenos">6</span><span class="nb">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="12_6_4_Logic_Ifs_opt_a">x will always equal 0 after this code executes for any value of x</li><li data-component="feedback">If x was set to 1 originally, then it would still equal 1.</li>\n    \n    <li data-component="answer"  id="12_6_4_Logic_Ifs_opt_b">if x is greater than 2, the value in x will be doubled after this code executes</li><li data-component="feedback">What happens in the original when x is greater than 2?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="12_6_4_Logic_Ifs_opt_c">if x is greater than 2, x will equal 0 after this code executes</li><li data-component="feedback">If x is greater than 2, it will be set to 0.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroDecisions/practice",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.6.6",
                  optional: false,
                  description: "Which of the following is true about the code below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12. Chapter 12 - A Computer can Make Decisions/12.6 Practice with if",
                data: {
                  id: 11654,
                  base_course: "StudentCSP",
                  name: "12. Chapter 12 - A Computer can Make Decisions/12.6 Practice with if",
                  chapter: "CSPIntroDecisions",
                  subchapter: "practice",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "ifAndElse",
            data: {
              title: "12.7 Using if and else",
              num: 700,
              chapter: "CSPIntroDecisions",
              subchapter: "ifAndElse",
              id: 11655,
              numQuestions: 7
            },
            children: [
              {
                key: "Multiple_Ifs_2",
                data: {
                  id: 10865,
                  base_course: "StudentCSP",
                  name: "Multiple_Ifs_2",
                  chapter: "CSPIntroDecisions",
                  subchapter: "ifAndElse",
                  author: "bmiller",
                  question_type: "activeCode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Multiple_Ifs_2 data-question_label="12.7.1">\n<div id=Multiple_Ifs_2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Multiple_Ifs_2_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: c1-line1; 2-3: c1-line2-3; 4-5: c1-line4-5; 6: c1-line6; 7-9: c3f-line7-9;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nif weight < 1:\n    price = 1.45\nif weight >= 1:\n    price = 1.15\ntotal = weight * price\nprint(weight)\nprint(price)\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/ifAndElse",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.7.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "if_and_else",
                data: {
                  id: 10866,
                  base_course: "StudentCSP",
                  name: "if_and_else",
                  chapter: "CSPIntroDecisions",
                  subchapter: "ifAndElse",
                  author: "bmiller",
                  question_type: "activeCode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=if_and_else data-question_label="12.7.2">\n<div id=if_and_else_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="if_and_else_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: c5-line1; 2-3: c5-line2-3; 4-5: c5-line4-5; 6: c5-line6; 7-9: c3f-line7-9;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nif weight < 1:\n    price = 1.45\nelse:\n    price = 1.15\ntotal = weight * price\nprint(weight)\nprint(price)\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/ifAndElse",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.7.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_7_1_Even_Odd",
                data: {
                  id: 10867,
                  base_course: "StudentCSP",
                  name: "12_7_1_Even_Odd",
                  chapter: "CSPIntroDecisions",
                  subchapter: "ifAndElse",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="12_7_1_Even_Odd" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program should print out “x is even” if the remainder of x divided by 2 is 0 and “x is odd” otherwise, but the code is mixed up. The <code class="docutils literal notranslate"><span class="pre">%</span></code> symbol gives the remainder after the first number is divided by the second number.  Drag the blocks from the left and place them in the correct order on the right.  Be sure to also indent correctly! Click on &lt;i&gt;Check Me&lt;/i&gt; to see if you are right. You will be told if any of the lines are in the wrong order or have the wrong indention.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="12.7.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        x = 92\nif x % 2 == 0:\n    print("x is even")\nelse:\n    print("x is odd")\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/ifAndElse",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.7.3",
                  optional: false,
                  description:
                    'The following program should print out "x is even" if the remainder of x divided',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Price_If_Broken2",
                data: {
                  id: 10868,
                  base_course: "StudentCSP",
                  name: "Price_If_Broken2",
                  chapter: "CSPIntroDecisions",
                  subchapter: "ifAndElse",
                  author: "bmiller",
                  question_type: "activeCode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Price_If_Broken2 data-question_label="12.7.4">\n<div id=Price_If_Broken2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Price_If_Broken2_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: c1-line1; 2-3: c1-line2-3; 4-5: c3-line4-5; 6: c1-line6; 7-9: c3f-line7-9;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nif weight < 1:\n    price = 1.45\nif weight > 1:\n    price = 1.15\ntotal = weight * price\nprint(weight)\nprint(price)\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/ifAndElse",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.7.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_7_2_WSq",
                data: {
                  id: 10869,
                  base_course: "StudentCSP",
                  name: "12_7_2_WSq",
                  chapter: "CSPIntroDecisions",
                  subchapter: "ifAndElse",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=12_7_2_WSq data-question_label="12.7.5">\n<div id=12_7_2_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="12_7_2_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/ifAndElse",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.7.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12_7_2_WSa",
                data: {
                  id: 10870,
                  base_course: "StudentCSP",
                  name: "12_7_2_WSa",
                  chapter: "CSPIntroDecisions",
                  subchapter: "ifAndElse",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=12_7_2_WSa data-question_label="12.7.6">\n<div id=12_7_2_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="12_7_2_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nif weight < 1:\n  price = 1.45\nif weight == 1:\n  price = 0\nif weight > 1:\n  price = 1.15\ntotal = weight * price\nprint(weight)\nprint(price)\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/ifAndElse",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.7.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12. Chapter 12 - A Computer can Make Decisions/12.7 Using if and else",
                data: {
                  id: 11655,
                  base_course: "StudentCSP",
                  name: "12. Chapter 12 - A Computer can Make Decisions/12.7 Using if and else",
                  chapter: "CSPIntroDecisions",
                  subchapter: "ifAndElse",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "12.8 Chapter 12 - Summary",
              num: 800,
              chapter: "CSPIntroDecisions",
              subchapter: "summary",
              id: 11656,
              numQuestions: 1
            },
            children: [
              {
                key: "12. Chapter 12 - A Computer can Make Decisions/12.8 Chapter 12 - Summary",
                data: {
                  id: 11656,
                  base_course: "StudentCSP",
                  name: "12. Chapter 12 - A Computer can Make Decisions/12.8 Chapter 12 - Summary",
                  chapter: "CSPIntroDecisions",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "12.9 Chapter 12 Exercises",
              num: 900,
              chapter: "CSPIntroDecisions",
              subchapter: "Exercises",
              id: 11657,
              numQuestions: 21
            },
            children: [
              {
                key: "ch12ex1q",
                data: {
                  id: 10839,
                  base_course: "StudentCSP",
                  name: "ch12ex1q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex1q data-question_label="12.9.1">\n<div id=ch12ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 0\nif x < 3\nprint ("x is less than 3")\nprint ("All done)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex2q",
                data: {
                  id: 10840,
                  base_course: "StudentCSP",
                  name: "ch12ex2q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex2q data-question_label="12.9.2">\n<div id=ch12ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 3\nif x < 3:\n    print("Hello")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex3q",
                data: {
                  id: 10841,
                  base_course: "StudentCSP",
                  name: "ch12ex3q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex3q data-question_label="12.9.3">\n<div id=ch12ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nif weight < 1:\nprice = 1.45\nif weight >= 1\nprice = 1.15\ntotal = weight * price\nprint(weight)\nprint(price)\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex4q",
                data: {
                  id: 10842,
                  base_course: "StudentCSP",
                  name: "ch12ex4q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex4q data-question_label="12.9.4">\n<div id=ch12ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight =\n\nif weight >= .5:\nprice = 2\nif weight < .5:\nprice = 1\n    total = weight * price\n    print(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex5q",
                data: {
                  id: 10843,
                  base_course: "StudentCSP",
                  name: "ch12ex5q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex5q data-question_label="12.9.5">\n<div id=ch12ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nnumItems = 5\nif weight < 2:\nprice = 1.50\nif weight >= 2:\nprice = 1.30\ntotal = weight * price\nprint(weight)\n    print(price)\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex6q",
                data: {
                  id: 10844,
                  base_course: "StudentCSP",
                  name: "ch12ex6q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex6q data-question_label="12.9.6">\n<div id=ch12ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 2\nif x < 2:\n    print("Hello")\nif x > 2:\n    print("Hey")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex7q",
                data: {
                  id: 10845,
                  base_course: "StudentCSP",
                  name: "ch12ex7q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex7q data-question_label="12.9.7">\n<div id=ch12ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 3\nif x > 1 and x <= 10\nprint ("x is a number from 1 to 10")\n    print ("All done")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex8q",
                data: {
                  id: 10846,
                  base_course: "StudentCSP",
                  name: "ch12ex8q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex8q data-question_label="12.9.8">\n<div id=ch12ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 8\nif x < 8 or x > 8:\n    print("This is not 8")\nelse:\n    print("This is 8")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex9q",
                data: {
                  id: 10847,
                  base_course: "StudentCSP",
                  name: "ch12ex9q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex9q data-question_label="12.9.9">\n<div id=ch12ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ncleanedRoom = 1\nfinishedHomework = 0\nif\n    print ("You can go out!")\nprint ("All done")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex10q",
                data: {
                  id: 10848,
                  base_course: "StudentCSP",
                  name: "ch12ex10q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex10q data-question_label="12.9.10">\n<div id=ch12ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 8\n    if\nprint("Good job")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex11q",
                data: {
                  id: 10849,
                  base_course: "StudentCSP",
                  name: "ch12ex11q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex11q data-question_label="12.9.11">\n<div id=ch12ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nif weight < 1:\nprice = 1.45\nif weight > 1:\nprice = 1.15\ntotal = weight * price\nprint(weigh)\nprint(Price)\nprint(total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex12q",
                data: {
                  id: 10850,
                  base_course: "StudentCSP",
                  name: "ch12ex12q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex12q data-question_label="12.9.12">\n<div id=ch12ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nnumItems = 5\nwallet = 2\n\nif weight < 1:\n    price = 1.45\n    if weight >= 1:\n    price = 1.15\n    total = numItems * price\n    if total > wallet:\n    print("You have no money")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex13q",
                data: {
                  id: 10851,
                  base_course: "StudentCSP",
                  name: "ch12ex13q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex13q data-question_label="12.9.13">\n<div id=ch12ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nscore = 93\nif score >= 90:\n    grade = "A"\nif score >= 80:\n    grade = "B"\nif score >= 70:\n    grade = "C"\nif score >= 60:\n    grade = "D"\nif score < 60:\n   grade = "E"\nprint(grade)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex14q",
                data: {
                  id: 10852,
                  base_course: "StudentCSP",
                  name: "ch12ex14q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex14q data-question_label="12.9.14">\n<div id=ch12ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 5\nif x == 5:\nprint("The number is 5")\nif x != 5:\nprint("The number is NOT 5")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex15q",
                data: {
                  id: 10853,
                  base_course: "StudentCSP",
                  name: "ch12ex15q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex15q data-question_label="12.9.15">\n<div id=ch12ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nweight = 0.5\nif weight < 1\nprice = 1.45\nelse\nprice = 1.15\ntotal = weight * price\nprint(weight)\nprint(price\nprint(Total)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex16q",
                data: {
                  id: 10854,
                  base_course: "StudentCSP",
                  name: "ch12ex16q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex16q data-question_label="12.9.16">\n<div id=ch12ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx =\nif not x != 3:\n    print("Hi")\n\n    print("Hello")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex17q",
                data: {
                  id: 10855,
                  base_course: "StudentCSP",
                  name: "ch12ex17q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex17q data-question_label="12.9.17">\n<div id=ch12ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex18q",
                data: {
                  id: 10856,
                  base_course: "StudentCSP",
                  name: "ch12ex18q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex18q data-question_label="12.9.18">\n<div id=ch12ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex19q",
                data: {
                  id: 10857,
                  base_course: "StudentCSP",
                  name: "ch12ex19q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex19q data-question_label="12.9.19">\n<div id=ch12ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch12ex20q",
                data: {
                  id: 10858,
                  base_course: "StudentCSP",
                  name: "ch12ex20q",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch12ex20q data-question_label="12.9.20">\n<div id=ch12ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch12ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "12.9.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "12. Chapter 12 - A Computer can Make Decisions/12.9 Chapter 12 Exercises",
                data: {
                  id: 11657,
                  base_course: "StudentCSP",
                  name: "12. Chapter 12 - A Computer can Make Decisions/12.9 Chapter 12 Exercises",
                  chapter: "CSPIntroDecisions",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPStringDecisions",
        data: {
          title: "13. Chapter 13 - Using Decisions with Strings",
          num: 13
        },
        children: [
          {
            key: "decisionStrings",
            data: {
              title: "13.1 Using Decisions with Strings",
              num: 100,
              chapter: "CSPStringDecisions",
              subchapter: "decisionStrings",
              id: 11658,
              numQuestions: 7
            },
            children: [
              {
                key: "csp_sd_invoice",
                data: {
                  id: 11337,
                  base_course: "StudentCSP",
                  name: "csp_sd_invoice",
                  chapter: "CSPStringDecisions",
                  subchapter: "decisionStrings",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=csp_sd_invoice data-question_label="13.1.1">\n<div id=csp_sd_invoice_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="csp_sd_invoice_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: sd1line1; 2-3: sd1line2-3; 4-5: sd1line4-5; 6: sd1line6;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnumItems = 1\nif numItems == 1:\n    message = "You ordered 1 item"\nif numItems > 1:\n    message = "You ordered " + str(numItems) + " items"\nprint(message)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/decisionStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.1.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_1_1_invoice_neg",
                data: {
                  id: 11338,
                  base_course: "StudentCSP",
                  name: "13_1_1_invoice_neg",
                  chapter: "CSPStringDecisions",
                  subchapter: "decisionStrings",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.1.2" data-multipleanswers="false"  id="13_1_1_invoice_neg"  style="visibility: hidden;">\n    <p>What will be printed if numItems = -1?</p>\n\n    <li data-component="answer"  id="13_1_1_invoice_neg_opt_a">You ordered 1 item</li><li data-component="feedback">This line will only print when the numer of items is 1.</li>\n    \n    <li data-component="answer"  id="13_1_1_invoice_neg_opt_b">Your ordered -1 items</li><li data-component="feedback">This line will print whenever the number of items is greater than 1.</li>\n    \n    <li data-component="answer"  id="13_1_1_invoice_neg_opt_c">Nothing will be printed.</li><li data-component="feedback">If numItems is negative neither of the if\'s will be true so the variable message will not be created.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="13_1_1_invoice_neg_opt_d">You will get an error message that message is not defined.</li><li data-component="feedback">The variable message won\'t be created if the number of items is less than 1, so trying to print the value of message will cause an error.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/decisionStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.1.2",
                  optional: false,
                  description: "What will be printed if numItems = -1?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_1_2_invoice_else",
                data: {
                  id: 11339,
                  base_course: "StudentCSP",
                  name: "13_1_2_invoice_else",
                  chapter: "CSPStringDecisions",
                  subchapter: "decisionStrings",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.1.3" data-multipleanswers="false"  id="13_1_2_invoice_else"  style="visibility: hidden;">\n    <p>What will be printed if you change the second if to an else and set numItems = -1?</p>\n\n    <li data-component="answer"  id="13_1_2_invoice_else_opt_a">You ordered 1 item</li><li data-component="feedback">This line will still only print when the numer of items is 1.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="13_1_2_invoice_else_opt_b">Your ordered -1 items</li><li data-component="feedback">This line will print whenever the number of items was not equal to 1 when you change the second if to an else.</li>\n    \n    <li data-component="answer"  id="13_1_2_invoice_else_opt_c">Nothing will be printed.</li><li data-component="feedback">If numItems is negative neither of the if\'s will be true so the variable message will not be created.</li>\n    \n    <li data-component="answer"  id="13_1_2_invoice_else_opt_d">You will get an error message that message is not defined.</li><li data-component="feedback">The variable message won\'t be created if the number of items is less than 1, so trying to print the value of message will cause an error.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/decisionStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.1.3",
                  optional: false,
                  description:
                    "What will be printed if you change the second if to an else and set numItems = -",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "csp_sd_score",
                data: {
                  id: 11340,
                  base_course: "StudentCSP",
                  name: "csp_sd_score",
                  chapter: "CSPStringDecisions",
                  subchapter: "decisionStrings",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=csp_sd_score data-question_label="13.1.4">\n<div id=csp_sd_score_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="csp_sd_score_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: sd2line1; 2-3: sd2line2-3; 4-5: sd2line4-5; 6-7: sd2line6-7;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nscore = 8\nif score < 10:\n    print("You can do better.")\nif score > 10:\n    print("Good job!")\nif score > 20:\n    print("Amazing")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/decisionStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.1.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_1_3_score1",
                data: {
                  id: 11341,
                  base_course: "StudentCSP",
                  name: "13_1_3_score1",
                  chapter: "CSPStringDecisions",
                  subchapter: "decisionStrings",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.1.5" data-multipleanswers="false"  id="13_1_3_score1"  style="visibility: hidden;">\n    <p>What is printed when the score is 10?</p>\n\n    <li data-component="answer"  id="13_1_3_score1_opt_a">You can do better.</li><li data-component="feedback">This line will only print when score is less than 10.</li>\n    \n    <li data-component="answer"  id="13_1_3_score1_opt_b">Good job!</li><li data-component="feedback">This line will only print whenever the score is more than 10.</li>\n    \n    <li data-component="answer"  id="13_1_3_score1_opt_c">Amazing!</li><li data-component="feedback">This line will only print whenever the score is more then 20.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="13_1_3_score1_opt_d">Nothing is printed</li><li data-component="feedback">When score equals 10 none of the current if statements will be true, so nothing is printed.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/decisionStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.1.5",
                  optional: false,
                  description: "What is printed when the score is 10?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_1_4_score2",
                data: {
                  id: 11342,
                  base_course: "StudentCSP",
                  name: "13_1_4_score2",
                  chapter: "CSPStringDecisions",
                  subchapter: "decisionStrings",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.1.6" data-multipleanswers="false"  id="13_1_4_score2"  style="visibility: hidden;">\n    <p>What is the first thing printed when the score is 25?</p>\n\n    <li data-component="answer"  id="13_1_4_score2_opt_a">You can do better.</li><li data-component="feedback">This line will only print when score is less than 10.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="13_1_4_score2_opt_b">Good job!</li><li data-component="feedback">This line will print whenever the score is more than 10, so if the value is 25 it will print first.  And then it will also print "Amazing!".</li>\n    \n    <li data-component="answer"  id="13_1_4_score2_opt_c">Amazing!</li><li data-component="feedback">This line will print whenever the score is more than 20, but another line will print first.</li>\n    \n    <li data-component="answer"  id="13_1_4_score2_opt_d">Nothing is printed</li><li data-component="feedback">The value 25 is more than 10.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/decisionStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.1.6",
                  optional: false,
                  description: "What is the first thing printed when the score is 25?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13. Chapter 13 - Using Decisions with Strings/13.1 Using Decisions with Strings",
                data: {
                  id: 11658,
                  base_course: "StudentCSP",
                  name: "13. Chapter 13 - Using Decisions with Strings/13.1 Using Decisions with Strings",
                  chapter: "CSPStringDecisions",
                  subchapter: "decisionStrings",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "input",
            data: {
              title: "13.2 Interactive Stories with Input",
              num: 200,
              chapter: "CSPStringDecisions",
              subchapter: "input",
              id: 11659,
              numQuestions: 4
            },
            children: [
              {
                key: "csp_sd_story",
                data: {
                  id: 11360,
                  base_course: "StudentCSP",
                  name: "csp_sd_story",
                  chapter: "CSPStringDecisions",
                  subchapter: "input",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=csp_sd_story data-question_label="13.2.1">\n<div id=csp_sd_story_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="csp_sd_story_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: sd3-line1; 2: sd3line2; 3: sd3line3; 4: sd3line4; 5-6: sd3line5-6; 7: sd3line7; 8-9: sd3line8-9; 10: sd3line10; 11-12: sd3line11-12;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nprint("You are in front of a creepy door in a hallway.")\nprint("What do you want to do?")\naction = input ("Type: in, left, or right. Then click OK or press enter")\nif action == "in":\n    print("You choose to go in.")\n    print("The room is pitch black.")\nif action == "left":\n    print("You choose to turn left.")\n    print("A ghost appears at the end of the hall.")\nif action == "right":\n    print("You choose to turn right.")\n    print("A greenish light is visible in the distance.")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/input",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.2.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_2_1_story1",
                data: {
                  id: 11361,
                  base_course: "StudentCSP",
                  name: "13_2_1_story1",
                  chapter: "CSPStringDecisions",
                  subchapter: "input",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.2.2" data-multipleanswers="false"  id="13_2_1_story1"  style="visibility: hidden;">\n    <p>What is the second thing printed if the user answers left?</p>\n\n    <li data-component="answer"  id="13_2_1_story1_opt_a">The room is pitch black.</li><li data-component="feedback">This line will be printed when the user enters in.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="13_2_1_story1_opt_b">A ghost appears at the end of the hall.</li><li data-component="feedback">This line will printed when the user enters left.</li>\n    \n    <li data-component="answer"  id="13_2_1_story1_opt_c">A greenish light is visible in the distance.</li><li data-component="feedback">This line will printed when the user enters right.</li>\n    \n    <li data-component="answer"  id="13_2_1_story1_opt_d">None of the above is printed.</li><li data-component="feedback">If the user enters something besides in, left, or right none of the logical expressions will be true and none of these will be printed.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/input",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.2.2",
                  optional: false,
                  description: "What is the second thing printed if the user answers left?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_2_2_story2",
                data: {
                  id: 11362,
                  base_course: "StudentCSP",
                  name: "13_2_2_story2",
                  chapter: "CSPStringDecisions",
                  subchapter: "input",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.2.3" data-multipleanswers="false"  id="13_2_2_story2"  style="visibility: hidden;">\n    <p>What is the printed if the user answer something other than in, left, or right?</p>\n\n    <li data-component="answer"  id="13_2_2_story2_opt_a">The room is pitch black.</li><li data-component="feedback">This line will be printed when the user enters in.</li>\n    \n    <li data-component="answer"  id="13_2_2_story2_opt_b">A ghost appears at the end of the hall.</li><li data-component="feedback">This line will printed when the user enters left.</li>\n    \n    <li data-component="answer"  id="13_2_2_story2_opt_c">A greenish light is visible in the distance.</li><li data-component="feedback">This line will printed when the user enters right.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="13_2_2_story2_opt_d">None of the above is printed.</li><li data-component="feedback">None of the conditions will be true if the user enters something other than in, left, or right so none of these will be printed.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/input",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.2.3",
                  optional: false,
                  description:
                    "What is the printed if the user answer something other than in, left, or right?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13. Chapter 13 - Using Decisions with Strings/13.2 Interactive Stories with Input",
                data: {
                  id: 11659,
                  base_course: "StudentCSP",
                  name: "13. Chapter 13 - Using Decisions with Strings/13.2 Interactive Stories with Input",
                  chapter: "CSPStringDecisions",
                  subchapter: "input",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "fortuneTeller",
            data: {
              title: "13.3 Fortune Teller",
              num: 300,
              chapter: "CSPStringDecisions",
              subchapter: "fortuneTeller",
              id: 11660,
              numQuestions: 4
            },
            children: [
              {
                key: "sd_fortune",
                data: {
                  id: 11357,
                  base_course: "StudentCSP",
                  name: "sd_fortune",
                  chapter: "CSPStringDecisions",
                  subchapter: "fortuneTeller",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=sd_fortune data-question_label="13.3.1">\n<div id=sd_fortune_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="sd_fortune_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: sd4-line1; 2-3: sd4-line2-3; 4-5: sd4-line4-5; 6-7: sd4-line6-7; 8-9: sd4-line8-9; 10-11: sd4-line10-11;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnum = input ("Type a number from 1 to 5. Then click OK or press enter")\nif num == "1":\n    print("You will get a treat.")\nif num == "2":\n    print("You will lose something.")\nif num == "3":\n    print("You will meet a new friend.")\nif num == "4":\n    print("You will catch a cold.")\nif num == "5":\n    print("You will ace a test.")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/fortuneTeller",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_3_1_fortune1",
                data: {
                  id: 11358,
                  base_course: "StudentCSP",
                  name: "13_3_1_fortune1",
                  chapter: "CSPStringDecisions",
                  subchapter: "fortuneTeller",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.3.2" data-multipleanswers="false"  id="13_3_1_fortune1"  style="visibility: hidden;">\n    <p>How many conditions (logical expressions) are checked if the user answered 2?</p>\n\n    <li data-component="answer"  id="13_3_1_fortune1_opt_a">1</li><li data-component="feedback">It would have to at least check if it was 1 or 2.</li>\n    \n    <li data-component="answer"  id="13_3_1_fortune1_opt_b">2</li><li data-component="feedback">It executes every if, even if it already found the answer.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="13_3_1_fortune1_opt_c">5</li><li data-component="feedback">It executes every if.</li>\n    \n    <li data-component="answer"  id="13_3_1_fortune1_opt_d">6</li><li data-component="feedback">There are only 5 logical expression here so it can\'t be more than 5.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/fortuneTeller",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.3.2",
                  optional: false,
                  description:
                    "How many conditions (logical expressions) are checked if the user answered 2?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_3_2_fortune2",
                data: {
                  id: 11359,
                  base_course: "StudentCSP",
                  name: "13_3_2_fortune2",
                  chapter: "CSPStringDecisions",
                  subchapter: "fortuneTeller",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.3.3" data-multipleanswers="false"  id="13_3_2_fortune2"  style="visibility: hidden;">\n    <p>How many conditions (logical expressions) are checked if the user answered 6?</p>\n\n    <li data-component="answer"  id="13_3_2_fortune2_opt_a">1</li><li data-component="feedback">It has to execute each if in order from top to bottom.</li>\n    \n    <li data-component="answer"  id="13_3_2_fortune2_opt_b">2</li><li data-component="feedback">How would this work?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="13_3_2_fortune2_opt_c">5</li><li data-component="feedback">It executes every if.</li>\n    \n    <li data-component="answer"  id="13_3_2_fortune2_opt_d">6</li><li data-component="feedback">There are only 5 logical expression here so it can\'t be more than 5.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/fortuneTeller",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.3.3",
                  optional: false,
                  description:
                    "How many conditions (logical expressions) are checked if the user answered 6?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13. Chapter 13 - Using Decisions with Strings/13.3 Fortune Teller",
                data: {
                  id: 11660,
                  base_course: "StudentCSP",
                  name: "13. Chapter 13 - Using Decisions with Strings/13.3 Fortune Teller",
                  chapter: "CSPStringDecisions",
                  subchapter: "fortuneTeller",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "elif",
            data: {
              title: "13.4 Using elif for more options",
              num: 400,
              chapter: "CSPStringDecisions",
              subchapter: "elif",
              id: 11661,
              numQuestions: 10
            },
            children: [
              {
                key: "sd_three_options",
                data: {
                  id: 11343,
                  base_course: "StudentCSP",
                  name: "sd_three_options",
                  chapter: "CSPStringDecisions",
                  subchapter: "elif",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=sd_three_options data-question_label="13.4.1">\n<div id=sd_three_options_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="sd_three_options_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: sd5-line1; 2-3: sd5-line2-3; 4-5: sd5-line4-5; 6-7: sd5-line6-7;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 8\nif x < 0:\n    print("x is negative")\nif x == 0:\n    print("x is 0")\nif x > 0:\n    print("x is positive")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/elif",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "sd_three_options_elif",
                data: {
                  id: 11344,
                  base_course: "StudentCSP",
                  name: "sd_three_options_elif",
                  chapter: "CSPStringDecisions",
                  subchapter: "elif",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=sd_three_options_elif data-question_label="13.4.2">\n<div id=sd_three_options_elif_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="sd_three_options_elif_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: sd6-line1; 2-3: sd6-line2-3; 4-5: sd6-line4-5; 6-7: sd6-line6-7;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 8\nif x < 0:\n    print("x is negative")\nelif x == 0:\n    print("x is 0")\nelse:\n    print("x is positive")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/elif",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.4.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_4_1_string_elif",
                data: {
                  id: 11345,
                  base_course: "StudentCSP",
                  name: "13_4_1_string_elif",
                  chapter: "CSPStringDecisions",
                  subchapter: "elif",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="13_4_1_string_elif" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program should report which team won or if there was a tie.  But the code has been mixed up.  Drag it into the right order with the right indention.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="13.4.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        team1 = 20\nteam2 = 20\n---\nif (team1 > team2):\n    print("team1 won")\n---\nelif (team2 > team1):\n---\n    print("team2 won")\n---\nelse:\n---\n    print("team1 and team2 tied")\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/elif",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.4.3",
                  optional: false,
                  description:
                    "The following program should report which team won or if there was a tie.  But t",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "sd_four_options",
                data: {
                  id: 11346,
                  base_course: "StudentCSP",
                  name: "sd_four_options",
                  chapter: "CSPStringDecisions",
                  subchapter: "elif",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=sd_four_options data-question_label="13.4.4">\n<div id=sd_four_options_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="sd_four_options_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: sd7-line1; 2-3: sd7-line2-3; 4-5: sd7-line4-5; 6-7: sd7-line6-7; 8-9: sd7-line8-9;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = .25\nif x <= .25:\n    print("x is in the first quartile - x <= .25")\nelif x <= .5:\n    print("x is in the second quartile - .25 < x <= .5")\nelif x <= .75:\n    print("x is in the third quartile - .5 < x <= .75")\nelse:\n    print("x is in the fourth quartile - .75 < x <= 1")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/elif",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.4.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_4_2_elif1",
                data: {
                  id: 11347,
                  base_course: "StudentCSP",
                  name: "13_4_2_elif1",
                  chapter: "CSPStringDecisions",
                  subchapter: "elif",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.4.5" data-multipleanswers="false"  id="13_4_2_elif1"  style="visibility: hidden;">\n    <p>What would be printed if you moved lines 6-7 before lines 4-5 and set x equal to .5?</p>\n\n    <li data-component="answer"  id="13_4_2_elif1_opt_a">x is in the first quartile - x <= .25</li><li data-component="feedback">This will only print if x is less then or equal to .25.</li>\n    \n    <li data-component="answer"  id="13_4_2_elif1_opt_b">x is in the second quartile - .25 < x <= .5</li><li data-component="feedback">This will print if the other if\'s were not true, and if x is less than or equal to .5.  By moving lines 6-7 before lines 4-5 this will never print.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="13_4_2_elif1_opt_c">x is in the third quartile - .5 < x <= .75</li><li data-component="feedback">This will print if the other if\'s are not true and if x is less than or equal to .75.  So, moving lines 6-7 before lines 4-5 messes up what this code is intended to do and incorrectly prints that .5 is in the third quartile.</li>\n    \n    <li data-component="answer"  id="13_4_2_elif1_opt_d">x is in the fourth quartile - .75 < x <= 1</li><li data-component="feedback">This will only print if all of the other if\'s were false.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/elif",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.4.5",
                  optional: false,
                  description:
                    "What would be printed if you moved lines 6-7 before lines 4-5 and set x equal to",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "fortune_elif",
                data: {
                  id: 11348,
                  base_course: "StudentCSP",
                  name: "fortune_elif",
                  chapter: "CSPStringDecisions",
                  subchapter: "elif",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=fortune_elif data-question_label="13.4.6">\n<div id=fortune_elif_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="fortune_elif_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: elif1-line1; 2-3: elif1-line2-3; 4-5: elif1-line4-5; 6-7: elif1-line6-7; 8-9: elif1-line8-9; 10-11: elif1-line10-11;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnum = input ("Type a number from 1 to 5. Then click OK or press enter")\nif num == "1":\n    print("You will get a treat.")\nelif num == "2":\n    print("You will lose something.")\nelif num == "3":\n    print("You will meet a new friend.")\nelif num == "4":\n    print("You will catch a cold.")\nelse:\n    print("You will ace a test.")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/elif",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.4.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_4_3_fortune-elif-1",
                data: {
                  id: 11349,
                  base_course: "StudentCSP",
                  name: "13_4_3_fortune-elif-1",
                  chapter: "CSPStringDecisions",
                  subchapter: "elif",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.4.7" data-multipleanswers="false"  id="13_4_3_fortune-elif-1"  style="visibility: hidden;">\n    <p>How many conditions (logical expressions) are checked in the code above if the user answered 2?</p>\n\n    <li data-component="answer"  id="13_4_3_fortune-elif-1_opt_a">1</li><li data-component="feedback">It will have to test if <code>num</code> is equal to 1 and because that is false it will test if <code>num</code> is equal to 2.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="13_4_3_fortune-elif-1_opt_b">2</li><li data-component="feedback">With the <code>elif</code> it won\'t execute the other <code>elif</code>\'s if one of them is true.</li>\n    \n    <li data-component="answer"  id="13_4_3_fortune-elif-1_opt_c">5</li><li data-component="feedback">With <code>elif</code> it will test each until one of the conditions is true and then skip the rest.</li>\n    \n    <li data-component="answer"  id="13_4_3_fortune-elif-1_opt_d">6</li><li data-component="feedback">There are only 5 logical expression here so it can\'t be more than 5.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/elif",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.4.7",
                  optional: false,
                  description:
                    "How many conditions (logical expressions) are checked in the code above if the u",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_4_4_WSq",
                data: {
                  id: 11350,
                  base_course: "StudentCSP",
                  name: "13_4_4_WSq",
                  chapter: "CSPStringDecisions",
                  subchapter: "elif",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=13_4_4_WSq data-question_label="13.4.8">\n<div id=13_4_4_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="13_4_4_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/elif",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.4.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13_4_4_WSa",
                data: {
                  id: 11351,
                  base_course: "StudentCSP",
                  name: "13_4_4_WSa",
                  chapter: "CSPStringDecisions",
                  subchapter: "elif",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=13_4_4_WSa data-question_label="13.4.9">\n<div id=13_4_4_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="13_4_4_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnum = input ("Type a number from 1 to 5. Then click OK or press enter")\nstates = int(num)\nif states <10 :\n    print("It seems that you have explored some states.")\nelif states <25 :\n    print("Wow, you\'re almost halfway through seeing the entire US.")\nelif states <50:\n    print("You\'re so well traveled!")\nelif states == 50:\n    print("Congratulations on exploring the US!")\nelse:\n    print("There are 50 US states, are you sure you traveled this many?")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/elif",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.4.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13. Chapter 13 - Using Decisions with Strings/13.4 Using elif for more options",
                data: {
                  id: 11661,
                  base_course: "StudentCSP",
                  name: "13. Chapter 13 - Using Decisions with Strings/13.4 Using elif for more options",
                  chapter: "CSPStringDecisions",
                  subchapter: "elif",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "13.5 Chapter 13 - Summary",
              num: 500,
              chapter: "CSPStringDecisions",
              subchapter: "summary",
              id: 11662,
              numQuestions: 1
            },
            children: [
              {
                key: "13. Chapter 13 - Using Decisions with Strings/13.5 Chapter 13 - Summary",
                data: {
                  id: 11662,
                  base_course: "StudentCSP",
                  name: "13. Chapter 13 - Using Decisions with Strings/13.5 Chapter 13 - Summary",
                  chapter: "CSPStringDecisions",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "13.6 Chapter 13 Exercises",
              num: 600,
              chapter: "CSPStringDecisions",
              subchapter: "Exercises",
              id: 11663,
              numQuestions: 21
            },
            children: [
              {
                key: "ch13ex1q",
                data: {
                  id: 11317,
                  base_course: "StudentCSP",
                  name: "ch13ex1q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex1q data-question_label="13.6.1">\n<div id=ch13ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nscore = 20\nif score < 10\nprint("You can do better.")\nif score > 10:\nprint(Good job!")\nif score > 20\nprint("Amazing"\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex2q",
                data: {
                  id: 11318,
                  base_course: "StudentCSP",
                  name: "ch13ex2q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex2q data-question_label="13.6.2">\n<div id=ch13ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = 4\nif x > 5\nprint("Less than 5")\n    if x =< 5\n    print("Greater than or equal to 5")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex3q",
                data: {
                  id: 11319,
                  base_course: "StudentCSP",
                  name: "ch13ex3q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex3q data-question_label="13.6.3">\n<div id=ch13ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nprint(You are in front of a creepy door in a hallway.")\nprin("What do you want to do?")\naction = input ("Type: in, left, or right. Then click OK or press enter)\nif action == "in"\n    print("You choose to go in.")\n    print("The room is pitch black.")\nif action == "left":\nprint("You choose to turn left.")\n    print("A ghost appears at the end of the hall.")\nif action == "right":\n    print("You choose to turn right.")\nprint("A greenish light is visible in the distance.")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex4q",
                data: {
                  id: 11320,
                  base_course: "StudentCSP",
                  name: "ch13ex4q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex4q data-question_label="13.6.4">\n<div id=ch13ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nprint("You are in front of a creepy door in a hallway.")\nprint("What do you want to do?")\nuserInput =\nif\n    print("You choose to go in.")\n    print("The room is pitch black.")\nif\n    print("You choose to turn left.")\n    print("A ghost appears at the end of the hall.")\nif\n    print("You choose to turn right.")\n    print("A greenish light is visible in the distance.")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex5q",
                data: {
                  id: 11321,
                  base_course: "StudentCSP",
                  name: "ch13ex5q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex5q data-question_label="13.6.5">\n<div id=ch13ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nscore = 80\nif score >= 90:\n    grade = "A"\nif score >= 80:\n    grade = "B"\nif score >= 70:\n    grade = "C"\nif score >= 60:\n    grade = "D"\nif score < 60:\n   grade = "E"\nprint(grade)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex6q",
                data: {
                  id: 11322,
                  base_course: "StudentCSP",
                  name: "ch13ex6q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex6q data-question_label="13.6.6">\n<div id=ch13ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nage = 4\nif age < 6:\n    print("You\'re in kindergarten")\nif age < 11:\n    print("You\'re in elementary school")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex7q",
                data: {
                  id: 11323,
                  base_course: "StudentCSP",
                  name: "ch13ex7q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex7q data-question_label="13.6.7">\n<div id=ch13ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nscore = 22\nif score < 10:\n    print("You can do better.")\nif score > 10:\n    print("Good job!")\nif score > 20:\n    print("Amazing")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex8q",
                data: {
                  id: 11324,
                  base_course: "StudentCSP",
                  name: "ch13ex8q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex8q data-question_label="13.6.8">\n<div id=ch13ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnumbers = [-1,0,1]\nfor x in numbers:\n    if\n        print("positive")\n    elif\n        print(\n    else:\n        print(\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex9q",
                data: {
                  id: 11325,
                  base_course: "StudentCSP",
                  name: "ch13ex9q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex9q data-question_label="13.6.9">\n<div id=ch13ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnum = input ("Type a number from 1 to 5. Then click OK or press enter")\nif num == "1":\n    print("You will get a treat.")\nif num == "2":\n    print("You will lose something.")\nif num == "3":\n    print("You will meet a new friend.")\nif num == "4":\n    print("You will catch a cold.")\nif num == "5":\n    print("You will ace a test.")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex10q",
                data: {
                  id: 11326,
                  base_course: "StudentCSP",
                  name: "ch13ex10q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex10q data-question_label="13.6.10">\n<div id=ch13ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nhighScore = 10\nuserInput = Input("What\'s your score? (Give a number 1 - 20)")\nuserInput = int(userInput)\nif userInput < 10\n    print(Good job!)\n    if userInput > 10\n    print("Try again.")\n        if userInput = 10\n            print("You tied the high score.")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex11q",
                data: {
                  id: 11327,
                  base_course: "StudentCSP",
                  name: "ch13ex11q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex11q data-question_label="13.6.11">\n<div id=ch13ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nteam1 = 20\nteam2 = 20\nif (team1 < team2):\n    print("team1 won")\nif (team2 > team1):\n    print("team2 won")\nif (team2 == team1):\n    print("team1 and team2 tied")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex12q",
                data: {
                  id: 11328,
                  base_course: "StudentCSP",
                  name: "ch13ex12q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex12q data-question_label="13.6.12">\n<div id=ch13ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nuser = input("Give me a number")\nnumber = int(user)\nif number < 5:\n    user2 =\n    number2 = int(user2)\n    if\n        print("I love CS")\n    elif\n        print("CS is the best")\n    else:\n        print("I like CS better than food")\nelse:\n    print("Who else loves CS?")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex13q",
                data: {
                  id: 11329,
                  base_course: "StudentCSP",
                  name: "ch13ex13q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex13q data-question_label="13.6.13">\n<div id=ch13ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nstate = "Georgia"\nif state == "Georgia":\n    print("It\'s hot")\nif state == "Florida":\n    print("It\'s hot")\nif state == "Alaska":\n    print("It\'s cold")\nelse:\n    print("I don\'t know the weather")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex14q",
                data: {
                  id: 11330,
                  base_course: "StudentCSP",
                  name: "ch13ex14q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex14q data-question_label="13.6.14">\n<div id=ch13ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nif bikes > people:\nprint("We should take the bikes.")\nif bikes < people:\nprint("We should not take the bikes.")\nif bikes == people:\nprint("We can\'t decide.")\n\nif vans > bikes:\nprint("That\'s too many vans.")\nif vans < bikes:\nprint("Maybe we could take the vans.")\nif vans == bikes:\nprint("We still can\'t decide.")\n\nif people > vans:\nprint("Alright, let\'s just take the vans.")\nif people <= vans:\nprint("Fine, let\'s stay home then.")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex15q",
                data: {
                  id: 11331,
                  base_course: "StudentCSP",
                  name: "ch13ex15q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex15q data-question_label="13.6.15">\n<div id=ch13ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nx = .25\nif x <= .25:\n    print("x is in the first quartile - x <= .25")\nif x <= .5 and x > .25:\n    print("x is in the second quartile - .25 < x <= .5")\nif x <= .75 and x > .5:\n    print("x is in the third quartile - .5 < x <= .75")\nif x > .75:\n    print("x is in the fourth quartile - .75 < x <= 1")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex16q",
                data: {
                  id: 11332,
                  base_course: "StudentCSP",
                  name: "ch13ex16q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex16q data-question_label="13.6.16">\n<div id=ch13ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nage = 10\nif age >= 18:\n    print("adult")\nif age < 18:\n    print("teen")\nif age < 13:\n    print("pre-teen")\nif age < 10:\n    print("kid")\nif age < 5:\n    print("toddler")\nif age < 2:\n    print("baby")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex17q",
                data: {
                  id: 11333,
                  base_course: "StudentCSP",
                  name: "ch13ex17q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex17q data-question_label="13.6.17">\n<div id=ch13ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex18q",
                data: {
                  id: 11334,
                  base_course: "StudentCSP",
                  name: "ch13ex18q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex18q data-question_label="13.6.18">\n<div id=ch13ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex19q",
                data: {
                  id: 11335,
                  base_course: "StudentCSP",
                  name: "ch13ex19q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex19q data-question_label="13.6.19">\n<div id=ch13ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex20q",
                data: {
                  id: 11336,
                  base_course: "StudentCSP",
                  name: "ch13ex20q",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch13ex20q data-question_label="13.6.20">\n<div id=ch13ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch13ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.6.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13. Chapter 13 - Using Decisions with Strings/13.6 Chapter 13 Exercises",
                data: {
                  id: 11663,
                  base_course: "StudentCSP",
                  name: "13. Chapter 13 - Using Decisions with Strings/13.6 Chapter 13 Exercises",
                  chapter: "CSPStringDecisions",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "mixup_IF",
            data: {
              title: "13.7 Mixed Up Code Practice",
              num: 700,
              chapter: "CSPStringDecisions",
              subchapter: "mixup_IF",
              id: 29719,
              numQuestions: 11
            },
            children: [
              {
                key: "ch13ex1muc",
                data: {
                  id: 29691,
                  base_course: "StudentCSP",
                  name: "ch13ex1muc",
                  chapter: "CSPStringDecisions",
                  subchapter: "mixup_IF",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch13ex1muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following pseudocode program segment should print the number of temperatures that are above freezing (greater than 32 degrees). But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="13.7.1"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        temperatures <- [42,30,32,19,35,39,38]\nabove_freezing <- 0\n---\nfor EACH item IN temperatures\n---\n    IF item > 32\n---\n        above_freezing <- above_freezing + 1\n---\nDISPLAY(above_freezing)\n---\n        above_freezing <- item #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/mixup_IF",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.7.1",
                  optional: false,
                  description:
                    "The following pseudocode program segment should print the number of temperatures",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex2muc",
                data: {
                  id: 29692,
                  base_course: "StudentCSP",
                  name: "ch13ex2muc",
                  chapter: "CSPStringDecisions",
                  subchapter: "mixup_IF",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch13ex2muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following pseudocode program segment should find the maximum value of a list and display the value. But the blocks have been mixed up and include an extra block that isn’t needed in the solution. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution. Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="13.7.2"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        max <- list[0]\n---\nfor EACH item IN list\n---\n    IF item > max\n---\n        max <- item\n---\nDISPLAY(max)\n---\n    IF item < max #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/mixup_IF",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.7.2",
                  optional: false,
                  description:
                    "The following pseudocode program segment should find the maximum value of a list",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex3muc",
                data: {
                  id: 29693,
                  base_course: "StudentCSP",
                  name: "ch13ex3muc",
                  chapter: "CSPStringDecisions",
                  subchapter: "mixup_IF",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch13ex3muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following pseudocode program segment should increase the value of every item in the list by 1 if the original value is less than 3.  The shorts are originally $39.99 each. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="13.7.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        list <- [0,1,2,3,4]\n---\nfor EACH item IN list\n---\n    IF item < 3\n---\n        item <- item + 1\n---\n    IF item > 3 #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/mixup_IF",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.7.3",
                  optional: false,
                  description:
                    "The following pseudocode program segment should increase the value of every item",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex4muc",
                data: {
                  id: 29694,
                  base_course: "StudentCSP",
                  name: "ch13ex4muc",
                  chapter: "CSPStringDecisions",
                  subchapter: "mixup_IF",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch13ex4muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following pseudocode program segment should print the average value of a list. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="13.7.4"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        avg <- 0\nsum <- 0\n---\nfor EACH item IN list\n---\nsum <- item + sum\n---\nif (length of list) >= 1\n---\navg <- sum / (length of list)\n---\nDISPLAY(avg)\n---\navg <- sum / item #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/mixup_IF",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.7.4",
                  optional: false,
                  description:
                    "The following pseudocode program segment should print the average value of a lis",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex5muc",
                data: {
                  id: 29695,
                  base_course: "StudentCSP",
                  name: "ch13ex5muc",
                  chapter: "CSPStringDecisions",
                  subchapter: "mixup_IF",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch13ex5muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should display who won the game based on the two players’ scores. Arrange the code so that the first IF statement is for a Player 1 win, the second for a Player 2 win and the third for a tie.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="13.7.5"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        player1 <- 10\nplayer2 <- 10\n---\nif player1 > player2\n---\n    DISPLAY("Player 1 wins!")\n---\nif player1 < player2\n---\n    DISPLAY("Player 2 wins!")\n---\nif player1 = player2\n---\n    DISPLAY("It\'s a tie!")\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/mixup_IF",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.7.5",
                  optional: false,
                  description:
                    "The following program segment should display who won the game based on the two p",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex6muc",
                data: {
                  id: 29696,
                  base_course: "StudentCSP",
                  name: "ch13ex6muc",
                  chapter: "CSPStringDecisions",
                  subchapter: "mixup_IF",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch13ex6muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should find and display the minimum value of a list. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="13.7.6"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        min <- list[0]\n---\nfor EACH item IN list\n---\n    IF item < min\n---\n    min <- item\n---\nDISPLAY(min)\n---\nIF item > min #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/mixup_IF",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.7.6",
                  optional: false,
                  description:
                    "The following program segment should find and display the minimum value of a lis",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex7muc",
                data: {
                  id: 29697,
                  base_course: "StudentCSP",
                  name: "ch13ex7muc",
                  chapter: "CSPStringDecisions",
                  subchapter: "mixup_IF",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch13ex7muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should create a grading rubric that assigns a letter grade based on a score. Start with the highest score and work your way down to the lowest score. The blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="13.7.7"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        if x >= 90:\n---\n    print("You got an A")\n---\nelif x < 90 and x >= 80:\n---\n    print("You got a B")\n---\nelif x < 80 and x >= 70:\n---\n    print("You got a C")\n---\nelif x < 70 and x >= 60:\n---\n    print("You got a D")\n---\nelse:\n---\n    print("You failed")\n---\nelif x < 90 and x > 80: #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/mixup_IF",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.7.7",
                  optional: false,
                  description:
                    "The following program segment should create a grading rubric that assigns a lett",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex8muc",
                data: {
                  id: 29698,
                  base_course: "StudentCSP",
                  name: "ch13ex8muc",
                  chapter: "CSPStringDecisions",
                  subchapter: "mixup_IF",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch13ex8muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment contains code from a movie theater kiosk that asks for your age to determine whether you are old enough to watch a PG-13 rated movie and then prints the appropriate statement. The blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="13.7.8"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        age = input("Please enter your age:")\n---\nif age > 12:\n---\nif age < 12: #paired\n---\n    print("Enjoy the film!")\n---\nelif age < 13:\n---\nelif age > 13: #paired\n---\n    print("You must be 13 years old to watch this film")\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/mixup_IF",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.7.8",
                  optional: false,
                  description:
                    "The following program segment contains code from a movie theater kiosk that asks",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex9muc",
                data: {
                  id: 29699,
                  base_course: "StudentCSP",
                  name: "ch13ex9muc",
                  chapter: "CSPStringDecisions",
                  subchapter: "mixup_IF",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch13ex9muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should ask whether the user wants to terminate the program and print out the appropriate statement based on the user’s response. The blocks have been mixed up and include extra blocks that aren’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="13.7.9"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        response = input("Would you like to terminate the program? (Y/N)")\n---\nif response == "Y":\n---\nif input = "Y": #paired\n---\n    print("The program is now ending.")\n---\nelif response == "N":\n---\nelif input = "N": #paired\n---\n    print("The program will continue to run.")\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/mixup_IF",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.7.9",
                  optional: false,
                  description:
                    "The following program segment should ask whether the user wants to terminate the",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch13ex10muc",
                data: {
                  id: 29700,
                  base_course: "StudentCSP",
                  name: "ch13ex10muc",
                  chapter: "CSPStringDecisions",
                  subchapter: "mixup_IF",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch13ex10muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should ask the user to first input two numbers which will serve as parameters, then ask for a third number and determine whether it falls within the range of the first two numbers. The blocks have been mixed up and include extra blocks that aren’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="13.7.10"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        first = input("Enter the first number parameter: ")\nsecond = input("Enter the second number parameter: ")\n---\nnum = input("Enter a number: ")\n---\nif num > first and num < second or num < first and num > second:\n---\nif num > first or num < second and num < first or num > second: #distractor\n---\n    print("Your number falls in the given range")\n---\nelse:\n---\n    print("Your number does not fall in the given range")\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/mixup_IF",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.7.10",
                  optional: false,
                  description:
                    "The following program segment should ask the user to first input two numbers whi",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13. Chapter 13 - Using Decisions with Strings/13.7 Mixed Up Code Practice",
                data: {
                  id: 29719,
                  base_course: "StudentCSP",
                  name: "13. Chapter 13 - Using Decisions with Strings/13.7 Mixed Up Code Practice",
                  chapter: "CSPStringDecisions",
                  subchapter: "mixup_IF",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam12a13",
            data: {
              title: "13.8 Exam Questions for Chapters 12 and 13",
              num: 800,
              chapter: "CSPStringDecisions",
              subchapter: "exam12a13",
              id: 11664,
              numQuestions: 6
            },
            children: [
              {
                key: "e12a13_1",
                data: {
                  id: 11352,
                  base_course: "StudentCSP",
                  name: "e12a13_1",
                  chapter: "CSPStringDecisions",
                  subchapter: "exam12a13",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.8.2" data-multipleanswers="false"  id="e12a13_1"  style="visibility: hidden;">\n    <p>Given the code below, what describes the values of x that will cause the code to print “condition true”?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="n">x</span> <span class="o">&gt;=</span> <span class="mi">5</span> <span class="ow">and</span> <span class="n">x</span> <span class="o">&lt;</span> <span class="mi">20</span><span class="p">:</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;condition true&quot;</span><span class="p">)</span>\n<span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;All done&quot;</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e12a13_1_opt_a">5 to 20</li><li data-component="feedback">This would be true if it was if x >= 5 and x <= 20:</li>\n    \n    <li data-component="answer"  id="e12a13_1_opt_b">6 to 20</li><li data-component="feedback">This would be true if it was if x > 5 and x <= 20:</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e12a13_1_opt_c">5 to 19</li><li data-component="feedback">It will print "condition true" when x is greater than or equal to 5 and less than 20.</li>\n    \n    <li data-component="answer"  id="e12a13_1_opt_d">6 to 19</li><li data-component="feedback">This would be true if it was if x > 5 and x < 20:</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/exam12a13",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.8.2",
                  optional: false,
                  description:
                    "Given the code below, what describes the values of x that will cause the code to",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e12a13_2",
                data: {
                  id: 11353,
                  base_course: "StudentCSP",
                  name: "e12a13_2",
                  chapter: "CSPStringDecisions",
                  subchapter: "exam12a13",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.8.3" data-multipleanswers="false"  id="e12a13_2"  style="visibility: hidden;">\n    <p>What is printed when the following code executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">score</span> <span class="o">=</span> <span class="mi">88</span>\n<span class="k">if</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">90</span><span class="p">:</span>\n    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;A&quot;</span>\n<span class="k">elif</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">80</span><span class="p">:</span>\n    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;B&quot;</span>\n<span class="k">elif</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">70</span><span class="p">:</span>\n    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;C&quot;</span>\n<span class="k">elif</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">60</span><span class="p">:</span>\n    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;D&quot;</span>\n<span class="k">else</span><span class="p">:</span>\n    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;E&quot;</span>\n<span class="nb">print</span><span class="p">(</span><span class="n">grade</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e12a13_2_opt_a">A</li><li data-component="feedback">This would be true if the score was greater than or equal to 90</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e12a13_2_opt_b">B</li><li data-component="feedback">Since the score is less than 90 and greater than or equal to 80 "B" will print.</li>\n    \n    <li data-component="answer"  id="e12a13_2_opt_c">C</li><li data-component="feedback">This would be true if the score was less than 80 and greater than or equal to 70.</li>\n    \n    <li data-component="answer"  id="e12a13_2_opt_d">D</li><li data-component="feedback">This would be true if the score was less than 70 and greater than or equal to 60.</li>\n    \n    <li data-component="answer"  id="e12a13_2_opt_e">E</li><li data-component="feedback">This would be true if the score was less than 60.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/exam12a13",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.8.3",
                  optional: false,
                  description: "What is printed when the following code executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e12a13_3",
                data: {
                  id: 11354,
                  base_course: "StudentCSP",
                  name: "e12a13_3",
                  chapter: "CSPStringDecisions",
                  subchapter: "exam12a13",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.8.4" data-multipleanswers="false"  id="e12a13_3"  style="visibility: hidden;">\n    <p>For what value of num will the following print only “You will meet a new friend.”?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">5</span> <span class="ow">or</span> <span class="n">num</span> <span class="o">&gt;</span> <span class="mi">50</span><span class="p">:</span>\n    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;You will get a treat.&quot;</span><span class="p">)</span>\n<span class="k">if</span> <span class="n">num</span> <span class="o">==</span> <span class="mi">5</span> <span class="ow">or</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">0</span><span class="p">:</span>\n    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;You will lose something.&quot;</span><span class="p">)</span>\n<span class="k">if</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">10</span> <span class="ow">or</span> <span class="n">num</span> <span class="o">&gt;</span> <span class="mi">40</span><span class="p">:</span>\n    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;You will meet a new friend.&quot;</span><span class="p">)</span>\n<span class="k">if</span> <span class="n">num</span> <span class="o">&lt;</span> <span class="mi">20</span> <span class="ow">or</span> <span class="n">num</span> <span class="o">&gt;</span> <span class="mi">60</span><span class="p">:</span>\n    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;You will catch a cold.&quot;</span><span class="p">)</span>\n<span class="k">if</span> <span class="n">num</span> <span class="o">&gt;=</span> <span class="mi">20</span> <span class="ow">and</span> <span class="n">num</span> <span class="o">&lt;=</span> <span class="mi">30</span><span class="p">:</span>\n    <span class="nb">print</span><span class="p">(</span><span class="s2">&quot;You will ace a test.&quot;</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e12a13_3_opt_a">3</li><li data-component="feedback">This will print several things.</li>\n    \n    <li data-component="answer"  id="e12a13_3_opt_b">25</li><li data-component="feedback">This will only print "You will ace a test"</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e12a13_3_opt_c">45</li><li data-component="feedback">This will only print "You will meet a new friend"</li>\n    \n    <li data-component="answer"  id="e12a13_3_opt_d">10</li><li data-component="feedback">This will only print "You will catch a cold"</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/exam12a13",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.8.4",
                  optional: false,
                  description:
                    'For what value of num will the following print only "You will meet a new friend.',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e12a13_4",
                data: {
                  id: 11355,
                  base_course: "StudentCSP",
                  name: "e12a13_4",
                  chapter: "CSPStringDecisions",
                  subchapter: "exam12a13",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.8.5" data-multipleanswers="false"  id="e12a13_4"  style="visibility: hidden;">\n    <p>Which of the following is equivalent to the code segment below?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">:</span>\n    <span class="n">x</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="mi">2</span>\n<span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">4</span><span class="p">:</span>\n    <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span>\n\n<span class="n">I</span><span class="o">.</span>   <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span>\n<span class="n">II</span><span class="o">.</span>  <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">:</span>\n         <span class="n">x</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="mi">2</span>\n<span class="n">III</span><span class="o">.</span> <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">:</span>\n         <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span>\n<span class="n">IV</span><span class="o">.</span>  <span class="k">if</span> <span class="n">x</span> <span class="o">&gt;</span> <span class="mi">2</span><span class="p">:</span>\n         <span class="n">x</span> <span class="o">=</span> <span class="mi">0</span>\n     <span class="k">else</span><span class="p">:</span>\n         <span class="n">x</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="mi">2</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e12a13_4_opt_a">I</li><li data-component="feedback">This would always set x to 0 but if x was 1 in the original code it would not change.</li>\n    \n    <li data-component="answer"  id="e12a13_4_opt_b">II</li><li data-component="feedback">If x is greater than 4 it is reset to 0 in the original code.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e12a13_4_opt_c">III</li><li data-component="feedback">Anytime x is greater than 2 it will be set to 0 in the original code.</li>\n    \n    <li data-component="answer"  id="e12a13_4_opt_d">IV</li><li data-component="feedback">What if x is negative in the original code?</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/exam12a13",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.8.5",
                  optional: false,
                  description: "Which of the following is equivalent to the code segment below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e12a13_5",
                data: {
                  id: 11356,
                  base_course: "StudentCSP",
                  name: "e12a13_5",
                  chapter: "CSPStringDecisions",
                  subchapter: "exam12a13",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="13.8.6" data-multipleanswers="false"  id="e12a13_5"  style="visibility: hidden;">\n    <p>What is the value of grade when the following code executes and score is 93?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="k">if</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">90</span><span class="p">:</span>\n    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;A&quot;</span>\n<span class="k">if</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">80</span><span class="p">:</span>\n    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;B&quot;</span>\n<span class="k">if</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">70</span><span class="p">:</span>\n    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;C&quot;</span>\n<span class="k">if</span> <span class="n">score</span> <span class="o">&gt;=</span> <span class="mi">60</span><span class="p">:</span>\n    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;D&quot;</span>\n<span class="k">else</span>\n    <span class="n">grade</span> <span class="o">=</span> <span class="s2">&quot;E&quot;</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e12a13_5_opt_a">A</li><li data-component="feedback">This would be true if the 2nd - 4th if were elif instead.</li>\n    \n    <li data-component="answer"  id="e12a13_5_opt_b">B</li><li data-component="feedback">This would be true if the score was 83 and the 2nd - 4th if were elif instead.</li>\n    \n    <li data-component="answer"  id="e12a13_5_opt_c">C</li><li data-component="feedback">This would be true if the score was 73 and the 2nd - 4th if were elif instead.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e12a13_5_opt_d">D</li><li data-component="feedback">Since it is true that 93 is greater than 60 this will set grade to "D"</li>\n    \n    <li data-component="answer"  id="e12a13_5_opt_e">E</li><li data-component="feedback">This would be true if score was less than 60.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringDecisions/exam12a13",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "13.8.6",
                  optional: false,
                  description:
                    "What is the value of grade when the following code executes and score is 93?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "13. Chapter 13 - Using Decisions with Strings/13.8 Exam Questions for Chapters 12 and 13",
                data: {
                  id: 11664,
                  base_course: "StudentCSP",
                  name: "13. Chapter 13 - Using Decisions with Strings/13.8 Exam Questions for Chapters 12 and 13",
                  chapter: "CSPStringDecisions",
                  subchapter: "exam12a13",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPTurtleDecisions",
        data: {
          title: "14. Chapter 14 - Using Decisions with Turtles",
          num: 14
        },
        children: [
          {
            key: "turtleFP",
            data: {
              title: "14.1 Turtle Functions and Procedures",
              num: 100,
              chapter: "CSPTurtleDecisions",
              subchapter: "turtleFP",
              id: 11665,
              numQuestions: 3
            },
            children: [
              {
                key: "14_1_1_change_size",
                data: {
                  id: 11442,
                  base_course: "StudentCSP",
                  name: "14_1_1_change_size",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "turtleFP",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="14.1.1" data-multipleanswers="false"  id="14_1_1_change_size"  style="visibility: hidden;">\n    <p>What procedure would you use to change the size of the line the turtle leaves when it moves?</p>\n\n    <li data-component="answer"  id="14_1_1_change_size_opt_a">shape</li><li data-component="feedback">Use shape to set the shape used for the turtle.  It doesn\'t affect the line that is drawn.</li>\n    \n    <li data-component="answer"  id="14_1_1_change_size_opt_b">xcor</li><li data-component="feedback">Use this function to get the x value of the turtle\'s position</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="14_1_1_change_size_opt_c">pensize</li><li data-component="feedback">This changes the width of the line that the turtle draws as it moves.</li>\n    \n    <li data-component="answer"  id="14_1_1_change_size_opt_d">color</li><li data-component="feedback">Use color to change the line color and the turtle color.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPTurtleDecisions/turtleFP",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.1.1",
                  optional: false,
                  description:
                    "What procedure would you use to change the size of the line the turtle leaves wh",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14_1_2_goto",
                data: {
                  id: 11443,
                  base_course: "StudentCSP",
                  name: "14_1_2_goto",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "turtleFP",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="14.1.2" data-multipleanswers="false"  id="14_1_2_goto"  style="visibility: hidden;">\n    <p>What procedure would you use move the turtle to a given x and y position?</p>\n\n    <li data-component="answer"  id="14_1_2_goto_opt_a">stamp</li><li data-component="feedback">Use stamp to leave a copy of turtle shape at the current position.</li>\n    \n    <li data-component="answer"  id="14_1_2_goto_opt_b">xcor</li><li data-component="feedback">Use xcor to get the x value of the turtle\'s position.</li>\n    \n    <li data-component="answer"  id="14_1_2_goto_opt_c">penup</li><li data-component="feedback">Use penup to pick up the pen (stop drawing as you move).</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="14_1_2_goto_opt_d">goto</li><li data-component="feedback">Use goto to move to the given x and y position.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPTurtleDecisions/turtleFP",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.1.2",
                  optional: false,
                  description:
                    "What procedure would you use move the turtle to a given x and y position?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14. Chapter 14 - Using Decisions with Turtles/14.1 Turtle Functions and Procedures",
                data: {
                  id: 11665,
                  base_course: "StudentCSP",
                  name: "14. Chapter 14 - Using Decisions with Turtles/14.1 Turtle Functions and Procedures",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "turtleFP",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "decTurtle",
            data: {
              title: "14.2 Using Decisions with Turtles",
              num: 200,
              chapter: "CSPTurtleDecisions",
              subchapter: "decTurtle",
              id: 11666,
              numQuestions: 3
            },
            children: [
              {
                key: "td_pattern",
                data: {
                  id: 11433,
                  base_course: "StudentCSP",
                  name: "td_pattern",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "decTurtle",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=td_pattern data-question_label="14.2.1">\n<div id=td_pattern_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="td_pattern_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1-4: td1a-line1-4; 6-8: td1a-line6-8; 10-15: td1a-line10-15; 17: td1a-line17; 18: td1a-line18; 19: td1a-line19; 20: td1a-line20; 21: td1a-line21; 22: td1a-line22; 23: td1a-line23; 24: td1a-line24; 25: td1a-line25;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *      # use the turtle library\nfrom sys import *         # use the system library\nsetExecutionLimit(50000)  # let this take up to 50 seconds\nspace = Screen()          # create a turtle screen (space)\n\nwidth = 400               # set the desired width\nspace.setup(width,width)  # set the space width and height\nmaxX = width / 2          # set the max x value to half the width\n\njaz = Turtle()            # create a turtle named jaz\njaz.shape(\'turtle\')       # set the shape for jaz to turtle\njaz.penup()               # pick up the pen (don\'t draw)\njaz.goto(-1 * maxX,100)   # go to the left side of the space\njaz.pendown()             # put the pen down to draw with\njaz.left(60)              # turn the turtle left 60 degrees\n\nfor x in range(10):       # repeat the body 10 times\n    jaz.forward(100)           # go forward 100\n    jaz.right(120)             # turn right 120 degrees\n    jaz.forward(100)           # go forward 100\n    jaz.left(120)              # turn left 120 degrees\n    if (jaz.xcor() >= maxX):   # if at right edge of space\n        jaz.penup()                # pick up the pen\n        jaz.goto(-1 * maxX,jaz.ycor() - 100)  # move left & down\n        jaz.pendown()              # put the pen down\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/decTurtle",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.2.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14_2_1_finish_pattern",
                data: {
                  id: 11434,
                  base_course: "StudentCSP",
                  name: "14_2_1_finish_pattern",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "decTurtle",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="14.2.2" data-multipleanswers="false"  id="14_2_1_finish_pattern"  style="visibility: hidden;">\n    <p>What value should you use for range in line 17 in the program above (td_pattern) to complete the pattern to fill the drawing space?</p>\n\n    <li data-component="answer"  id="14_2_1_finish_pattern_opt_a">12</li><li data-component="feedback">Using a range of 12 will complete the pattern on this line, but what should it be to finish the pattern in the space?</li>\n    \n    <li data-component="answer"  id="14_2_1_finish_pattern_opt_b">14</li><li data-component="feedback">This will stop in the middle of the last line of the pattern.  How many would fill the last row?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="14_2_1_finish_pattern_opt_c">16</li><li data-component="feedback">Each iteration of the loop draws one peak and there are 4 peaks per row.  There is room for 4 rows so the answer is 4 * 4 = 16.</li>\n    \n    <li data-component="answer"  id="14_2_1_finish_pattern_opt_d">18</li><li data-component="feedback">This would try to draw on the line below the end of the drawing area.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/decTurtle",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.2.2",
                  optional: false,
                  description:
                    "What value should you use for range in line 17 in the program above (td_pattern)",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14. Chapter 14 - Using Decisions with Turtles/14.2 Using Decisions with Turtles",
                data: {
                  id: 11666,
                  base_course: "StudentCSP",
                  name: "14. Chapter 14 - Using Decisions with Turtles/14.2 Using Decisions with Turtles",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "decTurtle",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "oddEven",
            data: {
              title: "14.3 Detecting Odd and Even",
              num: 300,
              chapter: "CSPTurtleDecisions",
              subchapter: "oddEven",
              id: 11667,
              numQuestions: 4
            },
            children: [
              {
                key: "td_stripes",
                data: {
                  id: 11435,
                  base_course: "StudentCSP",
                  name: "td_stripes",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "oddEven",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=td_stripes data-question_label="14.3.1">\n<div id=td_stripes_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="td_stripes_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1-4: td2a-line1-4; 6-7: td2a-line6-7; 9-10: td2a-line9-10; 12: td2a-line12; 13: td2a-line13; 14-15: td2a-line14-15; 16-17: td2a-line16-17; 18: td2a-line18; 19: td2a-line19; 20: td2a-line20;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *             # use the turtle library\nfrom sys import *                # use the system library\nsetExecutionLimit(100000)        # let this take up to 100 seconds\nspace = Screen()                 # create a turtle screen (space)\n\nwidth = space.window_width()     # get the width of the screen (space)\nmaxX = width / 2                 # set the max x value to half the width\n\nsue = Turtle()                   # create a turtle named sue\nsue.pensize(10)                  # set the pen width\n\nfor y in range(5):               # repeat 5 times\n    sue.penup()                      # pick up the pen\n    if y % 2 == 0:                   # if even row\n        sue.color(\'red\')                 # set the color to red\n    if y % 2 == 1:                   # if odd row\n        sue.color(\'black\')               # set the color to black\n    sue.goto(-1 * maxX,y * 10)       # move to the next row\n    sue.pendown()                    # put the pen down\n    sue.forward(width)               # move forward by the width\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/oddEven",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14_3_1_finish_stripes",
                data: {
                  id: 11436,
                  base_course: "StudentCSP",
                  name: "14_3_1_finish_stripes",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "oddEven",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="14.3.2" data-multipleanswers="false"  id="14_3_1_finish_stripes"  style="visibility: hidden;">\n    <p>What value should you use as the parameter for the range function in line 12 to fill the top half of the drawing space with stripes?  The height of the space is 320.</p>\n\n    <li data-component="answer"  id="14_3_1_finish_stripes_opt_a">10</li><li data-component="feedback">This will stop before filling the top half of the space. Try it.</li>\n    \n    <li data-component="answer"  id="14_3_1_finish_stripes_opt_b">16</li><li data-component="feedback">The turtle starts at the middle of height and draws 5 pixels below it and 5 pixels above it, so this leaves 5 pixels at the top that need to be filled.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="14_3_1_finish_stripes_opt_c">17</li><li data-component="feedback">The height of the top half is 160 and each stripe is a height of 10 so 16 nearly does it, but 17 fills the entire area.  The turtle starts in the middle of the space so the first row has 5 pixels above the middle and 5 below.</li>\n    \n    <li data-component="answer"  id="14_3_1_finish_stripes_opt_d">32</li><li data-component="feedback">This would fill more than the top half.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/oddEven",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.3.2",
                  optional: false,
                  description:
                    "What value should you use as the parameter for the range function in line 12 to ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14_3_2_vert_stripes",
                data: {
                  id: 11437,
                  base_course: "StudentCSP",
                  name: "14_3_2_vert_stripes",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "oddEven",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="14_3_2_vert_stripes" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program should draw vertical color stipes alternating between red and black, but the code is mixed up.  Drag the block from left to right and place them in the correct order with the correct indention.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="14.3.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        from turtle import *\nspace = Screen()\nheight = space.window_height()\n---\nmaxY = height / 2\nsue = Turtle()\nsue.pensize(10)\nsue.left(90)\n---\nfor index in range(5):\n---\n    sue.penup()\n---\n    if index % 2 == 0:\n---\n        sue.color(\'red\')\n---\n    else:\n---\n        sue.color(\'black\')\n---\n    sue.goto(index * 10, -1 * maxY)\n    sue.pendown()\n    sue.forward(height)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/oddEven",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.3.3",
                  optional: false,
                  description:
                    "The following program should draw vertical color stipes alternating between red ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14. Chapter 14 - Using Decisions with Turtles/14.3 Detecting Odd and Even",
                data: {
                  id: 11667,
                  base_course: "StudentCSP",
                  name: "14. Chapter 14 - Using Decisions with Turtles/14.3 Detecting Odd and Even",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "oddEven",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "random",
            data: {
              title: "14.4 Using Random Numbers",
              num: 400,
              chapter: "CSPTurtleDecisions",
              subchapter: "random",
              id: 11668,
              numQuestions: 5
            },
            children: [
              {
                key: "td_scribble",
                data: {
                  id: 11438,
                  base_course: "StudentCSP",
                  name: "td_scribble",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "random",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=td_scribble data-question_label="14.4.1">\n<div id=td_scribble_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="td_scribble_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1-2: td3-line1-2; 3-5: td3-line3-5; 6-9: td3-line6-9; 10: td3-line10; 11: td3-line11; 12-13: td3-line12-13; 14-15: td3-line14-15; 16-18: td3-line16-18;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *      # use the turtle library\nimport random\nspace = Screen()          # create a turtle screen (space)\nwidth = space.window_width()\nheight = space.window_height()\nmaxX = width / 2  # get the max x value\nminX = -1 * maxX\nmaxY = height / 2\nminY = -1 * maxY\njaz = Turtle()            # create a turtle named jaz\nfor num in range(10):\n    if num % 2 == 0:             # if even row\n            jaz.color(\'red\')          # set the color to red\n    if num % 2 == 1:             # if odd row\n            jaz.color(\'black\')       # set the color to black\n    randX = random.randrange(minX, maxX)\n    randY = random.randrange(minY, maxY)\n    jaz.goto(randX,randY)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/random",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14_4_1_randrange1",
                data: {
                  id: 11439,
                  base_course: "StudentCSP",
                  name: "14_4_1_randrange1",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "random",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="14.4.2" data-multipleanswers="false"  id="14_4_1_randrange1"  style="visibility: hidden;">\n    <p>What could you use to limit the x values to just the left half of the drawing space (screen)?</p>\n\n    <li data-component="answer"  id="14_4_1_randrange1_opt_a">randX = random.randrange(minX, maxX)</li><li data-component="feedback">This will range from the minimum x value (inclusive) to the maximum x value (exclusive).  It will cover the whole width of the drawing area.</li>\n    \n    <li data-component="answer"  id="14_4_1_randrange1_opt_b">randX = random.randrange(0, maxX)</li><li data-component="feedback">This will range from 0 to the maximum x value (exclusive).  It will cover the right half of the drawing area.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="14_4_1_randrange1_opt_c">randX = random.randrange(minX, 0)</li><li data-component="feedback">This will range from the minimum x value (inclusive) to 0.  It will cover the left half o the drawing area.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/random",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.4.2",
                  optional: false,
                  description:
                    "What could you use to limit the x values to just the left half of the drawing sp",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14_4_2_WSq",
                data: {
                  id: 11440,
                  base_course: "StudentCSP",
                  name: "14_4_2_WSq",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "random",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=14_4_2_WSq data-question_label="14.4.3">\n<div id=14_4_2_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="14_4_2_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nfrom sys import *\nsetExecutionLimit(50000)\nspace = Screen()\n\nwidth = 400\nspace.setup(width,width)\nmaxX = width / 2\n\njaz = Turtle()\njaz.shape(\'turtle\')\njaz.penup()\njaz.goto(-1 * maxX,100)\njaz.pendown()\njaz.left(60)\n\nfor x in range(10):\n    jaz.forward(100)\n    jaz.right(120)\n    jaz.forward(100)\n    jaz.left(120)\n    if (jaz.xcor() >= maxX):\n        jaz.penup()\n        jaz.goto(-1 * maxX,jaz.ycor() - 100)\n        jaz.pendown()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/random",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.4.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14_4_2_WSa",
                data: {
                  id: 11441,
                  base_course: "StudentCSP",
                  name: "14_4_2_WSa",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "random",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=14_4_2_WSa data-question_label="14.4.4">\n<div id=14_4_2_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="14_4_2_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# CREATE THE TURTLE WORLD\nfrom turtle import *\nimport random\nfrom sys import *\nsetExecutionLimit(50000)\nspace = Screen()\n\n# SET UP THE SCREEN SIZE\nwidth = 400\nspace.setup(width,width)\nmaxX = width / 2\n\n# MOVE TURTLE TO STARTING POSITION\njaz = Turtle()\njaz.shape(\'turtle\')\njaz.penup()\njaz.goto(-1 * maxX,100)\njaz.pendown()\njaz.left(60)\n\n# DRAW THE CHEVRON DESIGN\nfor x in range(10):\n  rand = random.randrange(0, 2)\n  if (rand == 0):\n    jaz.color("green")\n  else:\n    jaz.color("blue")\n  jaz.forward(100)\n  jaz.right(120)\n  jaz.stamp()\n  jaz.forward(100)\n  jaz.left(120)\n  if (jaz.xcor() >= maxX):\n    jaz.penup()\n    jaz.goto(-1 * maxX,jaz.ycor() - 100)\n    jaz.pendown()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/random",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.4.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14. Chapter 14 - Using Decisions with Turtles/14.4 Using Random Numbers",
                data: {
                  id: 11668,
                  base_course: "StudentCSP",
                  name: "14. Chapter 14 - Using Decisions with Turtles/14.4 Using Random Numbers",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "random",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "collisions",
            data: {
              title: "14.5 Avoiding Collisions",
              num: 500,
              chapter: "CSPTurtleDecisions",
              subchapter: "collisions",
              id: 11669,
              numQuestions: 2
            },
            children: [
              {
                key: "td_avoid_collision",
                data: {
                  id: 11432,
                  base_course: "StudentCSP",
                  name: "td_avoid_collision",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "collisions",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=td_avoid_collision data-question_label="14.5.1">\n<div id=td_avoid_collision_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="td_avoid_collision_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1-2: td4-line1-2; 3-6: td4-line3-6; 7: td4-line7; 8-11: td4-line8-11; 12: td4-line12; 13-14: td4-line13-14; 15-17: td4-line15-17;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\njaz = Turtle()\njaz.shape(\'turtle\')\nmia = Turtle()\nmia.shape(\'turtle\')\nmia.color(\'red\')\nmia.penup()\nmia.goto(100,0)\nmia.pendown()\nmia.right(180)\nfor x in range(20):\n    jaz.forward(10)\n    mia.forward(10)\n    if (mia.xcor() - jaz.xcor() < 40):\n            jaz.right(45)\n            mia.right(45)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/collisions",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.5.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14. Chapter 14 - Using Decisions with Turtles/14.5 Avoiding Collisions",
                data: {
                  id: 11669,
                  base_course: "StudentCSP",
                  name: "14. Chapter 14 - Using Decisions with Turtles/14.5 Avoiding Collisions",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "collisions",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "14.6 Chapter 14 - Summary",
              num: 600,
              chapter: "CSPTurtleDecisions",
              subchapter: "summary",
              id: 11670,
              numQuestions: 1
            },
            children: [
              {
                key: "14. Chapter 14 - Using Decisions with Turtles/14.6 Chapter 14 - Summary",
                data: {
                  id: 11670,
                  base_course: "StudentCSP",
                  name: "14. Chapter 14 - Using Decisions with Turtles/14.6 Chapter 14 - Summary",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "14.7 Chapter 14 Exercises",
              num: 700,
              chapter: "CSPTurtleDecisions",
              subchapter: "Exercises",
              id: 11671,
              numQuestions: 21
            },
            children: [
              {
                key: "ch14ex1q",
                data: {
                  id: 11412,
                  base_course: "StudentCSP",
                  name: "ch14ex1q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex1q data-question_label="14.7.1">\n<div id=ch14ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import               # use the turtle library\nfrom sys import *                # use the system library\nsetExecutionLimit(100000)        # let this take up to 100 seconds\nspace = screen()                 # create a turtle screen (space)\n\nwidth = space.window_width()     # get the width of the screen (space)\nmaxX = width / 2                 # set the max x value to half the width\n\nsue = Turtle(                    # create a turtle named sue\nsue.pensize(10)                  # set the pen width\n\nfor y in range(5):               # repeat 5 times\n    sue.penup()                      # pick up the pen\n    if y % 2 == 0:                   # if even row\n    sue.color(\'red\')                 # set the color to red\n    if y % 2 == 1:                   # if odd row\n        sue.color(\'black\')               # set the color to black\n    sue.goTo(-1 * maxX,y * 10)       # move to the next row\n    sue.pendown()                    # put the pen down\n    sue.forward(width)               # move forward by the width\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex2q",
                data: {
                  id: 11413,
                  base_course: "StudentCSP",
                  name: "ch14ex2q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex2q data-question_label="14.7.2">\n<div id=ch14ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef draw(jaz, maxX):\n    for x in range(3):\n        jaz.forward(100)\n        jaz.right(120)\n        jaz.forward(100)\n        jaz.left(120)\n        if (jaz.xcor() <= maxX):\n            jaz.penup()\n            jaz.goto(-1 * maxX,jaz.ycor() - 100)\n            jaz.pendown()\n\ndef turtleSetup(width, jaz):\n    space.setup(width,width)  # set the space width and height\n    maxX = width / 2          # set the max x value to half the width\n    jaz.shape(\'turtle\')\n    jaz.penup()\n    jaz.goto(-1 * maxX,100)\n    jaz.pendown()\n    jaz.left(60)\n    draw(jaz, maxX)\n\n\nfrom turtle import *      # use the turtle library\nfrom sys import *         # use the system library\nsetExecutionLimit(50000)  # let this take up to 50 seconds\nspace = Screen()          # create a turtle screen (space)\njaz = Turtle()\nwidth = 400\n\nturtleSetup(width, jaz)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex3q",
                data: {
                  id: 11414,
                  base_course: "StudentCSP",
                  name: "ch14ex3q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex3q data-question_label="14.7.3">\n<div id=ch14ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *             # use the turtle library\nfrom sys import *                # use the system library\nsetExecutionLimit(100000)        # let this take up to 100 seconds\nspace = Screen()                 # create a turtle screen (space)\n\nwidth = space.window_width()     # get the width of the screen (space)\nmaxX = width / 2                 # set the max x value to half the width\n\nsue = Turtle()                   # create a turtle named sue\nsue.shape("turtle")\nsue.penup()\nsue.left(45)\n\nfor y in range(4):               # repeat 4 times\nif y % 2 == 0:                   # if even row\nsue.color(\'red\')                 # set the color to red\nif y % 2 == 1:                   # if odd row\nsue.color(\'black\')               # set the color to black\nsue.forward(100)\nsue.stamp()\nsue.backward(100)\nsue.left(90)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex4q",
                data: {
                  id: 11415,
                  base_course: "StudentCSP",
                  name: "ch14ex4q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex4q data-question_label="14.7.4">\n<div id=ch14ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *      # use the turtle library\nfrom sys import *         # use the system library\nsetExecutionLimit(50000)  # let this take up to 50 seconds\nspace = Screen()          # create a turtle screen (space)\n\nheight = 400               # set the desired height\nspace.setup(height,height)  # set the space width and height\nmaxY = height / 2          # set the max y value to half the height\nt = Turtle()\nt.shape(\'turtle\')\n\nfor x in range(10):\nif (100 + t.ycor() > maxY):\nt.color("blue")\nt.left(180)\nt.backward(100)\nelif (t.ycor() - 100 > (-1* maxY)):\nt.color("red")\nt.left(180)\nt.forward(100)\nelse\nt.color("green")\nt.forward(100)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex5q",
                data: {
                  id: 11416,
                  base_course: "StudentCSP",
                  name: "ch14ex5q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex5q data-question_label="14.7.5">\n<div id=ch14ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef turtleLoop(jaz, maxX):\n    for x in range(10):       # repeat the body 10 times\n        jaz.forward100)           # go forward 100\n        jaz.right(120)             # turn right 120 degrees\n        jaz.forward(100)           # go forward 100\n        jaz.left(120              # turn left 120 degrees\n        if (jaz.xcor() >= maxX):   # if at right edge of space\n            jaz.penup()                # pick up the pen\n            jaz.goto(-1 * maxX,jaz.ycor() - 100)  # move left & down\n            jaz.pendown()              # put the pen down\n\ndef turtleProcedure(width, jaz):\n    space.setup(width,width)  # set the space width and height\n    maxX = width / 2          # set the max x value to half the width\n    jaz.shape(\'turtle\')       # set the shape for jaz to turtle\n    jaz.penup()               # pick up the pen (don\'t draw)\n    jaz.goto(-1 * maxX,100)   # go to the left side of the space\n    jaz.penDown()             # put the pen down to draw with\n    jaz.left(60)              # turn the turtle left 60 degrees\n    turtleLoop(jaz, maxX)     # call the other function\n\n\nfrom turtle  *      # use the turtle library\nfrom sys import *         # use the system library\nsetExecutionLimit(50000)  # let this take up to 50 seconds\nSpace = Screen()          # create a turtle screen (space)\n\nwidth = 400               # set the desired width\njaz = Turtle()            # create a turtle named jaz\nturtleProcedure(width,jaz)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex6q",
                data: {
                  id: 11417,
                  base_course: "StudentCSP",
                  name: "ch14ex6q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex6q data-question_label="14.7.6">\n<div id=ch14ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *             # use the turtle library\nfrom sys import *                # use the system library\nsetExecutionLimit(100000)        # let this take up to 100 seconds\nspace = Screen()                 # create a turtle screen (space)\n\nwidth = space.window_width()     # get the width of the screen (space)\nmaxX = width / 2                 # set the max x value to half the width\n\nsue = Turtle()                   # create a turtle named sue\nsue.pensize(10)                  # set the pen width\n\nfor y in range(5):               # repeat 5 times\n    sue.penup()                      # pick up the pen\n    if y % 2 == 0:                   # if even row\n        sue.color(\'yellow\')                 # set the color to yellow\n    if y % 2 == 1:                   # if odd row\n        sue.color(\'black\')               # set the color to black\n    sue.goto(-1 * maxX,y * 10)       # move to the next row\n    sue.pendown()                    # put the pen down\n    sue.forward(width)               # move forward by the width\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex7q",
                data: {
                  id: 11418,
                  base_course: "StudentCSP",
                  name: "ch14ex7q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex7q data-question_label="14.7.7">\n<div id=ch14ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *      # use the turtle library\nimport random\nspace = Screen()          # create a turtle screen (space)\nwidth = space.window_width()\nheight = space.window_height()\nmaxX = width / 2  # get the max x value\nminX = -1 * maxX\nmaxY = height / 2\nminY = -1 * maxY\njaz = Turtle()            # create a turtle named jaz\nfor num in range(10):\n    if num % 2 == 0              # if even row\n        jaz.color(\'red\')          # set the color to red\n    if num % 2 == 1:             # if odd row\n    jaz.color(\'black\')       # set the color to black\n    randX = random.randrange(minX, maxX)\n    randY = random.randrange(minY, maxY)\n    jaz.goto(randX,randY)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex8q",
                data: {
                  id: 11419,
                  base_course: "StudentCSP",
                  name: "ch14ex8q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex8q data-question_label="14.7.8">\n<div id=ch14ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *             # use the turtle library\nfrom sys import *                # use the system library\nsetExecutionLimit(100000)        # let this take up to 100 seconds\nspace = Screen()                 # create a turtle screen (space)\n\nheight = space.window_height()     # get the height of the screen (space)\nwidth = space.window_width        #get the width\nmaxY = height / 2                 # set the max y value to half the height\nmaxX = width\n\nsue = Turtle()                   # create a turtle named sue\nsue.pensize(10)                  # set the pen width\n\nfor x in range(4):               # repeat 5 times\n    sue.penup()                      # pick up the pen\n    if x % 2 == 0:                   # if even row\n    sue.color(\'yellow\')                 # set the color to yellow\n    sue.goto(-1 * maxX, x * 10)\n    sue.penup()\n    sue.forward(height)\n    sue.left(90)\n    if x % 2 == 1:                   # if odd row\n        sue.color(\'black\')               # set the color to black\n        sue.goto(x * 10,-1 * maxY)\n        sue.pendown()\n        sue.forward(height)\n        sue.left(90)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex9q",
                data: {
                  id: 11420,
                  base_course: "StudentCSP",
                  name: "ch14ex9q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex9q data-question_label="14.7.9">\n<div id=ch14ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\njaz = Turtle()\nmia = Turtle()\nmia.color(\'red\')\nmia.penup()\nmia.goto(100,0)\nmia.pendown()\nmia.right(180)\nfor x in range(20):\njaz.forward(10)\nmia.forward(10)\nif (mia.xcor() - jaz.xcor() < 40):\njaz.right(45)\nmia.right(45)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex10q",
                data: {
                  id: 11421,
                  base_course: "StudentCSP",
                  name: "ch14ex10q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex10q data-question_label="14.7.10">\n<div id=ch14ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *      # use the turtle library\nimport random\nspace = Screen()          # create a turtle screen (space)\nwidth = space.window_width()\nheight = space.window_height()\nmaxX = width / 2  # get the max x value\nminX = -1 * maxX\nmaxY = height / 2\nminY = -1 * maxY\njaz = Turtle()            # create a turtle named jaz\nfor num in range(10):\nif num % 2 == 0             # if even row\n            jaz.color(\'red\')          # set the color to red\n    if num % 2 == 1             # if odd row\n    jaz.color(\'black\')       # set the color to black\n    randX = random.randrange(minX, maxX)\n    randY = random.randrange(minY, maxY)\n    jaz.goto(randX,randY)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex11q",
                data: {
                  id: 11422,
                  base_course: "StudentCSP",
                  name: "ch14ex11q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex11q data-question_label="14.7.11">\n<div id=ch14ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\njose = Turtle()\njose.shape("turtle")\njose.penup()\nfor size in range(10):\n    jose.forward(50)\n    jose.stamp()\n    jose.forward(-50)\n    jose.right(36)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex12q",
                data: {
                  id: 11423,
                  base_course: "StudentCSP",
                  name: "ch14ex12q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex12q data-question_label="14.7.12">\n<div id=ch14ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *      # use the turtle library\nimport random\nspace = Screen()          # create a turtle screen (space)\nwidth = space.window_width()\nheight = space.window_height()\nmaxX = width / 2  # get the max x value\nminX = -1 * maxX\nmaxY = height / 2\nminY = -1 * maxY\njaz = Turtle()            # create a turtle named jaz\nfor x in range(10):\n    num =\n    if num % 3 == 0:             # if even row\n            jaz.color(\'red\')          # set the color to red\n    if num % 2 == 1:             # if odd row\n            jaz.color(\'black\')       # set the color to black\n    if num % 1 == 2:\n            jaz.color(\'blue\')\n    randX = random.randrange(minX, maxX)\n    randY = random.randrange(minY, maxY)\n    jaz.goto(randX,randY)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex13q",
                data: {
                  id: 11424,
                  base_course: "StudentCSP",
                  name: "ch14ex13q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex13q data-question_label="14.7.13">\n<div id=ch14ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\ntess = Turtle()\ntess.shape("turtle")\ntess.penup()                  # ask tess to pick up her pen\nfor size in range(5, 60, 2):  # start with size = 5 and grow by 2\n    tess.stamp()                # leave an impression on the canvas\n    tess.forward(size)          # move tess along\n    tess.right(24)              # and turn her\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex14q",
                data: {
                  id: 11425,
                  base_course: "StudentCSP",
                  name: "ch14ex14q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex14q data-question_label="14.7.14">\n<div id=ch14ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *\nspace = Screen()\njaz = Turtle()\nmia = Turtle()\nmia.color(\'red\')\nmia.penup()\nmia.goto(100,0)\nmia.pendown()\nmia.right(180)\nfor x in range(20):\n    jaz.forward(10)\n    mia.forward(10)\n    if (mia.xcor() + jaz.xcor() > 40):\n        jaz.right(45)\n        mia.right(45)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex15q",
                data: {
                  id: 11426,
                  base_course: "StudentCSP",
                  name: "ch14ex15q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex15q data-question_label="14.7.15">\n<div id=ch14ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom turtle import *             # use the turtle library\nfrom sys import *                # use the system library\nsetExecutionLimit(100000)        # let this take up to 100 seconds\nspace = Screen()                 # create a turtle screen (space)\n\nwidth = space.window_width()     # get the width of the screen (space)\nmaxX = width / 2                 # set the max x value to half the width\n\nsue = Turtle()                   # create a turtle named sue\nsue.pensize(10)                  # set the pen width\n\nfor y in range(10):               # repeat 10 times\n    sue.penup()                      # pick up the pen\n    if y % 2 == 0:                   # if even row\n        sue.color(\'red\')                 # set the color to red\n    if y % 2 == 1:                   # if odd row\n        sue.color(\'black\')               # set the color to black\n    sue.goto(-1 * maxX,y * 10)       # move to the next row\n    sue.pendown()                    # put the pen down\n    sue.forward(width)               # move forward by the width\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex16q",
                data: {
                  id: 11427,
                  base_course: "StudentCSP",
                  name: "ch14ex16q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex16q data-question_label="14.7.16">\n<div id=ch14ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef turtleLoop(jaz,mia):\n    for x in range(20):\n        jaz.forward(10)\n        mia.forward(10)\n        if (mia.xcor() - jaz.xcor() < 30):\n\n\ndef turtleDraw(jaz, mia):\n    jaz.shape(\'turtle\')\n    mia.shape(\'turtle\')\n    mia.color(\'red\')\n    mia.penup()\n    mia.goto(100,0)\n    mia.pendown()\n    mia.right(180)\n    turtleLoop(jaz,mia)\n\nfrom turtle import *\nspace = Screen()\njaz = Turtle()\nmia = Turtle()\nturtleDraw(jaz,mia)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex17q",
                data: {
                  id: 11428,
                  base_course: "StudentCSP",
                  name: "ch14ex17q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex17q data-question_label="14.7.17">\n<div id=ch14ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex18q",
                data: {
                  id: 11429,
                  base_course: "StudentCSP",
                  name: "ch14ex18q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex18q data-question_label="14.7.18">\n<div id=ch14ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex19q",
                data: {
                  id: 11430,
                  base_course: "StudentCSP",
                  name: "ch14ex19q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex19q data-question_label="14.7.19">\n<div id=ch14ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch14ex20q",
                data: {
                  id: 11431,
                  base_course: "StudentCSP",
                  name: "ch14ex20q",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch14ex20q data-question_label="14.7.20">\n<div id=ch14ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch14ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPTurtleDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "14.7.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "14. Chapter 14 - Using Decisions with Turtles/14.7 Chapter 14 Exercises",
                data: {
                  id: 11671,
                  base_course: "StudentCSP",
                  name: "14. Chapter 14 - Using Decisions with Turtles/14.7 Chapter 14 Exercises",
                  chapter: "CSPTurtleDecisions",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPImageDecisions",
        data: {
          title: "15. Chapter 15 - Using Decisions with Images",
          num: 15
        },
        children: [
          {
            key: "decImages",
            data: {
              title: "15.1 Using Decisions with Images",
              num: 100,
              chapter: "CSPImageDecisions",
              subchapter: "decImages",
              id: 11672,
              numQuestions: 2
            },
            children: [
              {
                key: "Color_Replace",
                data: {
                  id: 10778,
                  base_course: "StudentCSP",
                  name: "Color_Replace",
                  chapter: "CSPImageDecisions",
                  subchapter: "decImages",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Color_Replace data-question_label="15.1.1">\n<div id=Color_Replace_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Color_Replace_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: id1-line1; 4: id1-line4; 7-8: id1-line7-8; 9: id1-line9; 10-12: id1-line10-12; 15: id1-line15; 18: id1-line18; 21: id1-line21; 24-25: id1-line23-24;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("gal2.jpg")\n\n# LOOP THROUGH ALL PIXELS\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight()):\n        p = img.getPixel(x, y)\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # VALUES FOR THE NEW COLOR\n        if r > 200 and g < 100 and b < 100:\n\n            # CREATE THE COLOR\n            newPixel = Pixel(0, g, b)\n\n            # CHANGE THE IMAGE\n            img.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/decImages",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.1.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "15. Chapter 15 - Using Decisions with Images/15.1 Using Decisions with Images",
                data: {
                  id: 11672,
                  base_course: "StudentCSP",
                  name: "15. Chapter 15 - Using Decisions with Images/15.1 Using Decisions with Images",
                  chapter: "CSPImageDecisions",
                  subchapter: "decImages",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "combineImages",
            data: {
              title: "15.2 Combining Pictures",
              num: 200,
              chapter: "CSPImageDecisions",
              subchapter: "combineImages",
              id: 11673,
              numQuestions: 4
            },
            children: [
              {
                key: "Copy_Non_White",
                data: {
                  id: 10775,
                  base_course: "StudentCSP",
                  name: "Copy_Non_White",
                  chapter: "CSPImageDecisions",
                  subchapter: "combineImages",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Copy_Non_White data-question_label="15.2.1">\n<div id=Copy_Non_White_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Copy_Non_White_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: id2a-line1; 4-5: id2a-line4-5; 8-9: id2a-line8-9; 10: id2a-line10; 11-13: id2a-line11-13; 16: id2a-line16; 19: id2a-line19; 22-23: id2a-line21-22;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE THE IMAGES\nimg1 = Image("lady_tiny.png")\nimg2 = Image("eiffel.jpg")\n\n# LOOP THROUGH ALL THE PIXELS IN IMG1\nfor x in range(img1.getWidth()):\n    for y in range(img1.getHeight()):\n        p1 = img1.getPixel(x, y)\n        r1 = p1.getRed()\n        g1 = p1.getGreen()\n        b1 = p1.getBlue()\n\n        # CHECK IF THE PIXEL ISN\'T WHITE\n        if r1 < 250 and g1 < 250 and b1 < 250:\n\n            # COPY THE COLOR TO IMG2\n            img2.setPixel(x, y + 130, p1)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img2.getWidth(),img2.getHeight())\nimg2.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/combineImages",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.2.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "15_2_1_WSq",
                data: {
                  id: 10776,
                  base_course: "StudentCSP",
                  name: "15_2_1_WSq",
                  chapter: "CSPImageDecisions",
                  subchapter: "combineImages",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=15_2_1_WSq data-question_label="15.2.2">\n<div id=15_2_1_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="15_2_1_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/combineImages",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.2.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "15_2_1_WSa",
                data: {
                  id: 10777,
                  base_course: "StudentCSP",
                  name: "15_2_1_WSa",
                  chapter: "CSPImageDecisions",
                  subchapter: "combineImages",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=15_2_1_WSa data-question_label="15.2.3">\n<div id=15_2_1_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="15_2_1_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("gal2.jpg")\n\n# LOOP THROUGH ALL PIXELS\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight()):\n        p = img.getPixel(x, y)\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # VALUES FOR THE NEW COLOR\n        if r >250 and g > 250 and b >250:\n          newPixel = Pixel(128, 0, 128)\n          img.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/combineImages",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.2.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "15. Chapter 15 - Using Decisions with Images/15.2 Combining Pictures",
                data: {
                  id: 11673,
                  base_course: "StudentCSP",
                  name: "15. Chapter 15 - Using Decisions with Images/15.2 Combining Pictures",
                  chapter: "CSPImageDecisions",
                  subchapter: "combineImages",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "imageIfElse",
            data: {
              title: "15.3 If and Else with Images",
              num: 300,
              chapter: "CSPImageDecisions",
              subchapter: "imageIfElse",
              id: 11674,
              numQuestions: 3
            },
            children: [
              {
                key: "Edge_Detection",
                data: {
                  id: 10784,
                  base_course: "StudentCSP",
                  name: "Edge_Detection",
                  chapter: "CSPImageDecisions",
                  subchapter: "imageIfElse",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Edge_Detection data-question_label="15.3.1">\n<div id=Edge_Detection_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Edge_Detection_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural Tour*doubleq*;  1: id2b-line1; 4: id2b-line4; 7-8: id2b-line7-8; 9: id2b-line9; 10: id2b-line10; 11-13: id2b-line11-13; 14: id2b-line14; 15-17: id2b-line15-17; 18: id2b-line18; 21-22: id2b-line21-22; 23-24: id2b-line23-24; 27: id2b-line27; 30-31: id2b-line29-30;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("swan.jpg")\n\n# LOOP THROUGH ALL BUT LAST COLUMN\nfor x in range(img.getWidth() - 1):\n    for y in range(img.getHeight()):\n        p = img.getPixel(x, y)\n        p2 = img.getPixel(x + 1, y)\n        r1 = p.getRed()\n        g1 = p.getGreen()\n        b1 = p.getBlue()\n        average1 = (r1 + g1 + b1) / 3\n        r2 = p2.getRed()\n        g2 = p2.getGreen()\n        b2 = p2.getBlue()\n        average2 = (r2 + g2 + b2) / 3\n\n        # VALUES FOR THE NEW COLOR\n        if abs(average2 - average1) > 10:\n            newPixel = Pixel(0, 0, 0)\n        else:\n            newPixel = Pixel(255, 255, 255)\n\n        # CHANGE THE IMAGE\n        img.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/imageIfElse",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "15_3_1_Edge",
                data: {
                  id: 10785,
                  base_course: "StudentCSP",
                  name: "15_3_1_Edge",
                  chapter: "CSPImageDecisions",
                  subchapter: "imageIfElse",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="15.3.2" data-multipleanswers="false"  id="15_3_1_Edge"  style="visibility: hidden;">\n    <p>How many different colors will be in our image (except the last column) when we are done?</p>\n\n    <li data-component="answer"  id="15_3_1_Edge_opt_a">0</li><li data-component="feedback">Black and white are colors.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="15_3_1_Edge_opt_b">2</li><li data-component="feedback">This image will only have black or white pixels in all columns except the rightmost one.  The pixel colors in the rightmost column will not be changed.</li>\n    \n    <li data-component="answer"  id="15_3_1_Edge_opt_c">256</li><li data-component="feedback">This would be true if we were only using shades of gray, but we are only using two colors.</li>\n    \n    <li data-component="answer"  id="15_3_1_Edge_opt_d">16,777,216 (= 256 * 256 * 256)</li><li data-component="feedback">This would be true if we were using all color values, but we are only using black and white.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/imageIfElse",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.3.2",
                  optional: false,
                  description:
                    "How many different colors will be in our image (except the last column) when we ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "15. Chapter 15 - Using Decisions with Images/15.3 If and Else with Images",
                data: {
                  id: 11674,
                  base_course: "StudentCSP",
                  name: "15. Chapter 15 - Using Decisions with Images/15.3 If and Else with Images",
                  chapter: "CSPImageDecisions",
                  subchapter: "imageIfElse",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "imageMultIf",
            data: {
              title: "15.4 Multiple If’s with Images",
              num: 400,
              chapter: "CSPImageDecisions",
              subchapter: "imageMultIf",
              id: 11675,
              numQuestions: 3
            },
            children: [
              {
                key: "Posterize",
                data: {
                  id: 10786,
                  base_course: "StudentCSP",
                  name: "Posterize",
                  chapter: "CSPImageDecisions",
                  subchapter: "imageMultIf",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Posterize data-question_label="15.4.1">\n<div id=Posterize_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Posterize_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural Tour*doubleq*; 1: id3-line1; 4: id3-line4; 7-8: id3-line7-8; 9: id3-line9; 11-13: id3-line11-13; 16-17: id3-line16-17; 18-19: id3-line18-19; 20-21: id3-line20-21; 22-23: id3-line22-23; 24-25: id3-line24-25; 26-27: id3-line26-27; 30: id3-line30; 33: id3-line33; 36-37: id3-line35-36;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("arch.jpg")\n\n# LOOP THROUGH ALL PIXELS\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight()):\n        p = img.getPixel(x, y)\n\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # VALUES FOR THE NEW COLOR\n        if r < 120:\n            r = 0\n        if r >= 120:\n            r = 120\n        if g < 120:\n            g = 0\n        if g >= 120:\n            g = 120\n        if b < 120:\n            b = 0\n        if b >= 120:\n            b = 120\n\n        # CREATE THE COLOR\n        newPixel = Pixel(r,g,b)\n\n        # CHANGE THE IMAGE\n        img.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/imageMultIf",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "15_4_1_posterize1",
                data: {
                  id: 10787,
                  base_course: "StudentCSP",
                  name: "15_4_1_posterize1",
                  chapter: "CSPImageDecisions",
                  subchapter: "imageMultIf",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="15.4.2" data-multipleanswers="false"  id="15_4_1_posterize1"  style="visibility: hidden;">\n    <p>How many different colors will be in our image when we are done?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="15_4_1_posterize1_opt_a">8</li><li data-component="feedback">Two possible values of each of red, green, and blue (3 colors) is 2 raised to 3rd power combinations which is 8.</li>\n    \n    <li data-component="answer"  id="15_4_1_posterize1_opt_b">3</li><li data-component="feedback">Two values of each of red, green, and blue is more than 3.</li>\n    \n    <li data-component="answer"  id="15_4_1_posterize1_opt_c">120</li><li data-component="feedback">Far fewer</li>\n    \n    <li data-component="answer"  id="15_4_1_posterize1_opt_d">16,777,216 (= 256 * 256 * 256)</li><li data-component="feedback">That\'s the total number of colors possible.  But this code reduces that.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/imageMultIf",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.4.2",
                  optional: false,
                  description: "How many different colors will be in our image when we are done?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "15. Chapter 15 - Using Decisions with Images/15.4 Multiple If’s with Images",
                data: {
                  id: 11675,
                  base_course: "StudentCSP",
                  name: "15. Chapter 15 - Using Decisions with Images/15.4 Multiple If’s with Images",
                  chapter: "CSPImageDecisions",
                  subchapter: "imageMultIf",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "15.5 Chapter 15 - Concept Summary",
              num: 500,
              chapter: "CSPImageDecisions",
              subchapter: "summary",
              id: 11676,
              numQuestions: 1
            },
            children: [
              {
                key: "15. Chapter 15 - Using Decisions with Images/15.5 Chapter 15 - Concept Summary",
                data: {
                  id: 11676,
                  base_course: "StudentCSP",
                  name: "15. Chapter 15 - Using Decisions with Images/15.5 Chapter 15 - Concept Summary",
                  chapter: "CSPImageDecisions",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "15.6 Chapter 15 Exercises",
              num: 600,
              chapter: "CSPImageDecisions",
              subchapter: "Exercises",
              id: 11677,
              numQuestions: 21
            },
            children: [
              {
                key: "ch15ex1q",
                data: {
                  id: 10755,
                  base_course: "StudentCSP",
                  name: "ch15ex1q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex1q data-question_label="15.6.1">\n<div id=ch15ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom  import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("gal2.jpg")\n\n# LOOP THROUGH ALL PIXELS\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight())\n        p = img.getPixel(x, y)\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n    # VALUES FOR THE NEW COLOR\n    if r > 200 and g < 100 and b < 100:\n\n        # CREATE THE COLOR\n        newPixel = Pixel(0, g, b)\n\n        # CHANGE THE IMAGE\n        img.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex2q",
                data: {
                  id: 10756,
                  base_course: "StudentCSP",
                  name: "ch15ex2q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex2q data-question_label="15.6.2">\n<div id=ch15ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("girl.jpg")\n\n# LOOP THROUGH ALL PIXELS\nfor x in range(img.getWidth()):\nfor y in range(img.getHeight()):\n        p = img.getPixel(x, y)\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # VALUES FOR THE NEW COLOR\n        if r < 150 and g > 100 and b > 100:\n\n            # CREATE THE COLOR\n            newPixel = Pixel(0, 0, 0)\n\n            # CHANGE THE IMAGE\n            img.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\n    win = ImageWin(img.getWidth(),img.getHeight())\n    img.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex3q",
                data: {
                  id: 10757,
                  base_course: "StudentCSP",
                  name: "ch15ex3q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex3q data-question_label="15.6.3">\n<div id=ch15ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("swan.jpg")\n\n# LOOP THROUGH ALL BUT LAST COLUMN\nfor x in range(img.getWidth() - 1):\n    for y in range(img.getHeight()):\n    p = img.getPixel(x, y)\n    p2 = img.getPixel(x + 1, y)\n    r1 = p.getRed()\n    g1 = p.getGreen()\n    b1 = p.getBlue()\n    average1 = (r1 + g1 + b1) / 3\n    r2 = p2.getRed()\n    g2 = p2.getGreen()\n    b2 = p2.getBlue()\n    average2 = (r2 + g2 + b2) / 3\n\n    # VALUES FOR THE NEW COLOR\n    if abs(average2 - average1) > 10:\n    newPixel = Pixel(0, 0, 0)\n    else:\n    newPixel = Pixel(255, 255, 255)\n\n        # CHANGE THE IMAGE\n        img.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex4q",
                data: {
                  id: 10758,
                  base_course: "StudentCSP",
                  name: "ch15ex4q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex4q data-question_label="15.6.4">\n<div id=ch15ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# CREATE AN IMAGE FROM A FILE\nimg = Image("gal2.jpg")\n\n# LOOP THROUGH ALL PIXELS\nfor x in range(img.getWidth()):\nfor y in range(img.getHeight()):\np = img.getPixel(x, y)\nr = p.getRed()\ng = p.getGreen()\nb = p.getBlue()\n\n# VALUES FOR THE NEW COLOR\nif r > 0 and g > 0 and b > 0:\n\n# CREATE THE COLOR\nnewPixel = Pixel(100, 100, 100)\n\n# CHANGE THE IMAGE\nimg.setPixel(x, y, p)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex5q",
                data: {
                  id: 10759,
                  base_course: "StudentCSP",
                  name: "ch15ex5q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex5q data-question_label="15.6.5">\n<div id=ch15ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("beach.jpg")\n\n# LOOP THROUGH ALL PIXELS\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight()):\n        p = img.getPixel(x, y)\n\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # VALUES FOR THE NEW COLOR\n        if r < 120:\n        r = 0\n        if r >= 120:\n        r = 120\n        if g < 120:\n        g = 0\n        if g >= 120:\n        g = 120\n        if b < 120:\n        b = 0\n        if b >= 120:\n        b = 120\n\n        # CREATE THE COLOR\n        newPixel = Pixel(r,g,b)\n\n        # CHANGE THE IMAGE\n        img.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex6q",
                data: {
                  id: 10760,
                  base_course: "StudentCSP",
                  name: "ch15ex6q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex6q data-question_label="15.6.6">\n<div id=ch15ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE THE IMAGES\nimg1 = Image("motorcycle.jpg")\nimg2 = Image("beach.jpg")\nwidth1 = img1.getWidth()\nheight1 = img1.getHeight()\nwidth2= img2.getWidth()\nheight2 = img2.getHeight()\nmaxWidth = min(width1,width2)\nmaxHeight = min(height1,height2)\n\n# LOOP THROUGH THE PIXELS\nfor x in range(maxWidth):\nfor y in range(maxHeight):\np1 = img1.getPixel(x, y)\nr1 = p1.getRed()\ng1 = p1.getGreen()\nb1 = p1.getBlue()\n\n# CHECK IF THE PIXEL ISN\'T WHITE\nif r1 < 250 and g1 < 250 and b1 < 250:\n\n# COPY THE COLOR TO IMG2\nimg2.setPixel(x, y, p1)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img2.getWidth(),img2.getHeight())\nimg2.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex7q",
                data: {
                  id: 10761,
                  base_course: "StudentCSP",
                  name: "ch15ex7q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex7q data-question_label="15.6.7">\n<div id=ch15ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE THE IMAGES\nimg1 = Image("gal1.jpg")\nimg2 = Image(guy1.jpg")\n\n# LOOP THROUGH ALL THE PIXELS IN IMG1\nfor x in range(img1.getWidth():\n    for y in range(img1.getHeight())\n        p1 = img1.getPixel(x, )\n        r1 = p1.getRed()\n        g1 = p1.getGreen()\n        b1 = p1.getBlue()\n\n        # CHECK IF THE PIXEL ISN\'T WHITE\n        if r1 < 250 and g1 < 250  b1 < 250:\n\n            # COPY THE COLOR TO IMG2\n            img2.setPixel(x, y, p1)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img2.getWidth(),img2.getHeight())\nimg2.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex8q",
                data: {
                  id: 10762,
                  base_course: "StudentCSP",
                  name: "ch15ex8q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex8q data-question_label="15.6.8">\n<div id=ch15ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE THE IMAGES\nimg1 = Image(swan.jpg)\nimg2 = Image("beach.jpg")\nwidth1 = img1.getWidth()\nheight1 = img1.getHeight()\nwidth2= img2.getWidth()\nheight2 = img2.getHeight()\nmaxWidth = min(width1,width2)\nmaxHeight = min(height1,height2)\n\n# LOOP THROUGH THE PIXELS\nfor x in range(maxWidth):\n  for y in range(maxHeight):\n    p1 = img1.getPixel()\n    r1 = p1.getRed\n    g1 = p1.getGreen()\n    b1 = p1.getBlue()\n\n    # CHECK IF THE PIXEL ISN\'T WHITE\n    if r1 > 100 and g1 > 100 and b1 > 100\n\n      # COPY THE COLOR TO IMG2\n      img2.setPixel(x, y, pixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img2.getWidth(),img2.getHeight())\nimg2.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex9q",
                data: {
                  id: 10763,
                  base_course: "StudentCSP",
                  name: "ch15ex9q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex9q data-question_label="15.6.9">\n<div id=ch15ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("beach.jpg")\n\n# LOOP THROUGH ALL PIXELS\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight()):\n        p = img.getPixel(x, y)\n\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # VALUES FOR THE NEW COLOR\n        if r < 120:\n            r = 0\n        if r >= 120:\n            r = 120\n        if g < 120:\n            g = 0\n        if g >= 120:\n            g = 120\n        if b < 120:\n            b = 0\n        if b >= 120:\n            b = 120\n\n        # CREATE THE COLOR\n        newPixel = Pixel(r,g,b)\n\n        # CHANGE THE IMAGE\n        img.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex10q",
                data: {
                  id: 10764,
                  base_course: "StudentCSP",
                  name: "ch15ex10q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex10q data-question_label="15.6.10">\n<div id=ch15ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n    from image import *\n\n    # CREATE AN IMAGE FROM A FILE\n    img = Image("motorcycle.jpg")\n\n    # LOOP THROUGH ALL BUT LAST COLUMN\n    for x in range(img.getWidth() - 1):\n    for y in range(img.getHeight()):\n    p = img.getPixel(x, y)\n    p2 = img.getPixel(x + 1, y)\n    r1 = p.getRed()\n    g1 = p.getGreen()\n    b1 = p.getBlue()\n    average1 = (r1 + g1 + b1) / 3\n    r2 = p2.getRed()\n    g2 = p2.getGreen()\n    b2 = p2.getBlue()\n    average2 = (r2 + g2 + b2) / 3\n\n    # VALUES FOR THE NEW COLOR\n    if abs(average2 - average1) > 10:\n        newPixel = Pixel(0, 0, 0)\n    else:\n        newPixel = Pixel(255, 255, 255)\n\n    # CHANGE THE IMAGE\n    img.setPixel(x, y, newPixel)\n\n    # SHOW THE CHANGED IMAGE\n    win = ImageWin(img.getWidth(),img.getHeight())\n    img.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex11q",
                data: {
                  id: 10765,
                  base_course: "StudentCSP",
                  name: "ch15ex11q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex11q data-question_label="15.6.11">\n<div id=ch15ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("beach.jpg")\n\n# LOOP THROUGH ALL PIXELS\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight()):\n        p = img.getPixel(x, y)\n\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # VALUES FOR THE NEW COLOR\n        if r < 120:\n            r = 0\n        if r >= 120:\n            r = 120\n        if g < 120:\n            g = 0\n        if g >= 120:\n            g = 120\n        if b < 120:\n            b = 0\n        if b >= 120:\n            b = 120\n\n        # CREATE THE COLOR\n        newPixel = Pixel(r,g,b)\n\n        # CHANGE THE IMAGE\n        img.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex12q",
                data: {
                  id: 10766,
                  base_course: "StudentCSP",
                  name: "ch15ex12q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex12q data-question_label="15.6.12">\n<div id=ch15ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef edger(img):\n    # LOOP THROUGH ALL BUT LAST COLUMN\n    for x in range(img.getWidth() ):\n        for y in range(img.getHeight()):\n            p = img.getPixel(x, y)\n            p2 = img.getPixel(x + 1, y)\n            r1 = p.getRed()\n            g1 = p.getGreen()\n            b1 = p.getBlue()\n            average1 = (r1 + g1 + b1) / 3\n            r2 = p2.getRed()\n            g2 = p2.getGreen()\n            b2 = p2.getBlue()\n            average2 = (r2 + g2 + b2) / 3\n\n            # VALUES FOR THE NEW COLOR\n            if abs(average2 - average1) > 10\n                newPixel = Pixel(0, 0, 0)\n            else:\n                newPixel = Pixel(255, 255, 255)\n\n            # CHANGE THE IMAGE\n            img.setPixel(x, y, newPixel)\n\n            # SHOW THE CHANGED IMAGE\n            win = ImageWin(img.getWidth(),img.getHeight())\n            img.draw(win)\n\n    from image import *\n\n    # CREATE AN IMAGE FROM A FILE\n    img = Image(motorcycle.jpg)\n    edger(img)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex13q",
                data: {
                  id: 10767,
                  base_course: "StudentCSP",
                  name: "ch15ex13q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex13q data-question_label="15.6.13">\n<div id=ch15ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("gal2.jpg")\n\n# LOOP THROUGH ALL PIXELS\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight()):\n        p = img.getPixel(x, y)\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # VALUES FOR THE NEW COLOR\n        if r > 200 and g < 100 and b < 100:\n\n            # CREATE THE COLOR\n            newPixel = Pixel(0, g, b)\n\n            # CHANGE THE IMAGE\n            img.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex14q",
                data: {
                  id: 10768,
                  base_course: "StudentCSP",
                  name: "ch15ex14q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex14q data-question_label="15.6.14">\n<div id=ch15ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("kitten.jpg")\n\n# LOOP THROUGH ALL PIXELS\nfor x in range(img.getWidth()):\n    for y in range(img.getHeight()):\n        p = img.getPixel(x, y)\n\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # VALUES FOR THE NEW COLOR\n        if r < 120:\n            r = 150\n        if r >= 120:\n            r = 200\n        if g < 120:\n            g = 150\n        if g >= 120:\n            g = 200\n        if b < 120:\n            b = 150\n        if b >= 120:\n            b = 200\n\n        # CREATE THE COLOR\n        newPixel = Pixel(r,g,b)\n\n        # CHANGE THE IMAGE\n        img.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex15q",
                data: {
                  id: 10769,
                  base_course: "StudentCSP",
                  name: "ch15ex15q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex15q data-question_label="15.6.15">\n<div id=ch15ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex16q",
                data: {
                  id: 10770,
                  base_course: "StudentCSP",
                  name: "ch15ex16q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex16q data-question_label="15.6.16">\n<div id=ch15ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfrom image import *\n\n# CREATE AN IMAGE FROM A FILE\nimg = Image("arch.jpg")\n\n# LOOP THROUGH ALL PIXELS\nfor x in range(img.getWidth()\n    for y in range(img.getHeight()):\n        p = img.getPixels(x, y)\n\n        r = p.getRed()\n        g = p.getGreen()\n        b = p.getBlue()\n\n        # VALUES FOR THE NEW COLOR\n        if r < 120:\n            r = 0\n        if r >= 120:\n            r = 120\n        if g < 120:\n            g = 0\n        if g >= 120:\n            g = 120\n        if b < 120:\n            b = 0\n        if b >= 120:\n            b = 120\n\n        # CREATE THE COLOR\n        newPixel = Pixel(r,g,b)\n\n# CHANGE THE IMAGE\nimg.setPixel(x, y, newPixel)\n\n# SHOW THE CHANGED IMAGE\nwin = ImageWin(img.getWidth(),img.getHeight())\nimg.draw(win)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex17q",
                data: {
                  id: 10771,
                  base_course: "StudentCSP",
                  name: "ch15ex17q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex17q data-question_label="15.6.17">\n<div id=ch15ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex18q",
                data: {
                  id: 10772,
                  base_course: "StudentCSP",
                  name: "ch15ex18q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex18q data-question_label="15.6.18">\n<div id=ch15ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex19q",
                data: {
                  id: 10773,
                  base_course: "StudentCSP",
                  name: "ch15ex19q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex19q data-question_label="15.6.19">\n<div id=ch15ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch15ex20q",
                data: {
                  id: 10774,
                  base_course: "StudentCSP",
                  name: "ch15ex20q",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch15ex20q data-question_label="15.6.20">\n<div id=ch15ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch15ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPImageDecisions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.6.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "15. Chapter 15 - Using Decisions with Images/15.6 Chapter 15 Exercises",
                data: {
                  id: 11677,
                  base_course: "StudentCSP",
                  name: "15. Chapter 15 - Using Decisions with Images/15.6 Chapter 15 Exercises",
                  chapter: "CSPImageDecisions",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam14a15",
            data: {
              title: "15.7 Exam Questions for Chapters 14 and 15",
              num: 700,
              chapter: "CSPImageDecisions",
              subchapter: "exam14a15",
              id: 11678,
              numQuestions: 6
            },
            children: [
              {
                key: "e14a15_1",
                data: {
                  id: 10779,
                  base_course: "StudentCSP",
                  name: "e14a15_1",
                  chapter: "CSPImageDecisions",
                  subchapter: "exam14a15",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="15.7.2" data-multipleanswers="false"  id="e14a15_1"  style="visibility: hidden;">\n    <p>Which of the following expressions gives you 3 possible results for all values of y?</p>\n\n    <li data-component="answer"  id="e14a15_1_opt_a">y % 1</li><li data-component="feedback">Since every value is evenly divisible by 1 this will always return 0.</li>\n    \n    <li data-component="answer"  id="e14a15_1_opt_b">y % 2</li><li data-component="feedback">This will return two possible values 0 if even and 1 if odd.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e14a15_1_opt_c">y % 3</li><li data-component="feedback">This will return 0, 1, or 2.</li>\n    \n    <li data-component="answer"  id="e14a15_1_opt_d">y % 4</li><li data-component="feedback">This will return 0, 1, 2, or 3.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPImageDecisions/exam14a15",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.7.2",
                  optional: false,
                  description:
                    "Which of the following expressions gives you 3 possible results for all values o",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e14a15_2",
                data: {
                  id: 10780,
                  base_course: "StudentCSP",
                  name: "e14a15_2",
                  chapter: "CSPImageDecisions",
                  subchapter: "exam14a15",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="15.7.3" data-multipleanswers="false"  id="e14a15_2"  style="visibility: hidden;">\n    <p>Which of the following statements actually changes the image?</p>\n\n    <li data-component="answer"  id="e14a15_2_opt_a">newPixel = image.Pixel(r, g, b)</li><li data-component="feedback">This creates a new pixel with the given red, green, and blue values.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e14a15_2_opt_b">img.setPixel(x, y, newPixel)</li><li data-component="feedback">This updates the pixel values in the image at x and y with the colors in the pixel.</li>\n    \n    <li data-component="answer"  id="e14a15_2_opt_c">p = img.getPixel(x, y)</li><li data-component="feedback">This gets the pixel at the given x and y location.</li>\n    \n    <li data-component="answer"  id="e14a15_2_opt_d">win = ImageWin(img.getWidth(), img.getHeight())</li><li data-component="feedback">This creates a window that can be used to display the image.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPImageDecisions/exam14a15",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.7.3",
                  optional: false,
                  description: "Which of the following statements actually changes the image?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e14a15_3",
                data: {
                  id: 10781,
                  base_course: "StudentCSP",
                  name: "e14a15_3",
                  chapter: "CSPImageDecisions",
                  subchapter: "exam14a15",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="15.7.4" data-multipleanswers="false"  id="e14a15_3"  style="visibility: hidden;">\n    <p>What does the following code do to the image?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">image</span> <span class="kn">import</span> <span class="o">*</span>\n\n<span class="c1"># CREATE AN IMAGE FROM A FILE</span>\n<span class="n">img</span> <span class="o">=</span> <span class="n">Image</span><span class="p">(</span><span class="s2">&quot;arch.jpg&quot;</span><span class="p">)</span>\n\n<span class="c1"># LOOP THROUGH ALL PIXELS</span>\n<span class="k">for</span> <span class="n">x</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">img</span><span class="o">.</span><span class="n">getWidth</span><span class="p">()):</span>\n    <span class="k">for</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">img</span><span class="o">.</span><span class="n">getHeight</span><span class="p">()):</span>\n        <span class="n">p</span> <span class="o">=</span> <span class="n">img</span><span class="o">.</span><span class="n">getPixel</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">)</span>\n        <span class="n">r</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">getRed</span><span class="p">()</span>\n        <span class="n">g</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">getGreen</span><span class="p">()</span>\n        <span class="n">b</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="n">getBlue</span><span class="p">()</span>\n\n        <span class="c1"># VALUES FOR THE NEW COLOR</span>\n        <span class="k">if</span> <span class="n">r</span> <span class="o">&lt;</span> <span class="mi">120</span><span class="p">:</span>\n            <span class="n">r</span> <span class="o">=</span> <span class="mi">0</span>\n        <span class="k">elif</span> <span class="n">r</span> <span class="o">&lt;</span> <span class="mi">240</span><span class="p">:</span>\n            <span class="n">r</span> <span class="o">=</span> <span class="mi">200</span>\n        <span class="k">else</span><span class="p">:</span>\n            <span class="n">r</span> <span class="o">=</span> <span class="mi">255</span>\n\n        <span class="c1"># CREATE THE COLOR</span>\n        <span class="n">newPixel</span> <span class="o">=</span> <span class="n">image</span><span class="o">.</span><span class="n">Pixel</span><span class="p">(</span><span class="n">r</span><span class="p">,</span><span class="n">g</span><span class="p">,</span><span class="n">b</span><span class="p">)</span>\n\n        <span class="c1"># CHANGE THE IMAGE</span>\n        <span class="n">img</span><span class="o">.</span><span class="n">setPixel</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">newPixel</span><span class="p">)</span>\n\n<span class="n">win</span> <span class="o">=</span> <span class="n">ImageWin</span><span class="p">()</span>\n<span class="n">img</span><span class="o">.</span><span class="n">draw</span><span class="p">(</span><span class="n">win</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e14a15_3_opt_a">The program removes all the red from the image</li><li data-component="feedback">This would be true if the red was always set to 0.</li>\n    \n    <li data-component="answer"  id="e14a15_3_opt_b">The program changes all the red pixels to a single color</li><li data-component="feedback">This would be true if the red was always set to the same value.</li>\n    \n    <li data-component="answer"  id="e14a15_3_opt_c">The program changes all the pixels to have some red</li><li data-component="feedback">If r is less than 120 the red is removed (set to 0).</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e14a15_3_opt_d">The program changes the image to only have 3 values of red</li><li data-component="feedback">The red will be sets to 0, 200, or 255.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPImageDecisions/exam14a15",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.7.4",
                  optional: false,
                  description: "What does the following code do to the image?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e14a15_4",
                data: {
                  id: 10782,
                  base_course: "StudentCSP",
                  name: "e14a15_4",
                  chapter: "CSPImageDecisions",
                  subchapter: "exam14a15",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="15.7.5" data-multipleanswers="false"  id="e14a15_4"  style="visibility: hidden;">\n    <p>What does the following code draw?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>\n<span class="n">space</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>\n<span class="n">height</span> <span class="o">=</span> <span class="n">space</span><span class="o">.</span><span class="n">window_height</span><span class="p">()</span>\n<span class="n">maxY</span> <span class="o">=</span> <span class="n">height</span> <span class="o">/</span> <span class="mi">2</span>\n<span class="n">sue</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>\n<span class="n">sue</span><span class="o">.</span><span class="n">pensize</span><span class="p">(</span><span class="mi">10</span><span class="p">)</span>\n<span class="n">sue</span><span class="o">.</span><span class="n">left</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n\n<span class="k">for</span> <span class="n">index</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">5</span><span class="p">):</span>\n<span class="n">sue</span><span class="o">.</span><span class="n">penup</span><span class="p">()</span>\n<span class="k">if</span> <span class="n">index</span> <span class="o">%</span> <span class="mi">2</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>\n    <span class="n">sue</span><span class="o">.</span><span class="n">color</span><span class="p">(</span><span class="s1">&#39;red&#39;</span><span class="p">)</span>\n<span class="k">else</span><span class="p">:</span>\n    <span class="n">sue</span><span class="o">.</span><span class="n">color</span><span class="p">(</span><span class="s1">&#39;black&#39;</span><span class="p">)</span>\n<span class="n">sue</span><span class="o">.</span><span class="n">goto</span><span class="p">(</span><span class="n">index</span> <span class="o">*</span> <span class="mi">10</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span> <span class="o">*</span> <span class="n">maxY</span><span class="p">)</span>\n<span class="n">sue</span><span class="o">.</span><span class="n">pendown</span><span class="p">()</span>\n<span class="n">sue</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="n">height</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="e14a15_4_opt_a">Vertical stripes that alternate between red and black and start with red.</li><li data-component="feedback">Sue turns left 90 so the stipes are vertical.  The first element in range(5) is 0 so the stripes start with red.</li>\n    \n    <li data-component="answer"  id="e14a15_4_opt_b">Vertical stripes that alternate between black and red and start with black.</li><li data-component="feedback">This would be true if the color was set to black when index is even and red when index is odd.</li>\n    \n    <li data-component="answer"  id="e14a15_4_opt_c">Horizontal stripes that alternate between red and black and start with red.</li><li data-component="feedback">This would be true if sue didn\'t turn left 90 degrees at the start.</li>\n    \n    <li data-component="answer"  id="e14a15_4_opt_d">Horizontal stripes that alternate between black and red and start with black.</li><li data-component="feedback">This would be true if sue didn\'t turn left 90 degrees at the start and if the color was set to black when the index is even and red when it is odd.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPImageDecisions/exam14a15",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.7.5",
                  optional: false,
                  description: "What does the following code draw?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e14a15_5",
                data: {
                  id: 10783,
                  base_course: "StudentCSP",
                  name: "e14a15_5",
                  chapter: "CSPImageDecisions",
                  subchapter: "exam14a15",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="15.7.6" data-multipleanswers="false"  id="e14a15_5"  style="visibility: hidden;">\n    <p>What does random.randrange(10,20) return?</p>\n\n    <li data-component="answer"  id="e14a15_5_opt_a">A random value between 10 and 20</li><li data-component="feedback">This would be true if it was random.randrange(10,21)</li>\n    \n    <li data-component="answer"  id="e14a15_5_opt_b">A random value between 11 and 19</li><li data-component="feedback">This would be true if it was random.randrange(11,20)</li>\n    \n    <li data-component="answer"  id="e14a15_5_opt_c">A random value between 11 and 20</li><li data-component="feedback">This would be true if it was random.randrange(11,21)</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e14a15_5_opt_d">A random value between 10 and 19</li><li data-component="feedback">The randrange function returns a random value between the first parameter value and one less than the second parameter value.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPImageDecisions/exam14a15",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "15.7.6",
                  optional: false,
                  description: "What does random.randrange(10,20) return?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "15. Chapter 15 - Using Decisions with Images/15.7 Exam Questions for Chapters 14 and 15",
                data: {
                  id: 11678,
                  base_course: "StudentCSP",
                  name: "15. Chapter 15 - Using Decisions with Images/15.7 Exam Questions for Chapters 14 and 15",
                  chapter: "CSPImageDecisions",
                  subchapter: "exam14a15",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPIntroData",
        data: {
          title: "16. Chapter 16 - Working with Collections",
          num: 16
        },
        children: [
          {
            key: "workColls",
            data: {
              title: "16.1 Working with Collections of Data",
              num: 100,
              chapter: "CSPIntroData",
              subchapter: "workColls",
              id: 11679,
              numQuestions: 1
            },
            children: [
              {
                key: "16. Chapter 16 - Working with Collections/16.1 Working with Collections of Data",
                data: {
                  id: 11679,
                  base_course: "StudentCSP",
                  name: "16. Chapter 16 - Working with Collections/16.1 Working with Collections of Data",
                  chapter: "CSPIntroData",
                  subchapter: "workColls",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "workStrings",
            data: {
              title: "16.2 Working with Strings",
              num: 200,
              chapter: "CSPIntroData",
              subchapter: "workStrings",
              id: 11680,
              numQuestions: 8
            },
            children: [
              {
                key: "intro_data_string_error",
                data: {
                  id: 10832,
                  base_course: "StudentCSP",
                  name: "intro_data_string_error",
                  chapter: "CSPIntroData",
                  subchapter: "workStrings",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=intro_data_string_error data-question_label="16.2.5">\n<div id=intro_data_string_error_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="intro_data_string_error_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nname = "Mark\'\nstart = \'My name is "\ncombined = start + name\nprint(len(combined))\nprint(combined)\nprint(name * 3)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/workStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.2.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Manip",
                data: {
                  id: 10833,
                  base_course: "StudentCSP",
                  name: "String_Manip",
                  chapter: "CSPIntroData",
                  subchapter: "workStrings",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="16.2.1">\n        <div id=String_Manip_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="String_Manip"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 16.2.1 (String_Manip)</span> </p>\n    </div>\n\n<script>\nvar String_Manip_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["String_Manip"] = {"code": "name = \\"Mark\\"\\nstart = \'My name is \'\\ncombined = start + name\\nprint(len(combined))\\nprint(combined)\\nprint(name * 3)", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"name": "Mark"}, "ordered_globals": ["name"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"name": "Mark", "start": "My name is "}, "ordered_globals": ["name", "start"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"name": "Mark", "start": "My name is ", "combined": "My name is Mark"}, "ordered_globals": ["name", "start", "combined"], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"name": "Mark", "start": "My name is ", "combined": "My name is Mark"}, "ordered_globals": ["name", "start", "combined"], "stack_to_render": [], "heap": {}, "stdout": "15\\n"}, {"line": 6, "event": "step_line", "func_name": "<module>", "globals": {"name": "Mark", "start": "My name is ", "combined": "My name is Mark"}, "ordered_globals": ["name", "start", "combined"], "stack_to_render": [], "heap": {}, "stdout": "15\\nMy name is Mark\\n"}, {"line": 6, "event": "return", "func_name": "<module>", "globals": {"name": "Mark", "start": "My name is ", "combined": "My name is Mark"}, "ordered_globals": ["name", "start", "combined"], "stack_to_render": [], "heap": {}, "stdout": "15\\nMy name is Mark\\nMarkMarkMark\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/workStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.2.1",
                  optional: false,
                  description:
                    "name = \"Mark\" start = 'My name is ' combined = start + name print(len(combined))",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_2_1_Str_Combine",
                data: {
                  id: 10834,
                  base_course: "StudentCSP",
                  name: "16_2_1_Str_Combine",
                  chapter: "CSPIntroData",
                  subchapter: "workStrings",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.2.2" data-multipleanswers="true"  id="16_2_1_Str_Combine"  style="visibility: hidden;">\n    <p>If we wanted to add one line to the above to print “My name is MarkMarkMark”, which one of these would do it? Choose all that are correct.</p>\n\n    <li data-component="answer"  id="16_2_1_Str_Combine_opt_a">print(start+name)</li><li data-component="feedback">This just generates: My name is Mark</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_2_1_Str_Combine_opt_b">print(start+name+name+name)</li><li data-component="feedback">Could you also use multiplication?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_2_1_Str_Combine_opt_c">print(start + (3 * name))</li><li data-component="feedback">This will work, but multiplication is processed before addition, so you do not have to have parentheses.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_2_1_Str_Combine_opt_d">print(start + 3 * name)</li><li data-component="feedback">This will work just fine.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/workStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.2.2",
                  optional: false,
                  description:
                    'If we wanted to add one line to the above to print "My name is MarkMarkMark", wh',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_2_2_lenString",
                data: {
                  id: 10835,
                  base_course: "StudentCSP",
                  name: "16_2_2_lenString",
                  chapter: "CSPIntroData",
                  subchapter: "workStrings",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.2.3" data-multipleanswers="false"  id="16_2_2_lenString"  style="visibility: hidden;">\n    <p>What is the length of the string <code class="docutils literal notranslate"><span class="pre">&quot;Hi</span> <span class="pre">sis!&quot;</span></code>?</p>\n\n    <li data-component="answer"  id="16_2_2_lenString_opt_a">5</li><li data-component="feedback">This is just the numer of alphabetic characters.  The length of a string includes the spaces and punctuation characters too.</li>\n    \n    <li data-component="answer"  id="16_2_2_lenString_opt_b">6</li><li data-component="feedback">Don\'t forget to count the space too.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_2_2_lenString_opt_c">7</li><li data-component="feedback">The length of a string includes all the characters which includes spaces and punctuation.</li>\n    \n    <li data-component="answer"  id="16_2_2_lenString_opt_d">9</li><li data-component="feedback">We don\'t include the single or double quotes in the length of the string.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroData/workStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.2.3",
                  optional: false,
                  description: 'What is the length of the string ``"Hi sis!"``?',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_2_3_addStrings",
                data: {
                  id: 10836,
                  base_course: "StudentCSP",
                  name: "16_2_3_addStrings",
                  chapter: "CSPIntroData",
                  subchapter: "workStrings",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.2.4" data-multipleanswers="false"  id="16_2_3_addStrings"  style="visibility: hidden;">\n    <p>What would the following code print?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">first</span> <span class="o">=</span> <span class="s2">&quot;Watch&quot;</span>\n<span class="nb">next</span> <span class="o">=</span> <span class="s1">&#39;Out&#39;</span>\n<span class="nb">print</span> <span class="p">((</span><span class="n">first</span> <span class="o">+</span> <span class="nb">next</span><span class="p">)</span> <span class="o">*</span> <span class="mi">2</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="16_2_3_addStrings_opt_a">Watch Out</li><li data-component="feedback">When you append strings together no extra spaces are added.</li>\n    \n    <li data-component="answer"  id="16_2_3_addStrings_opt_b">WatchOut</li><li data-component="feedback">Don\'t forget the <code>* 2</code> part.  What does that do?</li>\n    \n    <li data-component="answer"  id="16_2_3_addStrings_opt_c">Watch Out Watch Out</li><li data-component="feedback">When you append strings together no extra spaces are added.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_2_3_addStrings_opt_d">WatchOutWatchOut</li><li data-component="feedback">The <code>+</code> appends strings together and the <code>*</code> makes that many copies of the string appended together.</li>\n    \n    <li data-component="answer"  id="16_2_3_addStrings_opt_e">WatchOut2</li><li data-component="feedback">The <code>*</code> makes that many copies of the string appended together.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroData/workStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.2.4",
                  optional: false,
                  description: "What would the following code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_2_4_WSq",
                data: {
                  id: 10837,
                  base_course: "StudentCSP",
                  name: "16_2_4_WSq",
                  chapter: "CSPIntroData",
                  subchapter: "workStrings",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=16_2_4_WSq data-question_label="16.2.6">\n<div id=16_2_4_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="16_2_4_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nstring1 = "jelly"\nstring2 = "bean"\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/workStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.2.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_2_4_WSa",
                data: {
                  id: 10838,
                  base_course: "StudentCSP",
                  name: "16_2_4_WSa",
                  chapter: "CSPIntroData",
                  subchapter: "workStrings",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=16_2_4_WSa data-question_label="16.2.7">\n<div id=16_2_4_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="16_2_4_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nstring1 = "jelly"\nstring2 = "bean"\ncombined = string1 + string2\nprint(combined * 3)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/workStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.2.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16. Chapter 16 - Working with Collections/16.2 Working with Strings",
                data: {
                  id: 11680,
                  base_course: "StudentCSP",
                  name: "16. Chapter 16 - Working with Collections/16.2 Working with Strings",
                  chapter: "CSPIntroData",
                  subchapter: "workStrings",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "workLists",
            data: {
              title: "16.3 Working with Lists",
              num: 300,
              chapter: "CSPIntroData",
              subchapter: "workLists",
              id: 11681,
              numQuestions: 6
            },
            children: [
              {
                key: "Sum_Numbers",
                data: {
                  id: 10828,
                  base_course: "StudentCSP",
                  name: "Sum_Numbers",
                  chapter: "CSPIntroData",
                  subchapter: "workLists",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Sum_Numbers data-question_label="16.3.1">\n<div id=Sum_Numbers_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Sum_Numbers_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 2: for1_line1; 3: for1_line2; 6: for1_line3; 7: for1_line4; 10: for1_line5;*atype**doubleq*High level tour*doubleq*; 2-3: for1_line1-2; 6-7: for1_line3-4; 10: for1_s_line5;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# initialize the variables\nsum = 0\nthingsToAdd = [1,2,3,4,5,6,7,8,9,10]\n\n# loop through the list and add each value to the sum\nfor number in thingsToAdd:\n    sum = sum + number\n\n# print the sum\nprint(sum)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/workLists",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Simple_Lists",
                data: {
                  id: 10829,
                  base_course: "StudentCSP",
                  name: "Simple_Lists",
                  chapter: "CSPIntroData",
                  subchapter: "workLists",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="16.3.2">\n        <div id=Simple_Lists_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Simple_Lists"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 16.3.2 (Simple_Lists)</span> </p>\n    </div>\n\n<script>\nvar Simple_Lists_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Simple_Lists"] = {"code": "myFirstList = [12,\\"ape\\",13]\\nprint(len(myFirstList))\\nprint(myFirstList * 3)\\nmySecondList = myFirstList + [321.4]\\nprint(mySecondList)", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"myFirstList": ["REF", 1]}, "ordered_globals": ["myFirstList"], "stack_to_render": [], "heap": {"1": ["LIST", 12, "ape", 13]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"myFirstList": ["REF", 1]}, "ordered_globals": ["myFirstList"], "stack_to_render": [], "heap": {"1": ["LIST", 12, "ape", 13]}, "stdout": "3\\n"}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"myFirstList": ["REF", 1]}, "ordered_globals": ["myFirstList"], "stack_to_render": [], "heap": {"1": ["LIST", 12, "ape", 13]}, "stdout": "3\\n[12, \'ape\', 13, 12, \'ape\', 13, 12, \'ape\', 13]\\n"}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"myFirstList": ["REF", 1], "mySecondList": ["REF", 2]}, "ordered_globals": ["myFirstList", "mySecondList"], "stack_to_render": [], "heap": {"1": ["LIST", 12, "ape", 13], "2": ["LIST", 12, "ape", 13, 321.4]}, "stdout": "3\\n[12, \'ape\', 13, 12, \'ape\', 13, 12, \'ape\', 13]\\n"}, {"line": 5, "event": "return", "func_name": "<module>", "globals": {"myFirstList": ["REF", 1], "mySecondList": ["REF", 2]}, "ordered_globals": ["myFirstList", "mySecondList"], "stack_to_render": [], "heap": {"1": ["LIST", 12, "ape", 13], "2": ["LIST", 12, "ape", 13, 321.4]}, "stdout": "3\\n[12, \'ape\', 13, 12, \'ape\', 13, 12, \'ape\', 13]\\n[12, \'ape\', 13, 321.4]\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/workLists",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.3.2",
                  optional: false,
                  description:
                    'myFirstList = [12,"ape",13] print(len(myFirstList)) print(myFirstList * 3) mySec',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_3_1_lenList",
                data: {
                  id: 10830,
                  base_course: "StudentCSP",
                  name: "16_3_1_lenList",
                  chapter: "CSPIntroData",
                  subchapter: "workLists",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.3.3" data-multipleanswers="false"  id="16_3_1_lenList"  style="visibility: hidden;">\n    <p>What is the length of the list [“Sue”,”Maria”,5,”Erica”]?</p>\n\n    <li data-component="answer"  id="16_3_1_lenList_opt_a">1</li><li data-component="feedback">This is just how many numbers are in the list.  There are also strings in this list.</li>\n    \n    <li data-component="answer"  id="16_3_1_lenList_opt_b">3</li><li data-component="feedback">This is just the number of strings in this list.  There is also a number in this list.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_3_1_lenList_opt_c">4</li><li data-component="feedback">This is the number of items in this list.  There are 3 strings and 1 number.</li>\n    \n    <li data-component="answer"  id="16_3_1_lenList_opt_d">14</li><li data-component="feedback">Count each string as one item.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroData/workLists",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.3.3",
                  optional: false,
                  description: 'What is the length of the list ["Sue","Maria",5,"Erica"]?',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_3_2_addLists",
                data: {
                  id: 10831,
                  base_course: "StudentCSP",
                  name: "16_3_2_addLists",
                  chapter: "CSPIntroData",
                  subchapter: "workLists",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.3.4" data-multipleanswers="false"  id="16_3_2_addLists"  style="visibility: hidden;">\n    <p>What would the following code print?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">start</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">]</span>\n<span class="n">start</span> <span class="o">=</span> <span class="n">start</span> <span class="o">+</span> <span class="p">[</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">]</span>\n<span class="nb">print</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">start</span><span class="p">))</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="16_3_2_addLists_opt_a">1</li><li data-component="feedback">That is the number of items in the list start on line 1, but line 2 adds more.</li>\n    \n    <li data-component="answer"  id="16_3_2_addLists_opt_b">2</li><li data-component="feedback">That is how many items were in the list that was added to start.  But, start already had one element.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_3_2_addLists_opt_c">3</li><li data-component="feedback">The list start has one item and then two more were added.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroData/workLists",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.3.4",
                  optional: false,
                  description: "What would the following code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16. Chapter 16 - Working with Collections/16.3 Working with Lists",
                data: {
                  id: 11681,
                  base_course: "StudentCSP",
                  name: "16. Chapter 16 - Working with Collections/16.3 Working with Lists",
                  chapter: "CSPIntroData",
                  subchapter: "workLists",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "intro_data_list_error",
                data: {
                  id: 23162,
                  base_course: "StudentCSP",
                  name: "intro_data_list_error",
                  chapter: "CSPIntroData",
                  subchapter: "workLists",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=intro_data_list_error data-question_label="16.3.5">\n<div id=intro_data_list_error_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="intro_data_list_error_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nstart = [3\nstart = start + ["What"3]\nprint(start)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/workLists",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.3.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "listIndexes",
            data: {
              title: "16.4 Working with Indexes",
              num: 400,
              chapter: "CSPIntroData",
              subchapter: "listIndexes",
              id: 11682,
              numQuestions: 6
            },
            children: [
              {
                key: "16_4_1_lastIndex",
                data: {
                  id: 10817,
                  base_course: "StudentCSP",
                  name: "16_4_1_lastIndex",
                  chapter: "CSPIntroData",
                  subchapter: "listIndexes",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.4.1" data-multipleanswers="false"  id="16_4_1_lastIndex"  style="visibility: hidden;">\n    <p>What is the last index for the list <code class="docutils literal notranslate"><span class="pre">myFirstList</span></code>?</p>\n\n    <li data-component="answer"  id="16_4_1_lastIndex_opt_a">0</li><li data-component="feedback">This is the index of the first item in the list.</li>\n    \n    <li data-component="answer"  id="16_4_1_lastIndex_opt_b">1</li><li data-component="feedback">This is the index of the second item in the list.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_4_1_lastIndex_opt_c">2</li><li data-component="feedback">This is the index of the last item in this list since it contains 3 items and the first index is 0.</li>\n    \n    <li data-component="answer"  id="16_4_1_lastIndex_opt_d">3</li><li data-component="feedback">The length of this list is 3, but the first index is 0 so the 3rd item is at index 2.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/listIndexes",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.4.1",
                  optional: false,
                  description: "What is the last index for the list ``myFirstList``?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_4_2_valueLastIndex",
                data: {
                  id: 10818,
                  base_course: "StudentCSP",
                  name: "16_4_2_valueLastIndex",
                  chapter: "CSPIntroData",
                  subchapter: "listIndexes",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.4.2" data-multipleanswers="false"  id="16_4_2_valueLastIndex"  style="visibility: hidden;">\n    <p>What is the value of the item at index 3 in mySecondList?</p>\n\n    <li data-component="answer"  id="16_4_2_valueLastIndex_opt_a">12</li><li data-component="feedback">This is the value at index 0.</li>\n    \n    <li data-component="answer"  id="16_4_2_valueLastIndex_opt_b">"ape"</li><li data-component="feedback">This is the value at index 1.</li>\n    \n    <li data-component="answer"  id="16_4_2_valueLastIndex_opt_c">13</li><li data-component="feedback">This is the value at index 2.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_4_2_valueLastIndex_opt_d">321.4</li><li data-component="feedback">This is the value at index 3.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/listIndexes",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.4.2",
                  optional: false,
                  description: "What is the value of the item at index 3 in mySecondList?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Items_As_Variables",
                data: {
                  id: 10819,
                  base_course: "StudentCSP",
                  name: "Items_As_Variables",
                  chapter: "CSPIntroData",
                  subchapter: "listIndexes",
                  author: "bmiller",
                  question_type: "codelens",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone codelens ">\n    <div class="cd_section" data-component="codelens" data-question_label="16.4.3">\n        <div id=Items_As_Variables_question class="ac_question">\n        </div>\n        <div class="pytutorVisualizer" id="Items_As_Variables"\n           data-params=\'{"embeddedMode": true, "lang": "python", "jumpToEnd": false}\'>\n        </div>\n        <p class="runestone_caption"><span class="runestone_caption_text">Activity: CodeLens 16.4.3 (Items_As_Variables)</span> </p>\n    </div>\n\n<script>\nvar Items_As_Variables_vis;\n\nif (allTraceData === undefined) {\n   var allTraceData = {};\n}\n\nallTraceData["Items_As_Variables"] = {"code": "items = [2,4,6,8]\\nitems[0] = \\"First item\\"\\nitems[1] = items[0]\\nitems[2] = items[2] + 1\\nprint(items)", "trace": [{"line": 1, "event": "step_line", "func_name": "<module>", "globals": {}, "ordered_globals": [], "stack_to_render": [], "heap": {}, "stdout": ""}, {"line": 2, "event": "step_line", "func_name": "<module>", "globals": {"items": ["REF", 1]}, "ordered_globals": ["items"], "stack_to_render": [], "heap": {"1": ["LIST", 2, 4, 6, 8]}, "stdout": ""}, {"line": 3, "event": "step_line", "func_name": "<module>", "globals": {"items": ["REF", 1]}, "ordered_globals": ["items"], "stack_to_render": [], "heap": {"1": ["LIST", "First item", 4, 6, 8]}, "stdout": ""}, {"line": 4, "event": "step_line", "func_name": "<module>", "globals": {"items": ["REF", 1]}, "ordered_globals": ["items"], "stack_to_render": [], "heap": {"1": ["LIST", "First item", "First item", 6, 8]}, "stdout": ""}, {"line": 5, "event": "step_line", "func_name": "<module>", "globals": {"items": ["REF", 1]}, "ordered_globals": ["items"], "stack_to_render": [], "heap": {"1": ["LIST", "First item", "First item", 7, 8]}, "stdout": ""}, {"line": 5, "event": "return", "func_name": "<module>", "globals": {"items": ["REF", 1]}, "ordered_globals": ["items"], "stack_to_render": [], "heap": {"1": ["LIST", "First item", "First item", 7, 8]}, "stdout": "[\'First item\', \'First item\', 7, 8]\\n"}]};\n</script>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/listIndexes",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.4.3",
                  optional: false,
                  description:
                    'items = [2,4,6,8] items[0] = "First item" items[1] = items[0] items[2] = items[2',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_4_3_ItemsAsVariablesQ",
                data: {
                  id: 10820,
                  base_course: "StudentCSP",
                  name: "16_4_3_ItemsAsVariablesQ",
                  chapter: "CSPIntroData",
                  subchapter: "listIndexes",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.4.4" data-multipleanswers="false"  id="16_4_3_ItemsAsVariablesQ"  style="visibility: hidden;">\n    <p>Of the four items in the list named <code class="docutils literal notranslate"><span class="pre">items</span></code>, which one is not changed in the program above?</p>\n\n    <li data-component="answer"  id="16_4_3_ItemsAsVariablesQ_opt_a">items[0]</li><li data-component="feedback">Originally, <code>items[0]</code> was 2, but then we set it to the string: <code>"First item"</code></li>\n    \n    <li data-component="answer"  id="16_4_3_ItemsAsVariablesQ_opt_b">items[1]</li><li data-component="feedback">We set <code>items[1]</code> to be the same as <code>items[0]</code>: <code>"First item"</code></li>\n    \n    <li data-component="answer"  id="16_4_3_ItemsAsVariablesQ_opt_c">items[2]</li><li data-component="feedback">We incremented <code>items[2]</code> in line 4.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_4_3_ItemsAsVariablesQ_opt_d">items[3]</li><li data-component="feedback">The value at <code>items[3]</code> doesn\'t change.  It still equals 8.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/listIndexes",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.4.4",
                  optional: false,
                  description:
                    "Of the four items in the list named ``items``, which one is not changed in the p",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_4_4_addLists",
                data: {
                  id: 10821,
                  base_course: "StudentCSP",
                  name: "16_4_4_addLists",
                  chapter: "CSPIntroData",
                  subchapter: "listIndexes",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.4.5" data-multipleanswers="false"  id="16_4_4_addLists"  style="visibility: hidden;">\n    <p>What would the following code print?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">values</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span>\n<span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">values</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>\n<span class="n">values</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="n">values</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span>\n<span class="nb">print</span><span class="p">(</span><span class="n">values</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="16_4_4_addLists_opt_a">[3, 2, 1]</li><li data-component="feedback">That is the original contents of <code>values</code>, but the contents are changed.</li>\n    \n    <li data-component="answer"  id="16_4_4_addLists_opt_b">[2, 0, 2]</li><li data-component="feedback">When you set <code>values[0]</code> to <code>values[1]</code> it makes a copy of the value and doesn\'t zero it out.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_4_4_addLists_opt_c">[2, 2, 2]</li><li data-component="feedback">The value at index 0 is set to a copy of the value at index 1 and the value at index 2 is incremented.</li>\n    \n    <li data-component="answer"  id="16_4_4_addLists_opt_d">[2, 2, 1]</li><li data-component="feedback">Notice that we do change the value at index 2.  It is incremented by 1.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroData/listIndexes",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.4.5",
                  optional: false,
                  description: "What would the following code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16. Chapter 16 - Working with Collections/16.4 Working with Indexes",
                data: {
                  id: 11682,
                  base_course: "StudentCSP",
                  name: "16. Chapter 16 - Working with Collections/16.4 Working with Indexes",
                  chapter: "CSPIntroData",
                  subchapter: "listIndexes",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "revList",
            data: {
              title: "16.5 Reversing a List",
              num: 500,
              chapter: "CSPIntroData",
              subchapter: "revList",
              id: 11683,
              numQuestions: 3
            },
            children: [
              {
                key: "Reverse_List",
                data: {
                  id: 10826,
                  base_course: "StudentCSP",
                  name: "Reverse_List",
                  chapter: "CSPIntroData",
                  subchapter: "revList",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Reverse_List data-question_label="16.5.1">\n<div id=Reverse_List_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Reverse_List_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by Line Tour*doubleq*; 2: lst6-line1; 5: lst6-line2; 8: lst6-line3; 11: lst6-line4; 12: lst6-line5;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# setup the source list\nsource = ["This","is","a","list"]\n\n# Set the accumulator to the empty list\nsoFar = []\n\n# Loop through all the items in the source list\nfor index in range(0,len(source)):\n\n    # Add a list with the current item from source to soFar\n    soFar = [source[index]] + soFar\n    print(soFar)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/revList",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.5.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_5_1_reversinglist",
                data: {
                  id: 10827,
                  base_course: "StudentCSP",
                  name: "16_5_1_reversinglist",
                  chapter: "CSPIntroData",
                  subchapter: "revList",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.5.2" data-multipleanswers="false"  id="16_5_1_reversinglist"  style="visibility: hidden;">\n    <blockquote>\n<div><p>Why did the code above end up reversing the list?</p>\n</div></blockquote>\n\n    <li data-component="answer"  id="16_5_1_reversinglist_opt_a">Because we started at 0 and went to len(source).</li><li data-component="feedback">That is the normal way of accessing each element, one at a time.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_5_1_reversinglist_opt_b">Because we put the new element ahead of the others in soFar.</li><li data-component="feedback">If we had done soFar = soFar + [source[index]], soFar would have just duplicated the list, in order.</li>\n    \n    <li data-component="answer"  id="16_5_1_reversinglist_opt_c">Because of the square brackets around source[index].</li><li data-component="feedback">We need those in order to add elements into the list.  You can only add a list to a list.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/revList",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.5.2",
                  optional: false,
                  description: " Why did the code above end up reversing the list?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16. Chapter 16 - Working with Collections/16.5 Reversing a List",
                data: {
                  id: 11683,
                  base_course: "StudentCSP",
                  name: "16. Chapter 16 - Working with Collections/16.5 Reversing a List",
                  chapter: "CSPIntroData",
                  subchapter: "revList",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "rangeChange",
            data: {
              title: "16.6 Vary the Change Amount in Range",
              num: 600,
              chapter: "CSPIntroData",
              subchapter: "rangeChange",
              id: 11684,
              numQuestions: 3
            },
            children: [
              {
                key: "addEvensQ1",
                data: {
                  id: 10824,
                  base_course: "StudentCSP",
                  name: "addEvensQ1",
                  chapter: "CSPIntroData",
                  subchapter: "rangeChange",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=addEvensQ1 data-question_label="16.6.1">\n<div id=addEvensQ1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="addEvensQ1_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by Line Tour*doubleq*; 2: lst7-line1; 3: lst7-line2; 6: lst7-line3; 9: lst7-line4; 12: lst7-line5;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# initialize the variables\nnumbers = [0,1,2,3,4,5,6,7,8,9,10]\nevens = []\n\n# loop though every other index\nfor index in range(0,len(numbers),2):\n\n    # add the lists\n    evens = evens + [numbers[index]]\n\n# print the result\nprint(evens)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/rangeChange",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.6.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_6_1_addEvensQ2",
                data: {
                  id: 10825,
                  base_course: "StudentCSP",
                  name: "16_6_1_addEvensQ2",
                  chapter: "CSPIntroData",
                  subchapter: "rangeChange",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.6.2" data-multipleanswers="true"  id="16_6_1_addEvensQ2"  style="visibility: hidden;">\n    <p>Which of these changes to the program would give you just the odd values in a list? (Again: Try it!)  Select all that work.</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="16_6_1_addEvensQ2_opt_a">Start with numbers=[1,2,3,4,5,6,7,8,9,10]</li><li data-component="feedback">Yes, that would work, but there\'s an easier way</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_6_1_addEvensQ2_opt_b">Change the range to range(1,len(numbers),2)</li><li data-component="feedback">Yes, just by starting at 1, then skipping 2 each time, we\'d collect the odds</li>\n    \n    <li data-component="answer"  id="16_6_1_addEvensQ2_opt_c">Change the range to range(0,len(numbers),1)</li><li data-component="feedback">No, that would collect all the numbers in evens</li>\n    \n    <li data-component="answer"  id="16_6_1_addEvensQ2_opt_d">Change the range to range(0,len(numbers),3)</li><li data-component="feedback">No, that would result in 0,3,6,9 in evens</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/rangeChange",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.6.2",
                  optional: false,
                  description:
                    "Which of these changes to the program would give you just the odd values in a li",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16. Chapter 16 - Working with Collections/16.6 Vary the Change Amount in Range",
                data: {
                  id: 11684,
                  base_course: "StudentCSP",
                  name: "16. Chapter 16 - Working with Collections/16.6 Vary the Change Amount in Range",
                  chapter: "CSPIntroData",
                  subchapter: "rangeChange",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "decRange",
            data: {
              title: "16.7 Using a Negative Change Value with Range",
              num: 700,
              chapter: "CSPIntroData",
              subchapter: "decRange",
              id: 11685,
              numQuestions: 7
            },
            children: [
              {
                key: "Dec_Range",
                data: {
                  id: 10808,
                  base_course: "StudentCSP",
                  name: "Dec_Range",
                  chapter: "CSPIntroData",
                  subchapter: "decRange",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Dec_Range data-question_label="16.7.1">\n<div id=Dec_Range_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Dec_Range_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by Line Tour*doubleq*; 1: range1-line1; 2: range1-line2;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfor index in range(5, -1, -1):\n    print(index)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/decRange",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.7.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Build_Up_String",
                data: {
                  id: 10809,
                  base_course: "StudentCSP",
                  name: "Build_Up_String",
                  chapter: "CSPIntroData",
                  subchapter: "decRange",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Build_Up_String data-question_label="16.7.2">\n<div id=Build_Up_String_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Build_Up_String_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by Line Tour*doubleq*; 2: lst8-line1; 3: lst8-line2; 6: lst8-line3; 9: lst8-line4; 12: lst8-line5;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# initialize the variables\nsource = ["This","is","a","list"]\nslowly = []\n\n# loop from the last index to the first (0)\nfor index in range(len(source)-1,-1,-1):\n\n    # append the lists\n    slowly = [source[index]] + slowly\n\n    # print the current value of the list\n    print(slowly)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/decRange",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.7.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_7_1_lenMinusOne",
                data: {
                  id: 10810,
                  base_course: "StudentCSP",
                  name: "16_7_1_lenMinusOne",
                  chapter: "CSPIntroData",
                  subchapter: "decRange",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.7.3" data-multipleanswers="false"  id="16_7_1_lenMinusOne"  style="visibility: hidden;">\n    <blockquote>\n<div><p>Why do we start at <code class="docutils literal notranslate"><span class="pre">len(source)-1</span></code> in this program?</p>\n</div></blockquote>\n\n    <li data-component="answer" data-correct=\'yes\' id="16_7_1_lenMinusOne_opt_a">If we started with len(source), we would get an error for indexing past the end of the list</li><li data-component="feedback">Right -- the end element is at index len(source)-1</li>\n    \n    <li data-component="answer"  id="16_7_1_lenMinusOne_opt_b">It is a mistake and should be len(source)</li><li data-component="feedback">No -- if accessed len(source) as an index, we would be going past the end of the list</li>\n    \n    <li data-component="answer"  id="16_7_1_lenMinusOne_opt_c">Because we have -1 in the other two spots</li><li data-component="feedback">We have -1 in the end position because we want to stop at zero, and we have an increment of -1 (last position)</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/decRange",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.7.3",
                  optional: false,
                  description: " Why do we start at ``len(source)-1`` in this program?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_7_2_ReversedQ",
                data: {
                  id: 10811,
                  base_course: "StudentCSP",
                  name: "16_7_2_ReversedQ",
                  chapter: "CSPIntroData",
                  subchapter: "decRange",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.7.4" data-multipleanswers="false"  id="16_7_2_ReversedQ"  style="visibility: hidden;">\n    <p>Which one of these is the output of that program?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="16_7_2_ReversedQ_opt_a"><image src="../_static/reversal.png"/></li><li data-component="feedback">This takes letters from the end of the string forward, and adds them to the end</li>\n    \n    <li data-component="answer"  id="16_7_2_ReversedQ_opt_b"><image src="../_static/build-up-rightway.png"/></li><li data-component="feedback">This one is adding up letters in the forward direction</li>\n    \n    <li data-component="answer"  id="16_7_2_ReversedQ_opt_c"><image src="../_static/build-up-missed-one.png"/></li><li data-component="feedback">This one ends at 0 (or rather, 1)</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/decRange",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.7.4",
                  optional: false,
                  description: "Which one of these is the output of that program?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_7_3_WSq",
                data: {
                  id: 10812,
                  base_course: "StudentCSP",
                  name: "16_7_3_WSq",
                  chapter: "CSPIntroData",
                  subchapter: "decRange",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=16_7_3_WSq data-question_label="16.7.5">\n<div id=16_7_3_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="16_7_3_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/decRange",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.7.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_7_3_WSa",
                data: {
                  id: 10813,
                  base_course: "StudentCSP",
                  name: "16_7_3_WSa",
                  chapter: "CSPIntroData",
                  subchapter: "decRange",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=16_7_3_WSa data-question_label="16.7.6">\n<div id=16_7_3_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="16_7_3_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfor index in range(10, -2, -2):\n  print(index)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/decRange",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.7.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16. Chapter 16 - Working with Collections/16.7 Using a Negative Change Value with Range",
                data: {
                  id: 11685,
                  base_course: "StudentCSP",
                  name: "16. Chapter 16 - Working with Collections/16.7 Using a Negative Change Value with Range",
                  chapter: "CSPIntroData",
                  subchapter: "decRange",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "forEach",
            data: {
              title: "16.8 For Each Item Loop",
              num: 800,
              chapter: "CSPIntroData",
              subchapter: "forEach",
              id: 11686,
              numQuestions: 4
            },
            children: [
              {
                key: "For_Each",
                data: {
                  id: 10814,
                  base_course: "StudentCSP",
                  name: "For_Each",
                  chapter: "CSPIntroData",
                  subchapter: "forEach",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=For_Each data-question_label="16.8.1">\n<div id=For_Each_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="For_Each_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by Line Tour*doubleq*; 2: lst3-line1; 5: lst3-line2; 8: lst3-line3; 11: lst3-line4; 14: lst3-line5; 17: lst3-line6;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# initialize the list\nmyList = [0,1,2,3,"end"]\n\n# loop through the items in the list\nfor item in myList:\n\n    # print the current item\n    print(item)\n\n# initialize the string\nmyString = "MLK"\n\n# loop through the characters in the string\nfor character in myString:\n\n    # print the current character\n    print(character)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/forEach",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.8.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "For_Each_Range",
                data: {
                  id: 10815,
                  base_course: "StudentCSP",
                  name: "For_Each_Range",
                  chapter: "CSPIntroData",
                  subchapter: "forEach",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=For_Each_Range data-question_label="16.8.2">\n<div id=For_Each_Range_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="For_Each_Range_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by Line Tour*doubleq*; 2: lst4-line1; 3: lst4-line2; 6: lst4-line3; 7: lst4-line4;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# initialize the variables\nmyString = "MLK"\nmyList = range(0,len(myString))\n\n# loop through the indices in myList and print each character\nfor index in myList:\n    print(myString[index])\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/forEach",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.8.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16_8_1_foreachRangeQ",
                data: {
                  id: 10816,
                  base_course: "StudentCSP",
                  name: "16_8_1_foreachRangeQ",
                  chapter: "CSPIntroData",
                  subchapter: "forEach",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="16.8.3" data-multipleanswers="false"  id="16_8_1_foreachRangeQ"  style="visibility: hidden;">\n    <p>What would happen if we changed line 2 to <cite>myList = range(0,len(myString)/2)</cite>? (Hint: You could try it)</p>\n\n    <li data-component="answer"  id="16_8_1_foreachRangeQ_opt_a">We would get an error for doing math in a range function.</li><li data-component="feedback">You are allowed to do math in a range function.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="16_8_1_foreachRangeQ_opt_b">We would get an error because len(myString)/2 is 1.5 which can\'t be used in a range.</li><li data-component="feedback">Dividing 3 by 2 results in 1.5, which can\'t be used in a range.</li>\n    \n    <li data-component="answer"  id="16_8_1_foreachRangeQ_opt_c">We would get "M L K" printed with one character per line.</li><li data-component="feedback">This would be true if dividing by 2 was truncated to 1.</li>\n    \n    <li data-component="answer"  id="16_8_1_foreachRangeQ_opt_d">We would get "M L K " printed with one character per line plus an extra space at the end.</li><li data-component="feedback">This would be true if 1.5 was rounded to 2, but that doesn\'t happen.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/forEach",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.8.3",
                  optional: false,
                  description:
                    "What would happen if we changed line 2 to `myList = range(0,len(myString)/2)`? (",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16. Chapter 16 - Working with Collections/16.8 For Each Item Loop",
                data: {
                  id: 11686,
                  base_course: "StudentCSP",
                  name: "16. Chapter 16 - Working with Collections/16.8 For Each Item Loop",
                  chapter: "CSPIntroData",
                  subchapter: "forEach",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "rainfall",
            data: {
              title: "16.9 Rainfall Problem",
              num: 900,
              chapter: "CSPIntroData",
              subchapter: "rainfall",
              id: 11687,
              numQuestions: 3
            },
            children: [
              {
                key: "16_9_1_rainfall",
                data: {
                  id: 10822,
                  base_course: "StudentCSP",
                  name: "16_9_1_rainfall",
                  chapter: "CSPIntroData",
                  subchapter: "rainfall",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="16_9_1_rainfall" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>Construct a program that correctly solves the rainfall problem</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="16.9.1"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        # initialize the variables\nrain = [0,5,1,0,-1,6,7,-2,0]\nsumRain = 0\ncount = 0\n---\n# loop through the values in the list\nfor day in rain:\n---\n    # if the value of day is positive\n    if day >= 0:\n---\n        # add day to the sum\n        # also add one to count\n        sumRain = sumRain + day\n        count = count + 1.0\n---\n# if count is positive\nif count > 0:\n---\n    # calculate and print the average\n    ave = sumRain / count\n    print("Average",ave)\n---\n# otherwise\nelse:\n---\n    # print no rain\n    print("No rain")\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/rainfall",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.9.1",
                  optional: false,
                  description:
                    "Construct a program that correctly solves the rainfall problem ----- # initializ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Rainfall_AC",
                data: {
                  id: 10823,
                  base_course: "StudentCSP",
                  name: "Rainfall_AC",
                  chapter: "CSPIntroData",
                  subchapter: "rainfall",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Rainfall_AC data-question_label="16.9.2">\n<div id=Rainfall_AC_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Rainfall_AC_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# initialize the variables\nrain = [0,5,1,0,-1,6,7,-2,0]\nsumRain = 0\ncount = 0\n\n# Your code goes here\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/rainfall",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.9.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16. Chapter 16 - Working with Collections/16.9 Rainfall Problem",
                data: {
                  id: 11687,
                  base_course: "StudentCSP",
                  name: "16. Chapter 16 - Working with Collections/16.9 Rainfall Problem",
                  chapter: "CSPIntroData",
                  subchapter: "rainfall",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "16.10 Chapter 16 - Concept Summary",
              num: 1000,
              chapter: "CSPIntroData",
              subchapter: "summary",
              id: 11688,
              numQuestions: 1
            },
            children: [
              {
                key: "16. Chapter 16 - Working with Collections/16.10 Chapter 16 - Concept Summary",
                data: {
                  id: 11688,
                  base_course: "StudentCSP",
                  name: "16. Chapter 16 - Working with Collections/16.10 Chapter 16 - Concept Summary",
                  chapter: "CSPIntroData",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "mixup_data",
            data: {
              title: "16.11 Mixed Up Code Practice",
              num: 1100,
              chapter: "CSPIntroData",
              subchapter: "mixup_data",
              id: 29720,
              numQuestions: 8
            },
            children: [
              {
                key: "ch16ex1muc",
                data: {
                  id: 29682,
                  base_course: "StudentCSP",
                  name: "ch16ex1muc",
                  chapter: "CSPIntroData",
                  subchapter: "mixup_data",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch16ex1muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should swap the first and last values of the list “numbers” using indexing. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="16.11.1"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        numbers = [3, 2, 1, 4]\n---\nfirst = numbers[0]\nlast = numbers[3]\n---\nnumbers[0] = last\nnumbers[-1] = first\n---\nfirst = numbers[1]\nlast = numbers[4] #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroData/mixup_data",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.11.1",
                  optional: false,
                  description:
                    "The following program segment should swap the first and last values of the list ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex2muc",
                data: {
                  id: 29683,
                  base_course: "StudentCSP",
                  name: "ch16ex2muc",
                  chapter: "CSPIntroData",
                  subchapter: "mixup_data",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch16ex2muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should iterate through the list of prices and discount them by 50%. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="16.11.2"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        price_lst = [21.99, 25.99, 19.99, 10.99, 15.99]\ndiscounts = []\n---\nfor price in price_lst:\n---\n    new_price = price * .50\n---\n    discounts.append(new_price)\n---\nfor price in discounts: #distractor\n---\n    price.append(price_lst) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroData/mixup_data",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.11.2",
                  optional: false,
                  description:
                    "The following program segment should iterate through the list of prices and disc",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex3muc",
                data: {
                  id: 29684,
                  base_course: "StudentCSP",
                  name: "ch16ex3muc",
                  chapter: "CSPIntroData",
                  subchapter: "mixup_data",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch16ex3muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should iterate through the strings in &lt;i&gt;list&lt;/i&gt; and append them to &lt;i&gt;long_list&lt;/i&gt; if the length is greater than 4. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="16.11.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        list = ["four", "Michigan", "yellow", "at", "blue"]\nlong_list = []\n---\nfor each item in list:\n---\n    if len(item) > 4:\n---\n        long_list.append(item)\n---\n        item.append(long_list) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroData/mixup_data",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.11.3",
                  optional: false,
                  description:
                    "The following program segment should iterate through the strings in <i>list</i> ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex4muc",
                data: {
                  id: 29685,
                  base_course: "StudentCSP",
                  name: "ch16ex4muc",
                  chapter: "CSPIntroData",
                  subchapter: "mixup_data",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch16ex4muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should first replace the last item of the list &lt;i&gt;months&lt;/i&gt; with “November” then append “December” to the end of the list. But, the blocks have been mixed up and include extra blocks that aren’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="16.11.4"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        months = ["January", "March", "June", "August", "October"]\nnew_month = "November"\n---\nmonths[4] = new_month\n---\nmonths.append("December")\n---\nmonths[5] = new_month #distractor\n---\nmonths[-1] = "December" #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroData/mixup_data",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.11.4",
                  optional: false,
                  description:
                    "The following program segment should first replace the last item of the list <i>",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex5muc",
                data: {
                  id: 29686,
                  base_course: "StudentCSP",
                  name: "ch16ex5muc",
                  chapter: "CSPIntroData",
                  subchapter: "mixup_data",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch16ex5muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should iterate through the list &lt;i&gt;terms&lt;/i&gt; and then add each item to the list &lt;i&gt;vocab&lt;/i&gt; if it is not already in the list. If the word is already in &lt;i&gt;vocab&lt;/i&gt;, then the program should add 1 to the variable “counter”. But the blocks have been mixed up and include extra blocks that aren’t needed in the solution. Drag the needed blocks from the left and put them in the correct order on the right. Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="16.11.5"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        terms = ["accent", "vertigo", "libra", "illusion"]\nvocab = ["hereditary", "illusion", "vertigo", "velocity", "fallacy"]\ncounter = 0\n---\nfor word in terms:\n---\n    if word NOT in vocab:\n---\n        vocab.append(word)\n---\n        word.append(vocab) #distractor\n---\n    elif word in vocab:\n---\n        counter += 1\n---\n        counter + 1 #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroData/mixup_data",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.11.5",
                  optional: false,
                  description:
                    "The following program segment should iterate through the list <i>terms</i> and t",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex6muc",
                data: {
                  id: 29687,
                  base_course: "StudentCSP",
                  name: "ch16ex6muc",
                  chapter: "CSPIntroData",
                  subchapter: "mixup_data",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch16ex6muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should reverse the order of the list &lt;i&gt;oldList&lt;/i&gt;, by storing it in the list &lt;i&gt;soFar&lt;/i&gt;. Print the result at the end. The blocks have been mixed up and include extra blocks that aren’t needed in the solution. Drag the needed blocks from the left and put them in the correct order on the right. Click the &lt;i/&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="16.11.6"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        oldList= [“this”, “is”, “a”, “list”]\nnewList=[]\n---\nfor x in range(0, len(oldList)):\n---\nfor x in range(0, list(oldList)): #distractor\n---\n    newList = oldList[x] + newList\n---\n    newList = x[oldList] + newList #distractor\n---\nprint(newList)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroData/mixup_data",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.11.6",
                  optional: false,
                  description:
                    "The following program segment should reverse the order of the list <i>oldList</i",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex7muc",
                data: {
                  id: 29688,
                  base_course: "StudentCSP",
                  name: "ch16ex7muc",
                  chapter: "CSPIntroData",
                  subchapter: "mixup_data",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch16ex7muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should first print out the program’s instructions. Next it should continuously ask the user if it wants to add a word to a list &lt;i&gt;vocabulary&lt;/i&gt; and then append it to the end the list IF the word is not already in the list. The blocks have been mixed up and include extra blocks that aren’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="16.11.7"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        print("Enter a word to add it to the vocabulary list or type in \'quit\' to end the program.")\nresponse = 0\nvocabulary = []\n---\nwhile response != "quit":\n---\nwhile response == "quit": #distractor\n---\n    response = input("Enter a vocabulary word:")\n---\n    if response not in vocabulary:\n---\n        vocabulary.append(response)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPIntroData/mixup_data",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.11.7",
                  optional: false,
                  description:
                    "The following program segment should first print out the program's instructions.",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16. Chapter 16 - Working with Collections/16.11 Mixed Up Code Practice",
                data: {
                  id: 29720,
                  base_course: "StudentCSP",
                  name: "16. Chapter 16 - Working with Collections/16.11 Mixed Up Code Practice",
                  chapter: "CSPIntroData",
                  subchapter: "mixup_data",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "16.12 Chapter 16 Exercises",
              num: 1200,
              chapter: "CSPIntroData",
              subchapter: "Exercises",
              id: 11689,
              numQuestions: 21
            },
            children: [
              {
                key: "ch16ex1q",
                data: {
                  id: 10788,
                  base_course: "StudentCSP",
                  name: "ch16ex1q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex1q data-question_label="16.12.1">\n<div id=ch16ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nname = \'Mark"\nstart = "My name is \'\ncombined = start  name\nprint(len(combined)\nprint(combined)\nprint name * 3\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex2q",
                data: {
                  id: 10789,
                  base_course: "StudentCSP",
                  name: "ch16ex2q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex2q data-question_label="16.12.2">\n<div id=ch16ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\naString =\nbString = "bow"\ncString = (aString + bString) * 2\nprint(len(cString))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex3q",
                data: {
                  id: 10790,
                  base_course: "StudentCSP",
                  name: "ch16ex3q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex3q data-question_label="16.12.3">\n<div id=ch16ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nmyFirstList = [12,"ape"13]\nprint(len(myFirstList)\nprint(myfirstList * 3)\nmySecondList = myFirstList + [321.4\nprint(mySecondList\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex4q",
                data: {
                  id: 10791,
                  base_course: "StudentCSP",
                  name: "ch16ex4q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex4q data-question_label="16.12.4">\n<div id=ch16ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef nameProcedure(name):\nstart = "My name is"\ncombined = start * (name * 2)\nprint(combined)\nprint(len(combined)\n\n\nnameProcedure(John)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex5q",
                data: {
                  id: 10792,
                  base_course: "StudentCSP",
                  name: "ch16ex5q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex5q data-question_label="16.12.5">\n<div id=ch16ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex5q_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef itemLister(items):\n    items[0] = "First item\'\n    items[1] = items0]\n    items[2] = items[2] + 1\n    print items\n\n itemLister([2,4,6 8])\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex6q",
                data: {
                  id: 10793,
                  base_course: "StudentCSP",
                  name: "ch16ex6q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex6q data-question_label="16.12.6">\n<div id=ch16ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef gradeAverage(aList):\n    sum = 0\n    for num in aList:\n\n    average =\n    return average\n\naList = [99, 100, 74, 63, 100, 100]\nprint(gradeAverage(aList))\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex7q",
                data: {
                  id: 10794,
                  base_course: "StudentCSP",
                  name: "ch16ex7q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex7q data-question_label="16.12.7">\n<div id=ch16ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsource = ["This","is","a","list"]\nsoFar = []\nfor index in range(0,len(source)):\nsoFar = [source[index]] + soFar\nprint(soFar)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex8q",
                data: {
                  id: 10795,
                  base_course: "StudentCSP",
                  name: "ch16ex8q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex8q data-question_label="16.12.8">\n<div id=ch16ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nitems = ["hi" 2, 3, 4]\nitems[0] = items[0] * items0\nitems(1) = items[2] - 3\nitems[2] = items[1]\nprint(items)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex9q",
                data: {
                  id: 10796,
                  base_course: "StudentCSP",
                  name: "ch16ex9q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex9q data-question_label="16.12.9">\n<div id=ch16ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# setup the source list\nsource = ["This","is" "a","list"]\n\n# Set the accumulator to the empty list\nsoFar = [\n\n# Loop through all the items in the source list\nfor index in range(0,len(source))\n\n    # Add the current item in the source and print the current items in soFar\n    soFar = [source[index]] + sofar\n    print(soFar)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex10q",
                data: {
                  id: 10797,
                  base_course: "StudentCSP",
                  name: "ch16ex10q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex10q data-question_label="16.12.10">\n<div id=ch16ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# setup the source list\nsource = ["This","is","a","list"]\n\n# Set the accumulator to the empty list\nsoFar = []\n\n# Loop through all the items in the source list\nfor index in range(0,len(source)):\n\n    # Add a list with the current item from source to soFar\n    soFar =  [source[index]] + soFar\nprint(soFar)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex11q",
                data: {
                  id: 10798,
                  base_course: "StudentCSP",
                  name: "ch16ex11q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex11q data-question_label="16.12.11">\n<div id=ch16ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnumbers = [0,1,2,3,4,5,6,7,8,9,10]\nevenList = []\nfor index in range(0,len(numbers),2):\n    evenList = evenList + [numbers[index]]\nprint(evenList)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex12q",
                data: {
                  id: 10799,
                  base_course: "StudentCSP",
                  name: "ch16ex12q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex12q data-question_label="16.12.12">\n<div id=ch16ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# initialize the variables\nnumbers = [0,1,2,3,4,5,6,7,8,9,10]\nevens = []\n\n# loop though every other index\nfor index in range(0,len(numbers),2):\n\n    # add the lists\n    evens = evens + [numbers[index]]\n\n# print the result\nprint(evens)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex13q",
                data: {
                  id: 10800,
                  base_course: "StudentCSP",
                  name: "ch16ex13q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex13q data-question_label="16.12.13">\n<div id=ch16ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfor index in range(5, -1, -1):\n    print(index)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex14q",
                data: {
                  id: 10801,
                  base_course: "StudentCSP",
                  name: "ch16ex14q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex14q data-question_label="16.12.14">\n<div id=ch16ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# initialize the variables\nsource = ["This","is","a","list"]\nnewList = []\n\n# loop from the last index to the first (0)\nfor index in range(len(source), 1, -1):\n\n# append the lists\nnewList = newList + [source[index]]\n\n# print the current value of the list\nprint(newList)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex15q",
                data: {
                  id: 10802,
                  base_course: "StudentCSP",
                  name: "ch16ex15q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex15q data-question_label="16.12.15">\n<div id=ch16ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex16q",
                data: {
                  id: 10803,
                  base_course: "StudentCSP",
                  name: "ch16ex16q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex16q data-question_label="16.12.16">\n<div id=ch16ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex17q",
                data: {
                  id: 10804,
                  base_course: "StudentCSP",
                  name: "ch16ex17q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex17q data-question_label="16.12.17">\n<div id=ch16ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex18q",
                data: {
                  id: 10805,
                  base_course: "StudentCSP",
                  name: "ch16ex18q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex18q data-question_label="16.12.18">\n<div id=ch16ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex19q",
                data: {
                  id: 10806,
                  base_course: "StudentCSP",
                  name: "ch16ex19q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex19q data-question_label="16.12.19">\n<div id=ch16ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch16ex20q",
                data: {
                  id: 10807,
                  base_course: "StudentCSP",
                  name: "ch16ex20q",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch16ex20q data-question_label="16.12.20">\n<div id=ch16ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch16ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPIntroData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "16.12.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "16. Chapter 16 - Working with Collections/16.12 Chapter 16 Exercises",
                data: {
                  id: 11689,
                  base_course: "StudentCSP",
                  name: "16. Chapter 16 - Working with Collections/16.12 Chapter 16 Exercises",
                  chapter: "CSPIntroData",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPStringPieces",
        data: {
          title: "17. Chapter 17 - Getting pieces out of strings and lists",
          num: 17
        },
        children: [
          {
            key: "piecesstrings",
            data: {
              title: "17.1 Breaking Strings into Pieces",
              num: 100,
              chapter: "CSPStringPieces",
              subchapter: "piecesstrings",
              id: 11690,
              numQuestions: 1
            },
            children: [
              {
                key: "17. Chapter 17 - Getting pieces out of strings and lists/17.1 Breaking Strings into Pieces",
                data: {
                  id: 11690,
                  base_course: "StudentCSP",
                  name: "17. Chapter 17 - Getting pieces out of strings and lists/17.1 Breaking Strings into Pieces",
                  chapter: "CSPStringPieces",
                  subchapter: "piecesstrings",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "madLibPieces",
            data: {
              title: "17.2 Making MadLib Stories, Easier",
              num: 200,
              chapter: "CSPStringPieces",
              subchapter: "madLibPieces",
              id: 11691,
              numQuestions: 2
            },
            children: [
              {
                key: "madlib1",
                data: {
                  id: 11392,
                  base_course: "StudentCSP",
                  name: "madlib1",
                  chapter: "CSPStringPieces",
                  subchapter: "madLibPieces",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=madlib1 data-question_label="17.2.1">\n<div id=madlib1_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="madlib1_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 2: StEx-line1; 3: StEx-line2; 4: StEx-line3; 5: StEx-line4; 6: StEx-line5; 9: StEx-line6; 10: StEx-line7; 11: StEx-line8; 12: StEx-line9; 13: StEx-line10; 16: StEx-line11; 17: StEx-line12; 18: StEx-line13; 19: StEx-line14; 20: StEx-line15;*atype**doubleq*Structural tour*doubleq*; 2-6: StEx-line1-5; 9-13: StEx-line6-10; 16-20: StEx-line11-15;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# initialize the variables\nfirstName = "Pat"\nlastName = "Smith"\ngender = "girl"\naddress = "65 Elm Street"\nverb = "eat"\n\n# create the story\nstart = "Once there was a " + gender + " named " + firstName + "."\nnext1 = "A good " + gender + " living at " + address + "."\nnext2 = "One day, a wicked witch came to the " + lastName + " house."\nnext3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\nending = "But " + firstName + " was smart and avoided the wicked witch."\n\n# print the story\nprint(start)\nprint(next1)\nprint(next2)\nprint (next3)\nprint(ending)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/madLibPieces",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.2.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17. Chapter 17 - Getting pieces out of strings and lists/17.2 Making MadLib Stories, Easier",
                data: {
                  id: 11691,
                  base_course: "StudentCSP",
                  name: "17. Chapter 17 - Getting pieces out of strings and lists/17.2 Making MadLib Stories, Easier",
                  chapter: "CSPStringPieces",
                  subchapter: "madLibPieces",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "split",
            data: {
              title: "17.3 Using the Split Function",
              num: 300,
              chapter: "CSPStringPieces",
              subchapter: "split",
              id: 11692,
              numQuestions: 8
            },
            children: [
              {
                key: "firstsplit",
                data: {
                  id: 11396,
                  base_course: "StudentCSP",
                  name: "firstsplit",
                  chapter: "CSPStringPieces",
                  subchapter: "split",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=firstsplit data-question_label="17.3.1">\n<div id=firstsplit_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="firstsplit_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by line tour*doubleq*; 2: StP1-line1; 5: StP1-line2; 8: StP1-line3; 9: StP1-line4; 10: StP1-line5;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# create the input\ninput = "Pat,Smith,girl,65 Elm Street,eat"\n\n# split on the comma\npieces = input.split(",")\n\n# print the values\nprint(pieces)\nprint("First name is:")\nprint(pieces[0])\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/split",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17_3_1_question_firstsplit",
                data: {
                  id: 11397,
                  base_course: "StudentCSP",
                  name: "17_3_1_question_firstsplit",
                  chapter: "CSPStringPieces",
                  subchapter: "split",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="17.3.2" data-multipleanswers="false"  id="17_3_1_question_firstsplit"  style="visibility: hidden;">\n    <p>What do you think we would get if we executed <code class="docutils literal notranslate"><span class="pre">print(pieces[3])</span></code></p>\n\n    <li data-component="answer"  id="17_3_1_question_firstsplit_opt_a">Smith</li><li data-component="feedback">That\'s pieces[1].</li>\n    \n    <li data-component="answer"  id="17_3_1_question_firstsplit_opt_b">girl</li><li data-component="feedback">That\'s pieces[2]</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="17_3_1_question_firstsplit_opt_c">65 Elm Street</li><li data-component="feedback">The address is at position 3 in the resulting list.</li>\n    \n    <li data-component="answer"  id="17_3_1_question_firstsplit_opt_d">eat</li><li data-component="feedback">That\'s pieces[4]</li>\n    \n    <li data-component="answer"  id="17_3_1_question_firstsplit_opt_e">We would get an error</li><li data-component="feedback">Why would this cause an error?  We can use indices to get the element at an index in a list.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/split",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.3.2",
                  optional: false,
                  description: "What do you think we would get if we executed ``print(pieces[3])``",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17_3_2_question_firstsplit2",
                data: {
                  id: 11398,
                  base_course: "StudentCSP",
                  name: "17_3_2_question_firstsplit2",
                  chapter: "CSPStringPieces",
                  subchapter: "split",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="17.3.3" data-multipleanswers="false"  id="17_3_2_question_firstsplit2"  style="visibility: hidden;">\n    <p>What do you think we would get if we executed <code class="docutils literal notranslate"><span class="pre">print(pieces[5])</span></code></p>\n\n    <li data-component="answer"  id="17_3_2_question_firstsplit2_opt_a">Smith</li><li data-component="feedback">That\'s pieces[1].</li>\n    \n    <li data-component="answer"  id="17_3_2_question_firstsplit2_opt_b">girl</li><li data-component="feedback">That\'s pieces[2].</li>\n    \n    <li data-component="answer"  id="17_3_2_question_firstsplit2_opt_c">65 Elm Street</li><li data-component="feedback">That\'s pieces[3].</li>\n    \n    <li data-component="answer"  id="17_3_2_question_firstsplit2_opt_d">eat</li><li data-component="feedback">That\'s pieces[4].</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="17_3_2_question_firstsplit2_opt_e">We would get an error</li><li data-component="feedback">The error happens because that index is past the end of the list.  The last item is at index 4.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/split",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.3.3",
                  optional: false,
                  description: "What do you think we would get if we executed ``print(pieces[5])``",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "madlib1_split",
                data: {
                  id: 11399,
                  base_course: "StudentCSP",
                  name: "madlib1_split",
                  chapter: "CSPStringPieces",
                  subchapter: "split",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=madlib1_split data-question_label="17.3.4">\n<div id=madlib1_split_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="madlib1_split_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural tour*doubleq*; 2: StP1-line1; 5: StP1-line2; 8-12: StP2-line3-7; 15-19: StP2-line8-12; 22-26: StP2-line13-17;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# create the input\ninput = "Pat,Smith,girl,65 Elm Street,eat"\n\n# split at the comma\npieces = input.split(",")\n\n# initialize the variables\nfirstName = pieces[0]\nlastName = pieces[1]\ngender = pieces[2]\naddress = pieces[3]\nverb = pieces[4]\n\n# create the story\nstart = "Once there was a " + gender + " named " + firstName + "."\nnext1 = "A good " + gender + " living at " + address + "."\nnext2 = "One day, a wicked witch came to the " + lastName + " house."\nnext3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\nending = "But " + firstName + " was smart and avoided the wicked witch."\n\n# print the story\nprint(start)\nprint(next1)\nprint(next2)\nprint(next3)\nprint(ending)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/split",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.3.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "madlib1_split2",
                data: {
                  id: 11400,
                  base_course: "StudentCSP",
                  name: "madlib1_split2",
                  chapter: "CSPStringPieces",
                  subchapter: "split",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=madlib1_split2 data-question_label="17.3.5">\n<div id=madlib1_split2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="madlib1_split2_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural tour*doubleq*; 2: StP3-line1; 5: StP1-line2; 8-12: StP2-line3-7; 15-19: StP2-line8-12; 22-26: StP2-line13-17;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# create the input\ninput = "Abe,Brown,boy,1313 Maple Lane,trick"\n\n# split at the comma\npieces = input.split(",")\n\n# initialize the variables\nfirstName = pieces[0]\nlastName = pieces[1]\ngender = pieces[2]\naddress = pieces[3]\nverb = pieces[4]\n\n# create the story\nstart = "Once there was a " + gender + " named " + firstName + "."\nnext1 = "A good " + gender + " living at " + address + "."\nnext2 = "One day, a wicked witch came to the " + lastName + " house."\nnext3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\nending = "But " + firstName + " was smart and avoided the wicked witch."\n\n# print the story\nprint(start)\nprint(next1)\nprint(next2)\nprint(next3)\nprint(ending)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/split",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.3.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17_3_3_WSq",
                data: {
                  id: 11401,
                  base_course: "StudentCSP",
                  name: "17_3_3_WSq",
                  chapter: "CSPStringPieces",
                  subchapter: "split",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=17_3_3_WSq data-question_label="17.3.6">\n<div id=17_3_3_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="17_3_3_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/split",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.3.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17_3_3_WSa",
                data: {
                  id: 11402,
                  base_course: "StudentCSP",
                  name: "17_3_3_WSa",
                  chapter: "CSPStringPieces",
                  subchapter: "split",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=17_3_3_WSa data-question_label="17.3.7">\n<div id=17_3_3_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="17_3_3_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# create the input\ninput = "(805)555-8585"\n\n# split on the close-parenthesis\nphoneNumber = input.split(")")\n\n# print the value\nprint("My number is:")\nprint(phoneNumber[1])\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/split",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.3.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17. Chapter 17 - Getting pieces out of strings and lists/17.3 Using the Split Function",
                data: {
                  id: 11692,
                  base_course: "StudentCSP",
                  name: "17. Chapter 17 - Getting pieces out of strings and lists/17.3 Using the Split Function",
                  chapter: "CSPStringPieces",
                  subchapter: "split",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "outOfRange",
            data: {
              title: "17.4 Out of Range Error",
              num: 400,
              chapter: "CSPStringPieces",
              subchapter: "outOfRange",
              id: 11693,
              numQuestions: 4
            },
            children: [
              {
                key: "Index_Error",
                data: {
                  id: 11393,
                  base_course: "StudentCSP",
                  name: "Index_Error",
                  chapter: "CSPStringPieces",
                  subchapter: "outOfRange",
                  author: "bmiller",
                  question_type: "activeCode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Index_Error data-question_label="17.4.1">\n<div id=Index_Error_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Index_Error_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural tour*doubleq*; 2: StP3-line1; 5: StP1-line2; 8-12: StP2-line3-7; 15-19: StP2-line8-12; 22-26: StP2-line13-17;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# create the input\ninput = "Abe,Brown,boy,1313 Maple Lane,trick"\n\n# split at the comma\npieces = input.split(",")\n\n# initialize the variables\nfirstName = pieces[1]\nlastName = pieces[2]\ngender = pieces[3]\naddress = pieces[4]\nverb = pieces[5]\n\n# create the story\nstart = "Once there was a " + gender + " named " + firstName + "."\nnext1 = "A good " + gender + " living at " + address + "."\nnext2 = "One day, a wicked witch came to the " + lastName + " house."\nnext3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\nending = "But " + firstName + " was smart and avoided the wicked witch."\n\n# print the story\nprint(start)\nprint(next1)\nprint(next2)\nprint(next3)\nprint(ending)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/outOfRange",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "Range_Len",
                data: {
                  id: 11394,
                  base_course: "StudentCSP",
                  name: "Range_Len",
                  chapter: "CSPStringPieces",
                  subchapter: "outOfRange",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=Range_Len data-question_label="17.4.2">\n<div id=Range_Len_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="Range_Len_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line by Line Tour*doubleq*; 1: lst2-line1; 2: lst2-line2; 3: lst2-line3;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nmyString = "Hello"\nfor index in range(0,len(myString)):\n    print(myString[index])\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/outOfRange",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.4.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "All_Items",
                data: {
                  id: 11395,
                  base_course: "StudentCSP",
                  name: "All_Items",
                  chapter: "CSPStringPieces",
                  subchapter: "outOfRange",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=All_Items data-question_label="17.4.3">\n<div id=All_Items_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="All_Items_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nmyList = ["this",1,"can","do", 2]\n# You fill in here\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/outOfRange",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.4.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17. Chapter 17 - Getting pieces out of strings and lists/17.4 Out of Range Error",
                data: {
                  id: 11693,
                  base_course: "StudentCSP",
                  name: "17. Chapter 17 - Getting pieces out of strings and lists/17.4 Out of Range Error",
                  chapter: "CSPStringPieces",
                  subchapter: "outOfRange",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "strProcParam",
            data: {
              title: "17.5 Creating a Procedure with Parameters",
              num: 500,
              chapter: "CSPStringPieces",
              subchapter: "strProcParam",
              id: 11694,
              numQuestions: 3
            },
            children: [
              {
                key: "madlib_function",
                data: {
                  id: 11403,
                  base_course: "StudentCSP",
                  name: "madlib_function",
                  chapter: "CSPStringPieces",
                  subchapter: "strProcParam",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=madlib_function data-question_label="17.5.1">\n<div id=madlib_function_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="madlib_function_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Structural tour*doubleq*; 1: Stf1-line1; 4: Stf1-line2; 5: Stf1-line3; 6: Stf1-line4; 7: Stf1-line5; 8: Stf1-line6; 11-15: Stf1-line7-11; 18: Stf1-line13;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef witchStory (firstName, lastName, gender, address, verb):\n\n    # create the story\n    start = "Once there was a " + gender + " named " + firstName + "."\n    next1 = "A good " + gender + " living at " + address + "."\n    next2 = "One day, a wicked witch came to the " + lastName + " house."\n    next3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\n    ending = "But " + firstName + " was smart and avoided the wicked witch."\n\n    # print the story\n    print(start)\n    print(next1)\n    print(next2)\n    print(next3)\n    print(ending)\n\n# call the procedure\nwitchStory("Abe", "Brown", "boy", "1313 Maple Lane", "trick")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/strProcParam",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.5.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17_5_1_madlib_proc1",
                data: {
                  id: 11404,
                  base_course: "StudentCSP",
                  name: "17_5_1_madlib_proc1",
                  chapter: "CSPStringPieces",
                  subchapter: "strProcParam",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="17.5.2" data-multipleanswers="false"  id="17_5_1_madlib_proc1"  style="visibility: hidden;">\n    <p>What would be the value of <code class="docutils literal notranslate"><span class="pre">lastName</span></code> in <code class="docutils literal notranslate"><span class="pre">witchStory</span></code> given the following call to the procedure?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">witchStory</span><span class="p">(</span><span class="s2">&quot;Emily&quot;</span><span class="p">,</span> <span class="s2">&quot;Smith&quot;</span><span class="p">,</span> <span class="s2">&quot;girl&quot;</span><span class="p">,</span> <span class="s2">&quot;2783 Main Street&quot;</span><span class="p">,</span> <span class="s2">&quot;smell&quot;</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="17_5_1_madlib_proc1_opt_a">Emily</li><li data-component="feedback">That is the value of firstName.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="17_5_1_madlib_proc1_opt_b">Smith</li><li data-component="feedback">That is the value of lastName.</li>\n    \n    <li data-component="answer"  id="17_5_1_madlib_proc1_opt_c">girl</li><li data-component="feedback">That is the value of gender.</li>\n    \n    <li data-component="answer"  id="17_5_1_madlib_proc1_opt_d">2783 Main Street</li><li data-component="feedback">That is the value of address.</li>\n    \n    <li data-component="answer"  id="17_5_1_madlib_proc1_opt_e">smell</li><li data-component="feedback">That is the value of verb.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/strProcParam",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.5.2",
                  optional: false,
                  description:
                    "What would be the value of ``lastName`` in ``witchStory`` given the following ca",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17. Chapter 17 - Getting pieces out of strings and lists/17.5 Creating a Procedure with Parameters",
                data: {
                  id: 11694,
                  base_course: "StudentCSP",
                  name: "17. Chapter 17 - Getting pieces out of strings and lists/17.5 Creating a Procedure with Parameters",
                  chapter: "CSPStringPieces",
                  subchapter: "strProcParam",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "createPartsOfStrings",
            data: {
              title: "17.6 Creating parts of strings",
              num: 600,
              chapter: "CSPStringPieces",
              subchapter: "createPartsOfStrings",
              id: 11695,
              numQuestions: 5
            },
            children: [
              {
                key: "17_6_1_Find_red",
                data: {
                  id: 11383,
                  base_course: "StudentCSP",
                  name: "17_6_1_Find_red",
                  chapter: "CSPStringPieces",
                  subchapter: "createPartsOfStrings",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="17.6.2" data-multipleanswers="false"  id="17_6_1_Find_red"  style="visibility: hidden;">\n    <p>What will be printed when the following executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="nb">str</span> <span class="o">=</span> <span class="s2">&quot;His shirt is red&quot;</span>\n<span class="n">pos</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s2">&quot;is&quot;</span><span class="p">)</span>\n<span class="nb">print</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="17_6_1_Find_red_opt_a">1</li><li data-component="feedback">The find function returns the index of the first position that contains the given string.</li>\n    \n    <li data-component="answer"  id="17_6_1_Find_red_opt_b">9</li><li data-component="feedback">This would be true if it was pos = str.find(" is").</li>\n    \n    <li data-component="answer"  id="17_6_1_Find_red_opt_c">10</li><li data-component="feedback">This would be true if it was pos = str.find(" is") and the first position was 1, but it is 0.</li>\n    \n    <li data-component="answer"  id="17_6_1_Find_red_opt_d">-1</li><li data-component="feedback">A -1 is returned if the string you are looking for isn\'t found.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/createPartsOfStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.6.2",
                  optional: false,
                  description: "What will be printed when the following executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17_6_2_Find_Red",
                data: {
                  id: 11384,
                  base_course: "StudentCSP",
                  name: "17_6_2_Find_Red",
                  chapter: "CSPStringPieces",
                  subchapter: "createPartsOfStrings",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="17.6.3" data-multipleanswers="false"  id="17_6_2_Find_Red"  style="visibility: hidden;">\n    <p>What will be printed when the following executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="nb">str</span> <span class="o">=</span> <span class="s2">&quot;His shirt is red&quot;</span>\n<span class="n">pos</span> <span class="o">=</span> <span class="nb">str</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="s2">&quot;Red&quot;</span><span class="p">)</span>\n<span class="nb">print</span><span class="p">(</span><span class="n">pos</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="17_6_2_Find_Red_opt_a">1</li><li data-component="feedback">Why would this return 1?  What string was it looking for and where is that string in <code>str</code></li>\n    \n    <li data-component="answer"  id="17_6_2_Find_Red_opt_b">13</li><li data-component="feedback">This would be true if it was <code>str.find("red")</code>.</li>\n    \n    <li data-component="answer"  id="17_6_2_Find_Red_opt_c">14</li><li data-component="feedback">This would be true if it was <code>str.find("red")</code> and the first position was 1, but it is 0.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="17_6_2_Find_Red_opt_d">-1</li><li data-component="feedback">A -1 is returned when the string you are looking for isn\'t found.  Remember that case matters in Python!</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/createPartsOfStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.6.3",
                  optional: false,
                  description: "What will be printed when the following executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17. Chapter 17 - Getting pieces out of strings and lists/17.6 Creating parts of strings",
                data: {
                  id: 11695,
                  base_course: "StudentCSP",
                  name: "17. Chapter 17 - Getting pieces out of strings and lists/17.6 Creating parts of strings",
                  chapter: "CSPStringPieces",
                  subchapter: "createPartsOfStrings",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Find_ch17",
                data: {
                  id: 23167,
                  base_course: "StudentCSP",
                  name: "String_Find_ch17",
                  chapter: "CSPStringPieces",
                  subchapter: "createPartsOfStrings",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Find_ch17 data-question_label="17.6.1">\n<div id=String_Find_ch17_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Find_ch17_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nsentence = "This is a test"\npos = sentence.find("is")\nprint(pos)\npos = sentence.find("love")\nprint(pos)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/createPartsOfStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.6.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "String_Slice1_ch17",
                data: {
                  id: 23168,
                  base_course: "StudentCSP",
                  name: "String_Slice1_ch17",
                  chapter: "CSPStringPieces",
                  subchapter: "createPartsOfStrings",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=String_Slice1_ch17 data-question_label="17.6.4">\n<div id=String_Slice1_ch17_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="String_Slice1_ch17_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnamePart = "name: Anu Gao"\nposName = namePart.find("name:")\nif (posName > -1):\n    name = namePart[posName+6:len(namePart)]\nelse:\n    name = "Unknown"\nprint(name)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/createPartsOfStrings",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.6.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "17.7 Chapter 17 - Concept Summary",
              num: 700,
              chapter: "CSPStringPieces",
              subchapter: "summary",
              id: 11696,
              numQuestions: 1
            },
            children: [
              {
                key: "17. Chapter 17 - Getting pieces out of strings and lists/17.7 Chapter 17 - Concept Summary",
                data: {
                  id: 11696,
                  base_course: "StudentCSP",
                  name: "17. Chapter 17 - Getting pieces out of strings and lists/17.7 Chapter 17 - Concept Summary",
                  chapter: "CSPStringPieces",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "17.8 Chapter 17 Exercises",
              num: 800,
              chapter: "CSPStringPieces",
              subchapter: "Exercises",
              id: 11697,
              numQuestions: 21
            },
            children: [
              {
                key: "ch17ex1q",
                data: {
                  id: 11363,
                  base_course: "StudentCSP",
                  name: "ch17ex1q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex1q data-question_label="17.8.1">\n<div id=ch17ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# initialize the variables\nfirstName = "Pat\'\nlastName = "Smith"\ngender = girl"\naddress = "65 Elm Street\nverb = "eat"\n\n# create the story\nstart = "Once there was a "  gender + " named " + firstName + "."\nnext1 = "A good " + gender + " living at "  address + "."\nnext2 = "One day, a wicked witch came to the " + lastName + " house."\nnext3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\nending = "But " + firstname + " was smart and avoided the wicked witch."\n\n# print the story\nprint(start)\nprint(next1)\nprint(next2)\nprint (next3\nprint(ending)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex2q",
                data: {
                  id: 11364,
                  base_course: "StudentCSP",
                  name: "ch17ex2q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex2q data-question_label="17.8.2">\n<div id=ch17ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# create the input\ninput = "Pat,Smith,girl,65 Elm Street,eat\'\n\n# split on the comma\npieces = input.split(,)\n\n# print the values\nprint("First name is:" + pieces)\nprint("Last name is:" + pieces[2])\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex3q",
                data: {
                  id: 11365,
                  base_course: "StudentCSP",
                  name: "ch17ex3q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex3q data-question_label="17.8.3">\n<div id=ch17ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# create the input\ninput = "Pat,Smith girl,65 Elm Street,eat"\n\n# split at the comma\npieces = input.split(",)\n\n# initialize the variables\nfirstName = pieces[0]\nlastName = pieces[1\ngender = pieces[2]\naddress = pieces[3]\nverb = pieces[4]\n\n# create the story\nstart = "Once there was a " + gender + " named " + firstName + "."\nnext1 = "A good " + gender + " living at " + address + "."\nnext2 = "One day, a wicked witch came to the "  lastName + " house."\nnext3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\nending = "But " + firstName + " was smart and avoided the wicked witch."\n\n# print the story\nprint(start)\nprint next1\nprint(next2)\nprint(next3)\nprint(ending)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex4q",
                data: {
                  id: 11366,
                  base_course: "StudentCSP",
                  name: "ch17ex4q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex4q data-question_label="17.8.4">\n<div id=ch17ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# create the input\ninput = "eat, Elm Street, girl, Pat, Smith"\n\n# split at the comma\npieces = input.split(",")\n\n# initialize the variables\nfirstName =\nlastName =\ngender =\naddress =\nverb =\n\n# create the story\nstart = "Once there was a " + gender + " named " + firstName + "."\nnext1 = "A good " + gender + " living at " + address + "."\nnext2 = "One day, a wicked witch came to the " + lastName + " house."\nnext3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\nending = "But " + firstName + " was smart and avoided the wicked witch."\n\n# print the story\nprint(start)\nprint(next1)\nprint(next2)\nprint(next3)\nprint(ending)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex5q",
                data: {
                  id: 11367,
                  base_course: "StudentCSP",
                  name: "ch17ex5q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex5q data-question_label="17.8.5">\n<div id=ch17ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex5q_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef witchStory (firstName, lastName, gender, address, verb):\n\n# create the story\nstart = "Once there was a " + gender + " named " + firstName + "."\nnext1 = "A good " + gender + " living at " + address + "."\nnext2 = "One day, a wicked witch came to the " + lastName + " house."\nnext3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\nending = "But " + firstName + " was smart and avoided the wicked witch."\n\n    # print the story\n    print(start)\n    print(next1)\n    print(next2)\n    print(next3)\n    print(ending)\n\n# call the procedure\nwitchStory("boy", "Abe" "Brown", "1313 Maple Lane", "trick")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex6q",
                data: {
                  id: 11368,
                  base_course: "StudentCSP",
                  name: "ch17ex6q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex6q data-question_label="17.8.6">\n<div id=ch17ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# create the input\ninput = ["Pat,Smith,girl,65 Elm Street,eat", "John,Doe,Boy,25,123 Candy Lane, tickle"]\n\n# split at the comma\npieces = input.split(",")\n\n# initialize the variables\nfirstName = pieces[0]\nlastName = pieces[1]\ngender = pieces[2]\naddress = pieces[3]\nverb = pieces[4]\n\n# create the story\nstart = "Once there was a " + gender + " named " + firstName + "."\nnext1 = "A good " + gender + " living at " + address + "."\nnext2 = "One day, a wicked witch came to the " + lastName + " house."\nnext3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\nending = "But " + firstName + " was smart and avoided the wicked witch."\n\n# print the story\nprint(start)\nprint(next1)\nprint(next2)\nprint(next3)\nprint(ending)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex7q",
                data: {
                  id: 11369,
                  base_course: "StudentCSP",
                  name: "ch17ex7q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex7q data-question_label="17.8.7">\n<div id=ch17ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninput = "Roses,Violets,Sugar,Sue"\npieces = input.split(",")\nflower1 = pieces[1]\nflower2 = pieces[2]\nspice = pieces[3]\nname = pieces[4]\nline1 = flower1 + " are red"\nline2 = flower2 + " are blue"\nline3 = spice + " is sweet"\nline4 = "And so it " + name\nprint(line1)\nprint(line2)\nprint(line3)\nprint(line4)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex8q",
                data: {
                  id: 11370,
                  base_course: "StudentCSP",
                  name: "ch17ex8q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex8q data-question_label="17.8.8">\n<div id=ch17ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# create the input\ninput = "Abe,Brown,boy,1313 Maple Lane,trick"\n\n# split at the comma\npieces = input.split(,)\n\n# initialize the variables\nfirstName = pieces[1]\nlastName = pieces[2]\ngender = pieces[3]\naddress = pieces[5]\nverb = pieces[-1]\n\n# create the story\nstart = "Once there was a "  gender + " named " + firstName + "."\nnext1 = "A good " + gender + " living at " + address + "."\nnext2 = "One day, a wicked witch came to the " + lastName + " house."\nnext3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\nending = "But " + firstName + " was smart and avoided the wicked witch."\n\n# print the story\nprint("start")\nprint(next1)\nprint(next2)\nprint(next3)\nprint(ending)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex9q",
                data: {
                  id: 11371,
                  base_course: "StudentCSP",
                  name: "ch17ex9q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex9q data-question_label="17.8.9">\n<div id=ch17ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nnamePart = "name: Anu Gao"\nposName = namePart.find("name:")\nif (posName > -1):\n    name = namePart[posName+6:len(namePart)]\nelse:\n    name = "Unknown"\nprint(name)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex10q",
                data: {
                  id: 11372,
                  base_course: "StudentCSP",
                  name: "ch17ex10q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex10q data-question_label="17.8.10">\n<div id=ch17ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef witchStory (input):\n\n    # split at the comma\n    pieces = input.split(",")\n\n    # initialize the variables\n    firstName = pieces[0]\n    lastName = pieces[1]\n    gender = pieces[2]\n    address = pieces[3]\n    verb = pieces[4]\n\n    # create the story\n    start = "Once there was a " + gender + " named " + firstName + "."\n    next1 = "A good " + gender + " living at " + address + "."\n    next2 = "One day, a wicked witch came to the " + lastName + " house."\n    next3 = "The wicked witch was planning to " + verb + " " + firstName + "!"\n    ending = "But " + firstName + " was smart and avoided the wicked witch."\n\n    # print the story\n    print(start)\n    print(next1)\n    print(next2)\n    print(next3)\n    print(ending)\n\n# call the procedure\nwitchStory("Abe,Brown,boy,1313 Maple Lane,trick")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex11q",
                data: {
                  id: 11373,
                  base_course: "StudentCSP",
                  name: "ch17ex11q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex11q data-question_label="17.8.11">\n<div id=ch17ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninput = "Elvis, alien, blue"\npieces = input.split(",")\nname = pieces[0]\nthing = pieces[1]\ncolor = pieces[2]\nheadline = name + " was abducted by a " + color + " " + thing + "."\nprint(headline)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex12q",
                data: {
                  id: 11374,
                  base_course: "StudentCSP",
                  name: "ch17ex12q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex12q data-question_label="17.8.12">\n<div id=ch17ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nagePart = "Their age: 17"\nposAge = agePart.find("age:")\nif (posAge < 0):\n    age = agePart[posAge:len(agePart)]\nelse:\n    age = "Unknown"\nprint(age)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex13q",
                data: {
                  id: 11375,
                  base_course: "StudentCSP",
                  name: "ch17ex13q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex13q data-question_label="17.8.13">\n<div id=ch17ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninput = "Jay,shoes"\npieces = input.split(",")\nname = pieces[0]\nitem = pieces[1]\nprint("One day " + name + " went shopping.")\nprint("He wanted to buy " + item + ".")\nprint("But, he didn\'t like any.")\nprint("So, " + name + " went home.")\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex14q",
                data: {
                  id: 11376,
                  base_course: "StudentCSP",
                  name: "ch17ex14q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex14q data-question_label="17.8.14">\n<div id=ch17ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nagePart = "Their age: 17"\nposAge = agePart.find("age:")\nif (posAge > -1):\n    age = agePart[posAge+5:len(agePart)]\nelse:\n    age = "Unknown"\nprint(age)\n\nnamePart = "name: Anu Gao"\nposName = namePart.find("name:")\nif (posName > -1):\n    name = namePart[posName+6:len(namePart)]\nelse:\n    name = "Unknown"\nprint(name)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex15q",
                data: {
                  id: 11377,
                  base_course: "StudentCSP",
                  name: "ch17ex15q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex15q data-question_label="17.8.15">\n<div id=ch17ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex16q",
                data: {
                  id: 11378,
                  base_course: "StudentCSP",
                  name: "ch17ex16q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex16q data-question_label="17.8.16">\n<div id=ch17ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex17q",
                data: {
                  id: 11379,
                  base_course: "StudentCSP",
                  name: "ch17ex17q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex17q data-question_label="17.8.17">\n<div id=ch17ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex18q",
                data: {
                  id: 11380,
                  base_course: "StudentCSP",
                  name: "ch17ex18q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex18q data-question_label="17.8.18">\n<div id=ch17ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex19q",
                data: {
                  id: 11381,
                  base_course: "StudentCSP",
                  name: "ch17ex19q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex19q data-question_label="17.8.19">\n<div id=ch17ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex20q",
                data: {
                  id: 11382,
                  base_course: "StudentCSP",
                  name: "ch17ex20q",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch17ex20q data-question_label="17.8.20">\n<div id=ch17ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch17ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPStringPieces/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.8.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17. Chapter 17 - Getting pieces out of strings and lists/17.8 Chapter 17 Exercises",
                data: {
                  id: 11697,
                  base_course: "StudentCSP",
                  name: "17. Chapter 17 - Getting pieces out of strings and lists/17.8 Chapter 17 Exercises",
                  chapter: "CSPStringPieces",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam16a17",
            data: {
              title: "17.9 Exam Questions for Chapters 16 and 17",
              num: 900,
              chapter: "CSPStringPieces",
              subchapter: "exam16a17",
              id: 11698,
              numQuestions: 8
            },
            children: [
              {
                key: "e16a17_1",
                data: {
                  id: 11385,
                  base_course: "StudentCSP",
                  name: "e16a17_1",
                  chapter: "CSPStringPieces",
                  subchapter: "exam16a17",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="17.9.2" data-multipleanswers="false"  id="e16a17_1"  style="visibility: hidden;">\n    <p>What does the following code print?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">32</span><span class="p">,</span><span class="mi">64</span><span class="p">,</span><span class="mi">128</span><span class="p">,</span><span class="mi">256</span><span class="p">,</span><span class="mi">512</span><span class="p">,</span><span class="mi">1024</span><span class="p">,</span><span class="mi">2048</span><span class="p">]</span>\n<span class="n">answer</span> <span class="o">=</span> <span class="p">[]</span>\n<span class="k">for</span> <span class="n">index</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">numbers</span><span class="p">),</span><span class="mi">3</span><span class="p">):</span>\n    <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span> <span class="o">+</span> <span class="p">[</span><span class="n">numbers</span><span class="p">[</span><span class="n">index</span><span class="p">]]</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">answer</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e16a17_1_opt_a">[1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1204, 2048]</li><li data-component="feedback">This would be true if it was range(len(numbers))</li>\n    \n    <li data-component="answer"  id="e16a17_1_opt_b">[1, 4, 16, 64, 256, 1024]</li><li data-component="feedback">This would be true if it was range(0,len(numbers),2):</li>\n    \n    <li data-component="answer"  id="e16a17_1_opt_c">[2, 8, 32, 128, 512, 2048]</li><li data-component="feedback">This would be true it it was range(1,len(numbers),2):</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e16a17_1_opt_d">[1, 8, 64, 512]</li><li data-component="feedback">This code adds the values at indicies that are evenly divisible by 3 to the new answer array and prints the contents of the array.</li>\n    \n    <li data-component="answer"  id="e16a17_1_opt_e">out of range error</li><li data-component="feedback">This would be true if range included the second parameter, but it does not.  This will stop at one before the length of the array which is the last valid index.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/exam16a17",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.9.2",
                  optional: false,
                  description: "What does the following code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e16a17_2",
                data: {
                  id: 11386,
                  base_course: "StudentCSP",
                  name: "e16a17_2",
                  chapter: "CSPStringPieces",
                  subchapter: "exam16a17",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="17.9.3" data-multipleanswers="false"  id="e16a17_2"  style="visibility: hidden;">\n    <p>What does the following code print?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">source</span> <span class="o">=</span> <span class="s2">&quot;Hooray for CS&quot;</span>\n<span class="n">answer</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>\n<span class="k">for</span> <span class="n">index</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">source</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">2</span><span class="p">):</span>\n    <span class="n">answer</span> <span class="o">=</span> <span class="n">answer</span> <span class="o">+</span> <span class="n">source</span><span class="p">[</span><span class="n">index</span><span class="p">]</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">answer</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e16a17_2_opt_a">Crfyro</li><li data-component="feedback">This would be true if it was range(len(source)-2,0,-2).</li>\n    \n    <li data-component="answer"  id="e16a17_2_opt_b">SC rof yarooH</li><li data-component="feedback">This would be true if it was range(len(source)-1,0,-1).</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e16a17_2_opt_c">S o ao</li><li data-component="feedback">This adds elements from source to answer starting at the last index and moving forward toward the front by 2 each time.  It stops before index reaches 0.</li>\n    \n    <li data-component="answer"  id="e16a17_2_opt_d">Hoa o C</li><li data-component="feedback">This would be true if it was range(0,len(source),2)</li>\n    \n    <li data-component="answer"  id="e16a17_2_opt_e">out of range error</li><li data-component="feedback">This would be true if it was range(len(source),0,-2)</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/exam16a17",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.9.3",
                  optional: false,
                  description: "What does the following code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e16a17_3",
                data: {
                  id: 11387,
                  base_course: "StudentCSP",
                  name: "e16a17_3",
                  chapter: "CSPStringPieces",
                  subchapter: "exam16a17",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="17.9.4" data-multipleanswers="false"  id="e16a17_3"  style="visibility: hidden;">\n    <p>What is the value of name after executing the following code?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">image</span> <span class="kn">import</span> <span class="o">*</span>\n<span class="k">def</span> <span class="nf">example</span> <span class="p">(</span><span class="n">nameInput</span><span class="p">,</span> <span class="n">ageInput</span><span class="p">):</span>\n    <span class="n">pieces</span> <span class="o">=</span> <span class="n">nameInput</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span>\n    <span class="n">name</span> <span class="o">=</span> <span class="n">pieces</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>\n    <span class="n">gender</span> <span class="o">=</span> <span class="n">pieces</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>\n    <span class="n">sport</span> <span class="o">=</span> <span class="n">pieces</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>\n    <span class="n">age</span> <span class="o">=</span> <span class="n">ageInput</span>\n\n <span class="n">example</span><span class="p">(</span><span class="s2">&quot;Charlie Brown,boy,football&quot;</span><span class="p">,</span> <span class="mi">8</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e16a17_3_opt_a">Charlie</li><li data-component="feedback">This would be true if it was "Charlie Brown boy football" and we were splitting at the space characters.</li>\n    \n    <li data-component="answer"  id="e16a17_3_opt_b">Brown</li><li data-component="feedback">This would be true if it was "Charlie Brown boy football" and we were splitting at the space characters and it was name = pieces[1]</li>\n    \n    <li data-component="answer"  id="e16a17_3_opt_c">football</li><li data-component="feedback">This is the value of sport.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e16a17_3_opt_d">Charlie Brown</li><li data-component="feedback">The split function splits the string at the passed character which is a comma so the name is everything before the first comma.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/exam16a17",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.9.4",
                  optional: false,
                  description: "What is the value of name after executing the following code?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e16a17_4",
                data: {
                  id: 11388,
                  base_course: "StudentCSP",
                  name: "e16a17_4",
                  chapter: "CSPStringPieces",
                  subchapter: "exam16a17",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="17.9.5" data-multipleanswers="false"  id="e16a17_4"  style="visibility: hidden;">\n    <p>What does the following code print?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">myString</span> <span class="o">=</span> <span class="s2">&quot;It is a nice day&quot;</span>\n<span class="n">resString</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>\n<span class="k">for</span> <span class="n">char</span> <span class="ow">in</span> <span class="n">myString</span><span class="p">:</span>\n   <span class="n">resString</span> <span class="o">=</span> <span class="n">char</span> <span class="o">+</span> <span class="n">resString</span>\n<span class="nb">print</span> <span class="n">resString</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="e16a17_4_opt_a">yad ecin a si tI</li><li data-component="feedback">The for each loop will loop through each character and add it to the front of the result so this will reverse the string.</li>\n    \n    <li data-component="answer"  id="e16a17_4_opt_b">It is a nice day</li><li data-component="feedback">This would be true if it was resString = resString + char</li>\n    \n    <li data-component="answer"  id="e16a17_4_opt_c">The empty string</li><li data-component="feedback">While resString was initialized to the empty string it changes in the for each loop.</li>\n    \n    <li data-component="answer"  id="e16a17_4_opt_d">It will cause an error</li><li data-component="feedback">This is the correct syntax for the for each loop.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/exam16a17",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.9.5",
                  optional: false,
                  description: "What does the following code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e16a17_5",
                data: {
                  id: 11389,
                  base_course: "StudentCSP",
                  name: "e16a17_5",
                  chapter: "CSPStringPieces",
                  subchapter: "exam16a17",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="17.9.6" data-multipleanswers="false"  id="e16a17_5"  style="visibility: hidden;">\n    <p>What is the output from the code below?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>\n<span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span>\n<span class="n">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e16a17_5_opt_a">10 and -1</li><li data-component="feedback">This would be true if we were using index 2 everywhere instead of index 1.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e16a17_5_opt_b">5 and 2</li><li data-component="feedback">Since arrays indicies start at 0 this will print the 2nd element of a which is 5 and then add one to the second element of b which is 1 and print it.</li>\n    \n    <li data-component="answer"  id="e16a17_5_opt_c">10 and 4</li><li data-component="feedback">This would be true if we were using index 0 everywhere instead of index 1.</li>\n    \n    <li data-component="answer"  id="e16a17_5_opt_d">5 and 1</li><li data-component="feedback">This would be true if we hand\'t added 1 to b[1] before printing it.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/exam16a17",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.9.6",
                  optional: false,
                  description: "What is the output from the code below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e16a17_6",
                data: {
                  id: 11390,
                  base_course: "StudentCSP",
                  name: "e16a17_6",
                  chapter: "CSPStringPieces",
                  subchapter: "exam16a17",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="17.9.7" data-multipleanswers="false"  id="e16a17_6"  style="visibility: hidden;">\n    <p>Given the following code segment which of the below statements is the most true?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">t</span> <span class="o">=</span> <span class="mi">0</span>\n<span class="n">things</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">31</span><span class="p">]</span>\n<span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="n">things</span><span class="p">:</span>\n    <span class="n">t</span> <span class="o">=</span> <span class="n">t</span> <span class="o">+</span> <span class="n">number</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">t</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e16a17_6_opt_a">The printed result will be even and will be printed with a decimal point</li><li data-component="feedback">When you add two odd numbers you get an even number, but it will be an integer and not a decimal.</li>\n    \n    <li data-component="answer"  id="e16a17_6_opt_b">The printed result will be odd and will be printed with a decimal point</li><li data-component="feedback">This would be true if things had an odd number of items, but there are an even number.  Also the result will be an integer, not a decimal number.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e16a17_6_opt_c">The printed result will be even and will be printed without a decimal point</li><li data-component="feedback">When you add two odd numbers you get an even number that is an integer (no decimal point).</li>\n    \n    <li data-component="answer"  id="e16a17_6_opt_d">The printed result will be odd and will be printed without a decimal point</li><li data-component="feedback">This would b true if things had an odd number of items, but it has an even number of items.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/exam16a17",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.9.7",
                  optional: false,
                  description:
                    "Given the following code segment which of the below statements is the most true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e16a17_7",
                data: {
                  id: 11391,
                  base_course: "StudentCSP",
                  name: "e16a17_7",
                  chapter: "CSPStringPieces",
                  subchapter: "exam16a17",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="17.9.8" data-multipleanswers="false"  id="e16a17_7"  style="visibility: hidden;">\n    <p>What is printed when the following code executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">newString</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>\n<span class="n">phrase</span> <span class="o">=</span> <span class="s2">&quot;Rubber baby buggy bumpers.&quot;</span>\n<span class="k">for</span> <span class="n">letter</span> <span class="ow">in</span> <span class="n">phrase</span><span class="p">:</span>\n    <span class="k">if</span> <span class="n">letter</span> <span class="ow">in</span> <span class="s2">&quot;aeiou&quot;</span><span class="p">:</span>\n        <span class="n">newString</span> <span class="o">=</span> <span class="n">newString</span> <span class="o">+</span> <span class="n">letter</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">newString</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="e16a17_7_opt_a">ueauue</li><li data-component="feedback">The letter is only added to newString when it is a vowel and the list does not include y as a vowel.</li>\n    \n    <li data-component="answer"  id="e16a17_7_opt_b">ueayuyue</li><li data-component="feedback">This would be true if y was in the list of things you were looking for as a vowel, but it is not.</li>\n    \n    <li data-component="answer"  id="e16a17_7_opt_c">bbrbbybggybmprs</li><li data-component="feedback">This would be true if it was letter in "bcdfghjklmnpqrstvwxyz"</li>\n    \n    <li data-component="answer"  id="e16a17_7_opt_d">Rbbr bb bgg bmprs.</li><li data-component="feedback">This would be true if it was letter not in "aeiou"</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/exam16a17",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.9.8",
                  optional: false,
                  description: "What is printed when the following code executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17. Chapter 17 - Getting pieces out of strings and lists/17.9 Exam Questions for Chapters 16 and 17",
                data: {
                  id: 11698,
                  base_course: "StudentCSP",
                  name: "17. Chapter 17 - Getting pieces out of strings and lists/17.9 Exam Questions for Chapters 16 and 17",
                  chapter: "CSPStringPieces",
                  subchapter: "exam16a17",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "mix_stringPieces",
            data: {
              title: "17.10 Mixed Up Code Practice",
              num: 1000,
              chapter: "CSPStringPieces",
              subchapter: "mix_stringPieces",
              id: 29721,
              numQuestions: 8
            },
            children: [
              {
                key: "ch17ex1muc",
                data: {
                  id: 29701,
                  base_course: "StudentCSP",
                  name: "ch17ex1muc",
                  chapter: "CSPStringPieces",
                  subchapter: "mix_stringPieces",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch17ex1muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should split the string “phrase” by each word and assign the result to variable “x”. Then insert the word “Jordan” into the string &lt;i&gt;final&lt;/i&gt; and print the result.  But, the blocks have been mixed up and include extra blocks that aren’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="17.10.1"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        phrase = "Who did Jordan play against?"\n---\nx = phrase.split(" ")\n---\nx = split(phrase) #distractor\n---\nname = x[2]\n---\nname = x[3] #distractor\n---\nfinal = name + "is his name."\n---\nprint(final)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/mix_stringPieces",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.10.1",
                  optional: false,
                  description:
                    'The following program segment should split the string "phrase" by each word and ',
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex2muc",
                data: {
                  id: 29702,
                  base_course: "StudentCSP",
                  name: "ch17ex2muc",
                  chapter: "CSPStringPieces",
                  subchapter: "mix_stringPieces",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch17ex2muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print the integers &lt;i&gt;4, 9, 12&lt;/i&gt; in order using the find method on &lt;i&gt;str&lt;/i&gt;. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="17.10.2"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        str = "The girl was going home."\n---\nnum = str.find("girl")\nprint(num)\n---\nnum = str.find("going")\nprint(num) #paired\n---\nx = str.find("was")\nprint(x)\n---\nx = str.find("as")\nprint(x) #paired\n---\ny = str.find(" going")\nprint(y)\n---\ny = str.find("home")\nprint(y) #paired\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/mix_stringPieces",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.10.2",
                  optional: false,
                  description:
                    "The following program segment should print the integers <i>4, 9, 12</i> in order",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex3muc",
                data: {
                  id: 29703,
                  base_course: "StudentCSP",
                  name: "ch17ex3muc",
                  chapter: "CSPStringPieces",
                  subchapter: "mix_stringPieces",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch17ex3muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should take the name from &lt;i&gt;sent_1&lt;/i&gt; and assign it to the variable &lt;i&gt;first_name&lt;/i&gt; using indexing. Then add the string to the variable &lt;i&gt;last_name&lt;/i&gt; to create the variable &lt;i&gt;full_name&lt;/i&gt;. Finally, add &lt;i&gt;full_name&lt;/i&gt; to the &lt;i&gt;favorite&lt;/i&gt; and print the result. But, the blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="17.10.3"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        sent_1 = "When Jimi got here, there was a commotion."\nlast_name = " Hendrixx"\n---\nfirst_name = sent_1[5:9]\n---\nfirst_name = sent_1[5:8] #distractor\n---\nfull_name = first_name + last_name\n---\nfavorite = full_name + " is my favorite artist!"\n---\nfavorite = full_name + is my favorite artist! #distractor\n---\nprint(favorite)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/mix_stringPieces",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.10.3",
                  optional: false,
                  description:
                    "The following program segment should take the name from <i>sent_1</i> and assign",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex4muc",
                data: {
                  id: 29704,
                  base_course: "StudentCSP",
                  name: "ch17ex4muc",
                  chapter: "CSPStringPieces",
                  subchapter: "mix_stringPieces",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch17ex4muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should print the integer &lt;i&gt;7&lt;/i&gt; using the .find() procedure. But, the blocks have been mixed up and include extra blocks that aren’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="17.10.4"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        str = "Roads? Where we\'re going we don\'t need roads."\n---\npos = str.find("where") #distractor\n---\npos = str.find("Where")\n---\npos = str.find("need") #distractor\n---\nprint(pos)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/mix_stringPieces",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.10.4",
                  optional: false,
                  description:
                    "The following program segment should print the integer <i>7</i> using the .find(",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex5muc",
                data: {
                  id: 29705,
                  base_course: "StudentCSP",
                  name: "ch17ex5muc",
                  chapter: "CSPStringPieces",
                  subchapter: "mix_stringPieces",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch17ex5muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>A restaurant needs to print out the correct total for customer #1, but all they have is a string of totals. The correct total for customer #1 is 70. The string &lt;i&gt;totals&lt;/i&gt; includes the totals of the last 5 customers, separated by parentheses. Use the split and index methods to print out the proper total for customer #1. The blocks have been mixed up and include extra blocks that aren’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="17.10.5"   data-adaptive="true"    data-noindent="true"    data-numbered="left"  style="visibility: hidden;">\n        totals = "31)70)43)35)80)"\n---\nnew = totals.split(")")\n---\nnew = new.split(totals) #distractor\n---\nnew = totals.split("70") #distractor\n---\nprint("Your total is: $" + new[1])\n---\nprint("Your total is: $" + new[2]) #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/mix_stringPieces",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.10.5",
                  optional: false,
                  description:
                    "A restaurant needs to print out the correct total for customer #1, but all they ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex6muc",
                data: {
                  id: 29706,
                  base_course: "StudentCSP",
                  name: "ch17ex6muc",
                  chapter: "CSPStringPieces",
                  subchapter: "mix_stringPieces",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch17ex6muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program segment should define and then call the function &lt;i&gt;storyTime&lt;/i&gt; which uses variables to piece together a story. The blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="17.10.6"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        def storyTime(name, place, treasure):\n---\n    intro = "There once was an explorer named " + name\n---\n    middle = name + " was on a voyage to " + place\n---\n    end = name + " was traveling all this way in hopes of finding " + treasure\n---\n    print(intro)\n---\n    print(middle)\n---\n    print(end)\n---\nstoryTime("Indiana Jones", "Venice", "the Holy Grail")\n---\ndef storyTime(intro, middle, end): #distractor\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/mix_stringPieces",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.10.6",
                  optional: false,
                  description:
                    "The following program segment should define and then call the function <i>storyT",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch17ex7muc",
                data: {
                  id: 29707,
                  base_course: "StudentCSP",
                  name: "ch17ex7muc",
                  chapter: "CSPStringPieces",
                  subchapter: "mix_stringPieces",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="ch17ex7muc" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following function should take in two strings as arguments, then print and return the position of the first parameter in the second string. The blocks have been mixed up and include an extra block that isn’t needed in the solution.  Drag the needed blocks from the left and put them in the correct order on the right.  Click the &lt;i&gt;Check Me&lt;/i&gt; button to check your solution.&lt;/p&gt;</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="17.10.7"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        def stringPos(phrase, sentence):\n---\n    pos = sentence.find(phrase)\n---\n    pos = phrase.find("sentence") #distractor\n---\n    print(pos)\n---\n    return pos\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: true,
                  topic: "CSPStringPieces/mix_stringPieces",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "17.10.7",
                  optional: false,
                  description:
                    "The following function should take in two strings as arguments, then print and r",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "17. Chapter 17 - Getting pieces out of strings and lists/17.10 Mixed Up Code Practice",
                data: {
                  id: 29721,
                  base_course: "StudentCSP",
                  name: "17. Chapter 17 - Getting pieces out of strings and lists/17.10 Mixed Up Code Practice",
                  chapter: "CSPStringPieces",
                  subchapter: "mix_stringPieces",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPWebData",
        data: {
          title: "18. Chapter 18 - Working with Data on the Web",
          num: 18
        },
        children: [
          {
            key: "webData",
            data: {
              title: "18.1 Web Data",
              num: 100,
              chapter: "CSPWebData",
              subchapter: "webData",
              id: 11699,
              numQuestions: 1
            },
            children: [
              {
                key: "18. Chapter 18 - Working with Data on the Web/18.1 Web Data",
                data: {
                  id: 11699,
                  base_course: "StudentCSP",
                  name: "18. Chapter 18 - Working with Data on the Web/18.1 Web Data",
                  chapter: "CSPWebData",
                  subchapter: "webData",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "pollData",
            data: {
              title: "18.2 Our first data set: Air pollution in the United States",
              num: 200,
              chapter: "CSPWebData",
              subchapter: "pollData",
              id: 11700,
              numQuestions: 1
            },
            children: [
              {
                key: "18. Chapter 18 - Working with Data on the Web/18.2 Our first data set: Air pollution in the United States",
                data: {
                  id: 11700,
                  base_course: "StudentCSP",
                  name: "18. Chapter 18 - Working with Data on the Web/18.2 Our first data set: Air pollution in the United States",
                  chapter: "CSPWebData",
                  subchapter: "pollData",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "readData",
            data: {
              title: "18.3 Reading the data",
              num: 300,
              chapter: "CSPWebData",
              subchapter: "readData",
              id: 11701,
              numQuestions: 7
            },
            children: [
              {
                key: "printData",
                data: {
                  id: 11481,
                  base_course: "StudentCSP",
                  name: "printData",
                  chapter: "CSPWebData",
                  subchapter: "readData",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=printData data-question_label="18.3.1">\n<div id=printData_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="printData_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural tour*doubleq*; 2: web1-line4; 5: web1-line5; 8: web1-line6; 11: web1-line7; 14: web1-line8; 17: web1-line9; 18-19: web1-line10-11; 22: web1-line12; 25: web1-line14;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# open the file for reading\ninFile = open("uspoll.txt","r")\n\n# read a line from the file\nline = inFile.readline()\n\n# while there is another line\nwhile line:\n\n    # create a list by splitting at the :\n    values = line.split(":")\n\n    # get the city from the list\n    city = values[0]\n\n    # if the city starts with an A print the info\n    if (city.find("A") == 0):\n        print(\'City: \', city)\n        print("Pollution values:",values[1],values[2])\n\n    # read the next line\n    line = inFile.readline()\n\n# close the file\ninFile.close()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/readData",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.3.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18_3_1_printInfoForCity",
                data: {
                  id: 11482,
                  base_course: "StudentCSP",
                  name: "18_3_1_printInfoForCity",
                  chapter: "CSPWebData",
                  subchapter: "readData",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="18_3_1_printInfoForCity" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program prints the pollution information for all cities that start with a <code class="docutils literal notranslate"><span class="pre">D</span></code>, but the code is mixed up.  Drag the blocks of statements from the left column to the right column and put them in the right order.  Then click on &lt;i&gt;Check Me&lt;/i&gt; to see if you are right. You will be told if any of the lines are in the wrong order or have the wrong indention.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="18.3.2"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        # open the file for reading\ninFile = open("uspoll.txt","r")\n\n# read a line from the file\nline = inFile.readline()\n---\n# while there is another line\nwhile line:\n---\n    # split at the :\n    v = line.split(":")\n\n    # get the city\n    city = v[0]\n---\n    # if city starts with an D print info\n    if (city.find("D") == 0):\n        print(\'City: \', city)\n        print("Pollution values:",v[1],v[2])\n---\n    # read the next line\n    line = inFile.readline()\n---\n# close the file\ninFile.close()\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/readData",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.3.2",
                  optional: false,
                  description:
                    "The following program prints the pollution information for all cities that start",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "printData_withLines",
                data: {
                  id: 11483,
                  base_course: "StudentCSP",
                  name: "printData_withLines",
                  chapter: "CSPWebData",
                  subchapter: "readData",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=printData_withLines data-question_label="18.3.3">\n<div id=printData_withLines_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="printData_withLines_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural tour*doubleq*; 2: web1-line4; 3: web2-line5; 4: web2-line6; 7: web2-line8; 10: web2-line9; 13: web2-line10; 16: web2-line11; 17-18: web2-line12-13;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# open the file, read the lines into a list, and close the file\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\n# loop through the lines list\nfor line in lines:\n\n    # split at :\n    values = line.split(":")\n\n    # get the city\n    city = values[0]\n\n    # if city starts with A print the info\n    if (city.find("A") == 0):\n        print(\'City: \', city)\n        print("Pollution values:",values[1],values[2])\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/readData",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.3.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18_3_1_for_disadvantage",
                data: {
                  id: 11484,
                  base_course: "StudentCSP",
                  name: "18_3_1_for_disadvantage",
                  chapter: "CSPWebData",
                  subchapter: "readData",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="18.3.4" data-multipleanswers="false"  id="18_3_1_for_disadvantage"  style="visibility: hidden;">\n    <p>What is the disadvantage of the second program, with a <code class="docutils literal notranslate"><span class="pre">for</span></code> loop?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="18_3_1_for_disadvantage_opt_a">For a big data file, this could overload memory.</li><li data-component="feedback">This will be true for very large data sets.</li>\n    \n    <li data-component="answer"  id="18_3_1_for_disadvantage_opt_b"><code>for</code> loops are inefficient.</li><li data-component="feedback"><code>for</code> loops and <code>while</code> loops have the same efficiency.</li>\n    \n    <li data-component="answer"  id="18_3_1_for_disadvantage_opt_c"><code>for</code> loops are not as flexible as <code>while</code> loops.</li><li data-component="feedback"><code>while</code> loops are flexible, but <code>for</code> loops are more understandable, so you should use what makes the most sense for you.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/readData",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.3.4",
                  optional: false,
                  description:
                    "What is the disadvantage of the second program, with a ``for`` loop?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18_3_2_WSq",
                data: {
                  id: 11485,
                  base_course: "StudentCSP",
                  name: "18_3_2_WSq",
                  chapter: "CSPWebData",
                  subchapter: "readData",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=18_3_2_WSq data-question_label="18.3.5">\n<div id=18_3_2_WSq_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="18_3_2_WSq_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/readData",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.3.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18_3_2_WSa",
                data: {
                  id: 11486,
                  base_course: "StudentCSP",
                  name: "18_3_2_WSa",
                  chapter: "CSPWebData",
                  subchapter: "readData",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=18_3_2_WSa data-question_label="18.3.6">\n<div id=18_3_2_WSa_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="18_3_2_WSa_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# open the file, read the lines into a list, and close the file\ninFile = open("uspoll.txt","r")\nline = inFile.readline()\n\n# loop through the lines list\nwhile line:\n\n       # split at :\n       values = line.split(":")\n\n       # get the PM 10 pollution\n       pollution = float(values[1])\n       if (pollution > 19):\n              print(\'City: \', values[0])\n              print("Pollution values:",values[1],values[2])\n       line = inFile.readline()\n\ninFile.close()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/readData",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.3.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18. Chapter 18 - Working with Data on the Web/18.3 Reading the data",
                data: {
                  id: 11701,
                  base_course: "StudentCSP",
                  name: "18. Chapter 18 - Working with Data on the Web/18.3 Reading the data",
                  chapter: "CSPWebData",
                  subchapter: "readData",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "largestPoll",
            data: {
              title: "18.4 What’s the largest pollution values?",
              num: 400,
              chapter: "CSPWebData",
              subchapter: "largestPoll",
              id: 11702,
              numQuestions: 6
            },
            children: [
              {
                key: "max25",
                data: {
                  id: 11471,
                  base_course: "StudentCSP",
                  name: "max25",
                  chapter: "CSPWebData",
                  subchapter: "largestPoll",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=max25 data-question_label="18.4.1">\n<div id=max25_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="max25_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural tour*doubleq*; 2: web3-line1; 3: web3-line2; 4: web3-line3; 7: web3-line5; 8: web3-line6; 11: web3-line7; 14: web3-line8; 17: web3-line9; 20: web3-line10; 23: web3-line11; 24: web3-line12; 27: web3-line13;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# read all the lines\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\n# initialize the variables\nmaxCity = \'\'\nmax25 = 0\n\n# loop through the lines\nfor line in lines:\n\n    # split at :\n    values = line.split(":")\n\n    # get the PM 2.5 pollution\n    new25 = float(values[2])\n\n    # if current >  max\n    if new25 > max25:\n\n        # save the new max info\n        maxCity = values[0]\n        max25 = new25 # save the new maximum\n\n# print the largest PM 2.5 value\nprint("Largest is ",max25," in ",maxCity)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/largestPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.4.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18_4_3_max10",
                data: {
                  id: 11472,
                  base_course: "StudentCSP",
                  name: "18_4_3_max10",
                  chapter: "CSPWebData",
                  subchapter: "largestPoll",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="18.4.2" data-multipleanswers="false"  id="18_4_3_max10"  style="visibility: hidden;">\n    <p>Which of the following would return the value of the PM 10 pollution instead at line 17?</p>\n\n    <li data-component="answer"  id="18_4_3_max10_opt_a">new10 = float(values[0])</li><li data-component="feedback">This would get the city and state.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="18_4_3_max10_opt_b">new10 = float(values[1])</li><li data-component="feedback">This gets the value of PM 10.</li>\n    \n    <li data-component="answer"  id="18_4_3_max10_opt_c">new10 = float(values[2])</li><li data-component="feedback">This gets the value of PM 2.5.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/largestPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.4.2",
                  optional: false,
                  description:
                    "Which of the following would return the value of the PM 10 pollution instead at ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "max10",
                data: {
                  id: 11473,
                  base_course: "StudentCSP",
                  name: "max10",
                  chapter: "CSPWebData",
                  subchapter: "largestPoll",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=max10 data-question_label="18.4.3">\n<div id=max10_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="max10_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\nmaxCity = \'\'\n# initialize max10 here\nfor line in lines:\n    values = line.split(":")\n    # set the value for new10 to be the current PM 10 value\n    if new10 > max10:\n        maxCity = values[0]\n        # save the new maximum\nprint("Largest PM 10 value is ",max10," in ",maxCity)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/largestPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.4.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18_4_3_max10_max25_q",
                data: {
                  id: 11474,
                  base_course: "StudentCSP",
                  name: "18_4_3_max10_max25_q",
                  chapter: "CSPWebData",
                  subchapter: "largestPoll",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="18.4.4" data-multipleanswers="false"  id="18_4_3_max10_max25_q"  style="visibility: hidden;">\n    <p>Which of the following is true about the cities with the maximum PM 2.5 and PM 10 values?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="18_4_3_max10_max25_q_opt_a">The same city has the maximum value for both PM 2.5 and PM 10.</li><li data-component="feedback">Fresno, CA is the worst for both.</li>\n    \n    <li data-component="answer"  id="18_4_3_max10_max25_q_opt_b">Different cities have the maximums, but they are in the same state.</li><li data-component="feedback">Check that are using values[1] to find the worst PM 10.</li>\n    \n    <li data-component="answer"  id="18_4_3_max10_max25_q_opt_c">Different cities in different states have the maximum values.</li><li data-component="feedback">You did not actually run and change the program, did you?</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/largestPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.4.4",
                  optional: false,
                  description:
                    "Which of the following is true about the cities with the maximum PM 2.5 and PM 1",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18_4_1_maxPM25",
                data: {
                  id: 11475,
                  base_course: "StudentCSP",
                  name: "18_4_1_maxPM25",
                  chapter: "CSPWebData",
                  subchapter: "largestPoll",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="18_4_1_maxPM25" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program prints the maximum PM 2.5 pollution found, but the code is mixed up.  Drag the blocks of statements from the left column to the right column and put them in the right order.  Then click on &lt;i&gt;Check Me&lt;/i&gt; to see if you are right. You will be told if any of the lines are in the wrong order or have the wrong indention.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="18.4.5"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        # read all the lines\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\n# initialize the variables\nmaxCity = \'\'\nmax25 = 0\n---\n# loop through the lines\nfor line in lines:\n---\n    # split at :\n    values = line.split(":")\n---\n    # get the PM 2.5 pollution\n    new25 = float(values[2])\n---\n    # if current > max\n    if new25 > max25:\n---\n        # save the new max info\n        maxCity = values[0]\n        max25 = new25\n---\n# print the largest PM 2.5 value\nprint("Largest is ",max25," in ",maxCity)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/largestPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.4.5",
                  optional: false,
                  description:
                    "The following program prints the maximum PM 2.5 pollution found, but the code is",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18. Chapter 18 - Working with Data on the Web/18.4 What’s the largest pollution values?",
                data: {
                  id: 11702,
                  base_course: "StudentCSP",
                  name: "18. Chapter 18 - Working with Data on the Web/18.4 What’s the largest pollution values?",
                  chapter: "CSPWebData",
                  subchapter: "largestPoll",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "lowestPoll",
            data: {
              title: "18.5 What’s the lowest PM 2.5 pollution?",
              num: 500,
              chapter: "CSPWebData",
              subchapter: "lowestPoll",
              id: 11703,
              numQuestions: 6
            },
            children: [
              {
                key: "min25",
                data: {
                  id: 11476,
                  base_course: "StudentCSP",
                  name: "min25",
                  chapter: "CSPWebData",
                  subchapter: "lowestPoll",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=min25 data-question_label="18.5.1">\n<div id=min25_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="min25_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural tour*doubleq*; 2-4: web4-line1-3; 7-8: web4-line5-6; 11: web4-line7; 14: web4-line8; 17: web4-line9; 20: web4-line10; 23-24: web4-line11-12; 27: web4-line13;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# read all the lines\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\n# initialize the variables\nminCity = \'\'\nmin25 = 500\n\n# loop through the lines\nfor line in lines:\n\n    # split at :\n    values = line.split(":")\n\n    # get the PM 2.5 pollution\n    new25 = float(values[2])\n\n    # if current <  min\n    if new25 < min25:\n\n        # save new min info\n        minCity = values[0]\n        min25 = new25\n\n# print the smallest PM 2.5 value\nprint("Smallest PM 2.5 ",min25," in ",minCity)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/lowestPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.5.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18_5_1_min25",
                data: {
                  id: 11477,
                  base_course: "StudentCSP",
                  name: "18_5_1_min25",
                  chapter: "CSPWebData",
                  subchapter: "lowestPoll",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="18.5.2" data-multipleanswers="false"  id="18_5_1_min25"  style="visibility: hidden;">\n    <p>Will this code always work to find the minimum PM 2.5 value?</p>\n\n    <li data-component="answer"  id="18_5_1_min25_opt_a">Yes</li><li data-component="feedback">This will work as long as the actual minimum is less than 500.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="18_5_1_min25_opt_b">No</li><li data-component="feedback">If the actual minimum is greater than 500 this won\'t work.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/lowestPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.5.2",
                  optional: false,
                  description: "Will this code always work to find the minimum PM 2.5 value?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "min10_ex",
                data: {
                  id: 11478,
                  base_course: "StudentCSP",
                  name: "min10_ex",
                  chapter: "CSPWebData",
                  subchapter: "lowestPoll",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=min10_ex data-question_label="18.5.3">\n<div id=min10_ex_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="min10_ex_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\nminCity = \'\'\nmin10 = 500\nfor line in lines:\n    values = line.split(":")\n    # set the value for new10 to be the current PM 10 value\n    if new10 < min10:\n        # Save the minimum city and state\n        # save the minimum PM 10 value\nprint("Smallest PM 10 value is ",min10," in ",minCity)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/lowestPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.5.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18_5_2_min10",
                data: {
                  id: 11479,
                  base_course: "StudentCSP",
                  name: "18_5_2_min10",
                  chapter: "CSPWebData",
                  subchapter: "lowestPoll",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="18.5.4" data-multipleanswers="false"  id="18_5_2_min10"  style="visibility: hidden;">\n    <p>Which of the following is true about the cities with the minimum PM 2.5 and PM 10 values?</p>\n\n    <li data-component="answer"  id="18_5_2_min10_opt_a">The same city has the minimum PM 2.5 and the minimum PM 10.</li><li data-component="feedback">Check your program for PM 10.</li>\n    \n    <li data-component="answer"  id="18_5_2_min10_opt_b">The two cities are in different states, but are both in the east.</li><li data-component="feedback">You didn\'t run the first program to find the minimum PM 2.5, did you?</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="18_5_2_min10_opt_c">The two cities are in different states, but are both in the west.</li><li data-component="feedback">Two different cities have the minimum values, but they are both in the west.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/lowestPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.5.4",
                  optional: false,
                  description:
                    "Which of the following is true about the cities with the minimum PM 2.5 and PM 1",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18_5_1_minPM25",
                data: {
                  id: 11480,
                  base_course: "StudentCSP",
                  name: "18_5_1_minPM25",
                  chapter: "CSPWebData",
                  subchapter: "lowestPoll",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="18_5_1_minPM25" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program prints the minimum PM 2.5 pollution found, but the code is mixed up.  Drag the blocks of statements from the left column to the right column and put them in the right order.  Then click on &lt;i&gt;Check Me&lt;/i&gt; to see if you are right. You will be told if any of the lines are in the wrong order or have the wrong indention.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="18.5.5"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        # read all the lines\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\n# initialize the variables\nminCity = \'\'\nmin25 = 500\n---\n# loop through the lines\nfor line in lines:\n---\n    # split at :\n    values = line.split(":")\n---\n    # get the PM 2.5 pollution\n    new25 = float(values[2])\n---\n    # if current <  min\n    if new25 < min25:\n---\n        # save new min info\n        minCity = values[0]\n        min25 = new25\n---\n# print the smallest PM 2.5 value\nprint("Smallest PM 2.5 ",min25," in ",minCity)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/lowestPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.5.5",
                  optional: false,
                  description:
                    "The following program prints the minimum PM 2.5 pollution found, but the code is",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18. Chapter 18 - Working with Data on the Web/18.5 What’s the lowest PM 2.5 pollution?",
                data: {
                  id: 11703,
                  base_course: "StudentCSP",
                  name: "18. Chapter 18 - Working with Data on the Web/18.5 What’s the lowest PM 2.5 pollution?",
                  chapter: "CSPWebData",
                  subchapter: "lowestPoll",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "avgPoll",
            data: {
              title: "18.6 What’s the average PM 2.5 pollution?",
              num: 600,
              chapter: "CSPWebData",
              subchapter: "avgPoll",
              id: 11704,
              numQuestions: 4
            },
            children: [
              {
                key: "average25",
                data: {
                  id: 11444,
                  base_course: "StudentCSP",
                  name: "average25",
                  chapter: "CSPWebData",
                  subchapter: "avgPoll",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=average25 data-question_label="18.6.1">\n<div id=average25_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="average25_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural tour*doubleq*; 2-4: web5-line1-3; 7-8: web5-line5-6; 11: web5-line7; 14: web5-line8; 17: web5-line9; 20: web5-line10; 21: web5-line11; 24: web5-line13;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# read all the lines\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\n# initialize the variables\ntotal25 = 0\ncount = 1.0\n\n# loop through the lines\nfor line in lines:\n\n    # split at :\n    values = line.split(":")\n\n    # get the PM 2.5 pollution\n    new25 = float(values[2])\n\n    # add to the total and count\n    total25 = total25 + new25\n    count = count + 1\n\n# print the average PM 2.5 value\nprint("Average PM 2.5 value is ",total25/count)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/avgPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.6.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "average10",
                data: {
                  id: 11445,
                  base_course: "StudentCSP",
                  name: "average10",
                  chapter: "CSPWebData",
                  subchapter: "avgPoll",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=average10 data-question_label="18.6.2">\n<div id=average10_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="average10_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\n# Create and initialize total10\ncount = 1.0\nfor line in lines:\n    values = line.split(":")\n    # get the current PM 10 value\n    # add the current PM 10 value to the total in total10\n    count = count + 1\n\nprint("Average PM 10 value is ",total10/count)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/avgPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.6.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18_6_1_avg25",
                data: {
                  id: 11446,
                  base_course: "StudentCSP",
                  name: "18_6_1_avg25",
                  chapter: "CSPWebData",
                  subchapter: "avgPoll",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="18_6_1_avg25" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program prints the maximum PM 2.5 pollution found, but the code is mixed up.  Drag the blocks of statements from the left column to the right column and put them in the right order.  Then click on &lt;i&gt;Check Me&lt;/i&gt; to see if you are right. You will be told if any of the lines are in the wrong order or have the wrong indention.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="18.6.3"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        # read all the lines\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\n# initialize the variables\ntotal25 = 0\ncount = 1.0\n---\n# loop through the lines\nfor line in lines:\n---\n    # split at :\n    values = line.split(":")\n---\n    # get the PM 2.5 pollution\n    new25 = float(values[2])\n---\n    # add to the total and count\n    total25 = total25 + new25\n    count = count + 1\n---\n# print the average PM 2.5 value\nprint("Average PM 2.5 value is ",total25/count)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/avgPoll",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.6.3",
                  optional: false,
                  description:
                    "The following program prints the maximum PM 2.5 pollution found, but the code is",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18. Chapter 18 - Working with Data on the Web/18.6 What’s the average PM 2.5 pollution?",
                data: {
                  id: 11704,
                  base_course: "StudentCSP",
                  name: "18. Chapter 18 - Working with Data on the Web/18.6 What’s the average PM 2.5 pollution?",
                  chapter: "CSPWebData",
                  subchapter: "avgPoll",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "datastates",
            data: {
              title: "18.7 Most Populated and Least Populated States",
              num: 700,
              chapter: "CSPWebData",
              subchapter: "datastates",
              id: 11705,
              numQuestions: 1
            },
            children: [
              {
                key: "18. Chapter 18 - Working with Data on the Web/18.7 Most Populated and Least Populated States",
                data: {
                  id: 11705,
                  base_course: "StudentCSP",
                  name: "18. Chapter 18 - Working with Data on the Web/18.7 Most Populated and Least Populated States",
                  chapter: "CSPWebData",
                  subchapter: "datastates",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "findPollState",
            data: {
              title: "18.8 Finding the Pollution for a State",
              num: 800,
              chapter: "CSPWebData",
              subchapter: "findPollState",
              id: 11706,
              numQuestions: 6
            },
            children: [
              {
                key: "splitCityState",
                data: {
                  id: 11467,
                  base_course: "StudentCSP",
                  name: "splitCityState",
                  chapter: "CSPWebData",
                  subchapter: "findPollState",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=splitCityState data-question_label="18.8.1">\n<div id=splitCityState_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="splitCityState_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line-by-line tour*doubleq*; 1: state1-line1; 2: state1-line2; 3: state1-line3; 4: state1-line4; 5: state1-line5; 6: state1-line6; 7: state1-line7;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nline = "Yuma, AZ :14 :9"\npieces = line.split(":")\nprint("All the pieces:")\nprint(pieces)\ncityState = pieces[0].split(" ")\nprint("City:", cityState[0])\nprint("State:", cityState[1])\nprint("PM 10:", pieces[1])\nprint("PM 2.5:", pieces[2])\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/findPollState",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.8.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "splitCityState2",
                data: {
                  id: 11468,
                  base_course: "StudentCSP",
                  name: "splitCityState2",
                  chapter: "CSPWebData",
                  subchapter: "findPollState",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=splitCityState2 data-question_label="18.8.2">\n<div id=splitCityState2_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="splitCityState2_editor" \n      data-timelimit=25000  data-codelens="true"   \n    data-audio=\'*doubleq*Line-by-line tour*doubleq*; 1: state2-line1; 2: state2-line2; 3: state2-line3; 4: state2-line4; 5: state2-line5; 6: state2-line6; 7: state2-line7;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nline = "Yuba City, CA :12 :7"\npieces = line.split(":")\nprint("All the pieces:")\nprint(pieces)\ncityState = pieces[0].split(",")\nprint("City:", cityState[0])\nprint("State:", cityState[1])\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/findPollState",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.8.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "average25state",
                data: {
                  id: 11469,
                  base_course: "StudentCSP",
                  name: "average25state",
                  chapter: "CSPWebData",
                  subchapter: "findPollState",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=average25state data-question_label="18.8.3">\n<div id=average25state_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="average25state_editor" \n      data-timelimit=25000     \n    data-audio=\'*doubleq*Structural tour*doubleq*; 2-4: state3-line1-3; 7-9: state3-line5-7; 12: state3-line8; 15: state3-line9; 18: state3-line10; 21: state3-line11; 24: state3-line12; 25: state3-line13; 28: state3-line14; 31: state3-line16;*atype*\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# read all the lines\ninfile = open("uspoll.txt","r")\nlines = infile.readlines()\ninfile.close()\n\n# initialize the variables\nstate = "CA"\ntotal25 = 0\ncount = 1.0\n\n# loop through the lines\nfor line in lines:\n\n    # split at :\n    values = line.split(":")\n\n    # split at ,\n    cityState = values[0].split(",")\n\n    # if found state\n    if cityState[1].find(state) >= 0:\n\n        # add the current to the sum\n        new25 = float(values[2])\n        total25 = total25 + new25\n\n        # increment the count\n        count = count + 1\n\n# print the average\nprint("Average PM 2.5 value for " , state, " is ", total25/count)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/findPollState",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.8.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "average10state",
                data: {
                  id: 11470,
                  base_course: "StudentCSP",
                  name: "average10state",
                  chapter: "CSPWebData",
                  subchapter: "findPollState",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=average10state data-question_label="18.8.4">\n<div id=average10state_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="average10state_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninfile = open("uspoll.txt","r")\nlines = infile.readlines()\ninfile.close()\n\nstate = "CA"\n# create and initialize total10\ncount = 1.0\nfor line in lines:\n    values = line.split(":")\n    cityState = values[0].split(",")\n    if cityState[1].find(state) >= 0:\n        # get the current pollution value\n        # add the current pollution to total10\n        count = count + 1\n\nprint("Average PM 10 value for ", state, " is ", total10/count)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/findPollState",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.8.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18. Chapter 18 - Working with Data on the Web/18.8 Finding the Pollution for a State",
                data: {
                  id: 11706,
                  base_course: "StudentCSP",
                  name: "18. Chapter 18 - Working with Data on the Web/18.8 Finding the Pollution for a State",
                  chapter: "CSPWebData",
                  subchapter: "findPollState",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18_8_1_avg25",
                data: {
                  id: 27832,
                  base_course: "StudentCSP",
                  name: "18_8_1_avg25",
                  chapter: "CSPWebData",
                  subchapter: "findPollState",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="18_8_1_avg25" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>The following program prints the average PM 2.5 pollution for a state, but the code is mixed up. Drag the blocks of statements from the left column to the right column and put them in the right order.  Then click on &lt;i&gt;Check Me&lt;/i&gt; to see if you are right. You will be told if any of the lines are in the wrong order or have the wrong indention.</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="18.8.5"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        # read all the lines\ninfile = open("uspoll.txt","r")\nlines = infile.readlines()\ninfile.close()\n\n# initialize the variables\nstate = "CA"\ntotal25 = 0\ncount = 1.0\n---\n# loop through the lines\nfor line in lines:\n---\n    # split at :\n    values = line.split(":")\n---\n    # split at ,\n    cityState = values[0].split(",")\n---\n    # if found state\n    if cityState[1].find(state) >= 0:\n---\n        # add the current to the sum\n        new25 = float(values[2])\n        total25 = total25 + new25\n\n        # increment the count\n        count = count + 1\n---\n# print the average\navg = total25/count\nprint("Avg for " , state, " is ", avg)\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/findPollState",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.8.5",
                  optional: false,
                  description:
                    "The following program prints the average PM 2.5 pollution for a state, but the c",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "18.9 Chapter 18 - Concept Summary",
              num: 900,
              chapter: "CSPWebData",
              subchapter: "summary",
              id: 11707,
              numQuestions: 1
            },
            children: [
              {
                key: "18. Chapter 18 - Working with Data on the Web/18.9 Chapter 18 - Concept Summary",
                data: {
                  id: 11707,
                  base_course: "StudentCSP",
                  name: "18. Chapter 18 - Working with Data on the Web/18.9 Chapter 18 - Concept Summary",
                  chapter: "CSPWebData",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "18.10 Chapter 18 Exercises",
              num: 1000,
              chapter: "CSPWebData",
              subchapter: "Exercises",
              id: 11708,
              numQuestions: 21
            },
            children: [
              {
                key: "ch18ex1q",
                data: {
                  id: 11447,
                  base_course: "StudentCSP",
                  name: "ch18ex1q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex1q data-question_label="18.10.1">\n<div id=ch18ex1q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex1q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninFile = open("uspoll.txt","r)\nline = inFile.readLine()\nwhile line\n    values = line.split(":")\n    city = values[0]\n    if (city.find("A") == 0):\n        print(\'City: \' city)\n        print("Pollution values:",values[1],values[2])\n    line = infile.readline()\n\ninFile.close()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.1",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex2q",
                data: {
                  id: 11448,
                  base_course: "StudentCSP",
                  name: "ch18ex2q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex2q data-question_label="18.10.2">\n<div id=ch18ex2q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex2q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\ntotal25 = 0\ncount = 1.0\nfor line in lines:\n    values = line.split(":")\n    new25 = float(values[2])\n    city = values[1]\n    if (city.find("A") == -1):\n        total25 = total25 + new25\n    count = count + 1\n\nprint("Average PM 2.5 value for cities that start with \'A\' is ", total25/count)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.2",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex3q",
                data: {
                  id: 11449,
                  base_course: "StudentCSP",
                  name: "ch18ex3q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex3q data-question_label="18.10.3">\n<div id=ch18ex3q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex3q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninFile = open("uspoll.txt","r"\nlines = inFile.readlines()\ninFile.Close()\n\nmaxCity = \'\'\nmax25 =   # initialize max25\nfor line  lines:\n    values = line.split(":")\n    new25 = float(values[2]) # get the current value\n    if new25 > max25\n        maxCity = values[0]\n        max25 = new25 # save the new maximum\nprint("Largest PM 2.5 value is ",max25," in ",maxCity)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.3",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex4q",
                data: {
                  id: 11450,
                  base_course: "StudentCSP",
                  name: "ch18ex4q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex4q data-question_label="18.10.4">\n<div id=ch18ex4q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex4q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# read all the lines\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\n# loop through the lines\nfor line in lines:\n    if line[0] == "A":\n        print(line)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.4",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex5q",
                data: {
                  id: 11451,
                  base_course: "StudentCSP",
                  name: "ch18ex5q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex5q data-question_label="18.10.5">\n<div id=ch18ex5q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex5q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\nminCity = \'\'\nmin25 = 500\nfor line in lines:\nvalues = line.split(":")\nnew25 = float(values[2]) # set the value for new25 to be the current PM 2.5 value\nif new25 < min25:\nminCity = values[0] # Save the minimum city and state\nmin25 = new25 # save the minimum PM 2.5 value\nprint("Smallest PM 2.5 ",min25," in ",minCity)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.5",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex6q",
                data: {
                  id: 11452,
                  base_course: "StudentCSP",
                  name: "ch18ex6q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex6q data-question_label="18.10.6">\n<div id=ch18ex6q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex6q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n# read all the lines\ninFile = open("uspoll.txt", r)\nlines = inFile.readline\ninFile.close()\n\n# loop through the lines\nfor line in lines:\n\n    # split at :\n    values = line.split(" ")\n\n    # get the min PM 2.5 pollution and the city\n    num = str(values[2])\n    city = values[0]\n\n    # check if even\n    if num % 2 == 0:\n\n    # print the values\n    print("Even min PM 2.5 ", num ," in ", city)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.6",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex7q",
                data: {
                  id: 11453,
                  base_course: "StudentCSP",
                  name: "ch18ex7q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex7q data-question_label="18.10.7">\n<div id=ch18ex7q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex7q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninFile = open("uspoll.txt","r")\nlines = inFile.readlines()\ninFile.close()\n\ntotal25 = 0\ncount = 1.0\nfor line in lines:\nvalues = line.split(":")\nnew25 = float(values[2])\ntotal25 = total25 + new25\ncount = count + 1\n\nprint("Average PM 2.5 value is ",total25/count)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.7",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex8q",
                data: {
                  id: 11454,
                  base_course: "StudentCSP",
                  name: "ch18ex8q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex8q data-question_label="18.10.8">\n<div id=ch18ex8q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex8q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.8",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex9q",
                data: {
                  id: 11455,
                  base_course: "StudentCSP",
                  name: "ch18ex9q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex9q data-question_label="18.10.9">\n<div id=ch18ex9q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex9q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninFile = open("uspoll.txt","r")\nline = inFile.readline()\nwhile line:\n    values = line.split(":")\n    pollution = float(values[1])\n    if (pollution > 25):\n        print(\'City: \', values[0])\n        print("Pollution values:",values[1],values[2])\n    line = inFile.readline()\n\ninFile.close()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.9",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex10q",
                data: {
                  id: 11456,
                  base_course: "StudentCSP",
                  name: "ch18ex10q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex10q data-question_label="18.10.10">\n<div id=ch18ex10q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex10q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.10",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex11q",
                data: {
                  id: 11457,
                  base_course: "StudentCSP",
                  name: "ch18ex11q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex11q data-question_label="18.10.11">\n<div id=ch18ex11q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex11q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ninFile = open("uspoll.txt","r")\nline = inFile.readline()\nwhile line:\n    values = line.split(":")\n    pollution = float(values[2])\n    if (pollution < 5):\n        print(\'City: \', values[0])\n        print("Pollution values:",values[1],values[2])\n    line = inFile.readline()\n\ninFile.close()\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.11",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex12q",
                data: {
                  id: 11458,
                  base_course: "StudentCSP",
                  name: "ch18ex12q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex12q data-question_label="18.10.12">\n<div id=ch18ex12q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex12q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.12",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex13q",
                data: {
                  id: 11459,
                  base_course: "StudentCSP",
                  name: "ch18ex13q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex13q data-question_label="18.10.13">\n<div id=ch18ex13q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex13q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef biggestLoss(file):\n    maxLoss = 0\n    lines = file.readlines()\n    for # in lines:\n        values = line.split(#)\n        open = float(values[#])\n        close = float(values[4])\n        dailyLoss = open # close\n        if (dailyLoss # maxLoss):\n            maxLoss = dailyLoss\n            date = values[#]\n    print(date + " loss " + str(maxLoss))\n\nfile = open("stocks.txt", "r")\nbiggestLoss(file)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.13",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex14q",
                data: {
                  id: 11460,
                  base_course: "StudentCSP",
                  name: "ch18ex14q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex14q data-question_label="18.10.14">\n<div id=ch18ex14q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex14q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\ndef pointGain(file):\n    lines = file.readlines()\n    for lines in lines:\n    values = line.split()\n    open = str(values[2])\n    close = float(values[4])\n    if (close - open) < 300:\n        print(values[0])\nfile = open("stocks.txt", "r")\npointGain(file)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.14",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex15q",
                data: {
                  id: 11461,
                  base_course: "StudentCSP",
                  name: "ch18ex15q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex15q data-question_label="18.10.15">\n<div id=ch18ex15q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex15q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfile = open("stocks.txt", "r")\nlines = file.readlines()\nmaxGain = 100000\nfor line in lines:\n    values = line.split(",")\n    open = float(values[1])\n    close = float(values[4])\n    perChange = ((close - open) / open) * 100\n    if perChange < maxGain:\n        maxGain = perChange\n        date = values[0]\nprint(date)\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.15",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex16q",
                data: {
                  id: 11462,
                  base_course: "StudentCSP",
                  name: "ch18ex16q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex16q data-question_label="18.10.16">\n<div id=ch18ex16q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex16q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\nfile = open("stocks.txt", "r")\nlines = file.readlines()\nfor line in lines:\n    values = line.split(",")\n    date = values[0]\n    if date[0] == "1":\n        print(date + " had a high value of " + values[2])\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.16",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex17q",
                data: {
                  id: 11463,
                  base_course: "StudentCSP",
                  name: "ch18ex17q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex17q data-question_label="18.10.17">\n<div id=ch18ex17q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex17q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.17",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex18q",
                data: {
                  id: 11464,
                  base_course: "StudentCSP",
                  name: "ch18ex18q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex18q data-question_label="18.10.18">\n<div id=ch18ex18q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex18q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.18",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex19q",
                data: {
                  id: 11465,
                  base_course: "StudentCSP",
                  name: "ch18ex19q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex19q data-question_label="18.10.19">\n<div id=ch18ex19q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex19q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.19",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ch18ex20q",
                data: {
                  id: 11466,
                  base_course: "StudentCSP",
                  name: "ch18ex20q",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "activecode",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone explainer ac_section ">\n<div data-component="activecode" id=ch18ex20q data-question_label="18.10.20">\n<div id=ch18ex20q_question class="ac_question">\n\n</div>\n<textarea data-lang="python" id="ch18ex20q_editor" \n      data-timelimit=25000     \n    data-audio=\'\'      \n           data-wasm=/_static\n     style="visibility: hidden;">\n\n\n</textarea>\n</div>\n</div>\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPWebData/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "18.10.20",
                  optional: false,
                  description: "Not an Exercise",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "18. Chapter 18 - Working with Data on the Web/18.10 Chapter 18 Exercises",
                data: {
                  id: 11708,
                  base_course: "StudentCSP",
                  name: "18. Chapter 18 - Working with Data on the Web/18.10 Chapter 18 Exercises",
                  chapter: "CSPWebData",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPAbilitySummary",
        data: {
          title: "19. Chapter 19 - Computer Abilities Summary",
          num: 19
        },
        children: [
          {
            key: "thatsall",
            data: {
              title: "19.1 Computer Abilities",
              num: 100,
              chapter: "CSPAbilitySummary",
              subchapter: "thatsall",
              id: 11709,
              numQuestions: 1
            },
            children: [
              {
                key: "19. Chapter 19 - Computer Abilities Summary/19.1 Computer Abilities",
                data: {
                  id: 11709,
                  base_course: "StudentCSP",
                  name: "19. Chapter 19 - Computer Abilities Summary/19.1 Computer Abilities",
                  chapter: "CSPAbilitySummary",
                  subchapter: "thatsall",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "summary",
            data: {
              title: "19.2 Chapter 19 - Concept Summary",
              num: 200,
              chapter: "CSPAbilitySummary",
              subchapter: "summary",
              id: 11710,
              numQuestions: 1
            },
            children: [
              {
                key: "19. Chapter 19 - Computer Abilities Summary/19.2 Chapter 19 - Concept Summary",
                data: {
                  id: 11710,
                  base_course: "StudentCSP",
                  name: "19. Chapter 19 - Computer Abilities Summary/19.2 Chapter 19 - Concept Summary",
                  chapter: "CSPAbilitySummary",
                  subchapter: "summary",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "19.3 Post Exam",
              num: 300,
              chapter: "CSPAbilitySummary",
              subchapter: "Exercises",
              id: 11711,
              numQuestions: 12
            },
            children: [
              {
                key: "ePost_1_25",
                data: {
                  id: 10728,
                  base_course: "StudentCSP",
                  name: "ePost_1_25",
                  chapter: "CSPAbilitySummary",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="19.3.2" data-multipleanswers="false"  id="ePost_1_25"  style="visibility: hidden;">\n    <p>What is the output from the program below?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="kn">from</span> <span class="nn">turtle</span> <span class="kn">import</span> <span class="o">*</span>\n<span class="n">space</span> <span class="o">=</span> <span class="n">Screen</span><span class="p">()</span>\n<span class="n">sue</span> <span class="o">=</span> <span class="n">Turtle</span><span class="p">()</span>\n<span class="n">sue</span><span class="o">.</span><span class="n">setheading</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n<span class="k">for</span> <span class="n">sides</span> <span class="ow">in</span> <span class="p">[</span><span class="mi">5</span><span class="p">,</span><span class="mi">11</span><span class="p">,</span><span class="mi">16</span><span class="p">,</span><span class="mi">21</span><span class="p">]:</span>\n    <span class="n">sue</span><span class="o">.</span><span class="n">forward</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>\n    <span class="n">sue</span><span class="o">.</span><span class="n">right</span><span class="p">(</span><span class="mi">90</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="ePost_1_25_opt_a">The turtle in this example draws a pentagram.</li><li data-component="feedback">This only loops 4 times, so how can it draw a pentagram?</li>\n    \n    <li data-component="answer"  id="ePost_1_25_opt_b">This code will generate an error.</li><li data-component="feedback">This will not cause an error.</li>\n    \n    <li data-component="answer"  id="ePost_1_25_opt_c">The turtle draws four lines of length 5, 11, 16, and 21</li><li data-component="feedback">This would be true if it was sue.forward(sides)</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="ePost_1_25_opt_d">The turtle draws a square.</li><li data-component="feedback">This will loop 4 times and each time draw a line of length 100 so this will be a square.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPAbilitySummary/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "19.3.2",
                  optional: false,
                  description: "What is the output from the program below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ePost_2_18",
                data: {
                  id: 10729,
                  base_course: "StudentCSP",
                  name: "ePost_2_18",
                  chapter: "CSPAbilitySummary",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="19.3.3" data-multipleanswers="false"  id="ePost_2_18"  style="visibility: hidden;">\n    <p>What is the output from the program below?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="k">def</span> <span class="nf">check_systolic</span><span class="p">(</span><span class="n">num1</span><span class="p">):</span>\n    <span class="k">if</span> <span class="n">num1</span> <span class="o">&lt;</span> <span class="mi">120</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">0</span>\n    <span class="k">elif</span> <span class="n">num1</span> <span class="o">&lt;</span> <span class="mi">140</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">1</span>\n    <span class="k">elif</span> <span class="n">num1</span> <span class="o">&lt;</span> <span class="mi">180</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">2</span>\n    <span class="k">else</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">3</span>\n\n<span class="k">def</span> <span class="nf">check_diastolic</span><span class="p">(</span><span class="n">num2</span><span class="p">):</span>\n    <span class="k">if</span> <span class="n">num2</span> <span class="o">&lt;</span> <span class="mi">80</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">0</span>\n    <span class="k">elif</span> <span class="n">num2</span> <span class="o">&lt;</span> <span class="mi">90</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">1</span>\n    <span class="k">elif</span> <span class="n">num2</span> <span class="o">&lt;</span> <span class="mi">110</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">2</span>\n    <span class="k">else</span><span class="p">:</span>\n        <span class="k">return</span> <span class="mi">3</span>\n\n<span class="n">syst</span> <span class="o">=</span> <span class="mi">135</span>\n<span class="n">dias</span> <span class="o">=</span> <span class="mi">100</span>\n<span class="k">if</span> <span class="n">check_systolic</span><span class="p">(</span><span class="n">syst</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span> <span class="ow">and</span> <span class="n">check_diastolic</span><span class="p">(</span><span class="n">dias</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;Normal&quot;</span><span class="p">)</span>\n<span class="k">elif</span> <span class="n">check_systolic</span><span class="p">(</span><span class="n">syst</span><span class="p">)</span> <span class="o">==</span> <span class="mi">3</span> <span class="ow">or</span> <span class="n">check_diastolic</span><span class="p">(</span><span class="n">dias</span><span class="p">)</span> <span class="o">==</span> <span class="mi">3</span><span class="p">:</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;Hypertensive Crisis&quot;</span><span class="p">)</span>\n<span class="k">elif</span> <span class="n">check_systolic</span><span class="p">(</span><span class="n">syst</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>\n    <span class="k">if</span> <span class="n">check_diastolic</span><span class="p">(</span><span class="n">dias</span><span class="p">)</span> <span class="o">&gt;</span> <span class="mi">1</span><span class="p">:</span>\n        <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;High Blood Pressure A&quot;</span><span class="p">)</span>\n    <span class="k">else</span><span class="p">:</span>\n        <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;Prehypertension&quot;</span><span class="p">)</span>\n<span class="k">else</span><span class="p">:</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;High Blood Pressure B&quot;</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="ePost_2_18_opt_a">Normal</li><li data-component="feedback">This would be true if check_systolic returned 0 and check_diastolic returned 0.</li>\n    \n    <li data-component="answer"  id="ePost_2_18_opt_b">Hypertensive Crisis</li><li data-component="feedback">This would be true if check_systolic returned 3 or check_diastolic returned 3.</li>\n    \n    <li data-component="answer"  id="ePost_2_18_opt_c">High Blood Pressure B</li><li data-component="feedback">This would be true if check_systolic returned 2 and check_diastolic returned something other than 3.</li>\n    \n    <li data-component="answer"  id="ePost_2_18_opt_d">Prehypertension</li><li data-component="feedback">This would be true if check_systolic returned 1 and check_diastolic returned 1.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="ePost_2_18_opt_e">High Blood Pressure A</li><li data-component="feedback">The function check_systolic(135) returns 1 and the function check_diastolic(100) returns 2 so this will print "High Blood Pressure A"</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPAbilitySummary/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "19.3.3",
                  optional: false,
                  description: "What is the output from the program below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ePost_3_20",
                data: {
                  id: 10730,
                  base_course: "StudentCSP",
                  name: "ePost_3_20",
                  chapter: "CSPAbilitySummary",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="19.3.4" data-multipleanswers="false"  id="ePost_3_20"  style="visibility: hidden;">\n    <p>What is the output from the program below?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">0</span><span class="p">]</span>\n<span class="n">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">5</span>\n<span class="n">val</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">a</span><span class="p">)</span>\n<span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="n">val</span><span class="p">]</span>\n<span class="n">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="mi">100</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">b</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="ePost_3_20_opt_a">[-5, 5, 0]  [3, 1, 3, 5]</li><li data-component="feedback">This would be true if the first index in an array was 1 not 0.</li>\n    \n    <li data-component="answer"  id="ePost_3_20_opt_b">[10, 5, 0]  [3, 1, 3, 100]</li><li data-component="feedback">This would be true if it was a[1] = 5 not a[1] = -5</li>\n    \n    <li data-component="answer"  id="ePost_3_20_opt_c">[-5, 5, 0]  [3, 1, 3, 100]</li><li data-component="feedback">This would be true if it was a[0] = -5.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="ePost_3_20_opt_d">[10, -5, 0]  [3, 1, 3, 100]</li><li data-component="feedback">The value of a at index 1 is changed to -5.  The variable val is set to 0.  Then the value of a is printed.  Then b is set to [3,1,3,0].  Then the value at index 3 in b is set to 100.  Then it prints the value of b.</li>\n    \n    <li data-component="answer"  id="ePost_3_20_opt_e">[10, -5, 0]  [3, 1, 3, 5]</li><li data-component="feedback">This would be true if it was var = a[1] before a[1] was changed.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPAbilitySummary/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "19.3.4",
                  optional: false,
                  description: "What is the output from the program below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ePost_4_16",
                data: {
                  id: 10731,
                  base_course: "StudentCSP",
                  name: "ePost_4_16",
                  chapter: "CSPAbilitySummary",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="19.3.5" data-multipleanswers="false"  id="ePost_4_16"  style="visibility: hidden;">\n    <p>What will be the values in a, b, and c after the following lines of code execute?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="mi">7</span><span class="p">;</span>\n<span class="n">b</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>\n<span class="n">c</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>\n<span class="n">c</span> <span class="o">=</span> <span class="n">a</span><span class="p">;</span>\n<span class="n">a</span> <span class="o">=</span> <span class="n">b</span><span class="p">;</span>\n<span class="n">b</span> <span class="o">=</span> <span class="n">c</span><span class="p">;</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="ePost_4_16_opt_a">a = 7, b = 5, c = 0</li><li data-component="feedback">The variable a is set to 7 initially, but it is changed to the value of b which is 5.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="ePost_4_16_opt_b">a = 5, b = 7, c = 7</li><li data-component="feedback">While a starts at 7, b starts at 5 and c starts at 0, c is set to a copy of a\'s value, then a is set to a copy of b\'s value, and b is set to a copy of c\'s value.</li>\n    \n    <li data-component="answer"  id="ePost_4_16_opt_c">a = 5, b = 0, c = 7</li><li data-component="feedback">Since b is set to 0 and c starts out a 0 this may seem right, but c is changed to a copy of the value in a before that.</li>\n    \n    <li data-component="answer"  id="ePost_4_16_opt_d">a = 5, b = 7, c = 0</li><li data-component="feedback">Did you miss that c is set to a copy of the value in a?</li>\n    \n    <li data-component="answer"  id="ePost_4_16_opt_e">a = 5, b = 5, c = 7</li><li data-component="feedback">Did you miss that b is set to a copy of the value in c and c is set to a copy of the value in a?</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPAbilitySummary/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "19.3.5",
                  optional: false,
                  description:
                    "What will be the values in a, b, and c after the following lines of code execute",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ePost_5_21",
                data: {
                  id: 10732,
                  base_course: "StudentCSP",
                  name: "ePost_5_21",
                  chapter: "CSPAbilitySummary",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="19.3.6" data-multipleanswers="false"  id="ePost_5_21"  style="visibility: hidden;">\n    <p>Given the following code segment, which of the below statements is true?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">hello</span> <span class="o">=</span> <span class="s2">&quot;Good-bye&quot;</span>\n<span class="n">fred</span> <span class="o">=</span> <span class="s2">&quot;name&quot;</span>\n<span class="n">name</span> <span class="o">=</span> <span class="s2">&quot;Fred&quot;</span>\n<span class="n">message</span> <span class="o">=</span> <span class="n">hello</span> <span class="o">+</span> <span class="s2">&quot; &quot;</span> <span class="o">+</span> <span class="n">name</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">message</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="ePost_5_21_opt_a">It will print "Hello Fred"</li><li data-component="feedback">Even though the variable is called hello it contains "Good-bye".</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="ePost_5_21_opt_b">It will print "Good-bye Fred"</li><li data-component="feedback">Yes, this is what it will print.</li>\n    \n    <li data-component="answer"  id="ePost_5_21_opt_c">It will print "Hello name"</li><li data-component="feedback">It prints the value in name which has been set to "Fred".</li>\n    \n    <li data-component="answer"  id="ePost_5_21_opt_d">It will print hello + " " + name</li><li data-component="feedback">It will print the value of hello and then a space and the value of name.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPAbilitySummary/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "19.3.6",
                  optional: false,
                  description:
                    "Given the following code segment, which of the below statements is true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ePost_6_22",
                data: {
                  id: 10733,
                  base_course: "StudentCSP",
                  name: "ePost_6_22",
                  chapter: "CSPAbilitySummary",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="19.3.7" data-multipleanswers="false"  id="ePost_6_22"  style="visibility: hidden;">\n    <p>Given the following code segment, which of the below statements is the most true?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>\n<span class="n">aList</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">131</span><span class="p">]</span>\n<span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="n">aList</span><span class="p">:</span>\n    <span class="nb">sum</span> <span class="o">=</span> <span class="nb">sum</span> <span class="o">+</span> <span class="n">number</span>\n<span class="nb">print</span> <span class="p">(</span><span class="nb">sum</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="ePost_6_22_opt_a">The printed result will be odd with a decimal point.</li><li data-component="feedback">This would true if there was an odd numer of items in aList and at least one of the numbers had a decimal point.</li>\n    \n    <li data-component="answer"  id="ePost_6_22_opt_b">The printed result will be even with a decimal point.</li><li data-component="feedback">This would true if at least one of the numbers had a decimal point.</li>\n    \n    <li data-component="answer"  id="ePost_6_22_opt_c">The printed result will be odd without a decimal point.</li><li data-component="feedback">This would true if there was an odd numer of items in aList.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="ePost_6_22_opt_d">The printed result will be even without a decimal point.</li><li data-component="feedback">Since you are adding up an even number of odd numbers the answer will be even. Since all numbers are integers (don\'t have a decimal point) the answer won\'t have a decimal point either.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPAbilitySummary/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "19.3.7",
                  optional: false,
                  description:
                    "Given the following code segment, which of the below statements is the most true",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ePost_7_17",
                data: {
                  id: 10734,
                  base_course: "StudentCSP",
                  name: "ePost_7_17",
                  chapter: "CSPAbilitySummary",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="19.3.8" data-multipleanswers="false"  id="ePost_7_17"  style="visibility: hidden;">\n    <p>What is the output from the program below?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">x</span> <span class="o">=</span> <span class="mi">4</span>\n<span class="k">if</span> <span class="n">x</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="s2">&quot;Error&quot;</span><span class="p">)</span>\n<span class="k">else</span><span class="p">:</span>\n    <span class="nb">print</span> <span class="p">(</span><span class="mi">1000</span> <span class="o">/</span> <span class="n">x</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="ePost_7_17_opt_a">Error</li><li data-component="feedback">This would be true if x was initialized to 0.</li>\n    \n    <li data-component="answer"  id="ePost_7_17_opt_b">Error and 250.0 on the next line</li><li data-component="feedback">This would be true if the if and else statements weren\'t there.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="ePost_7_17_opt_c">250.0</li><li data-component="feedback">Since x is initialized to 4 it will print the result of 1000 divided by 4 which is 250.0.</li>\n    \n    <li data-component="answer"  id="ePost_7_17_opt_d">1000 / 4</li><li data-component="feedback">This would be true if it was print ("1000 / x") instead.</li>\n    \n    <li data-component="answer"  id="ePost_7_17_opt_e">Error and 250 on the next line</li><li data-component="feedback">This would be true if the if and else statements weren\'t there and if 1000 / 4 gave an integer result.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPAbilitySummary/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "19.3.8",
                  optional: false,
                  description: "What is the output from the program below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ePost_8_24",
                data: {
                  id: 10735,
                  base_course: "StudentCSP",
                  name: "ePost_8_24",
                  chapter: "CSPAbilitySummary",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="19.3.9" data-multipleanswers="false"  id="ePost_8_24"  style="visibility: hidden;">\n    <p>Given the following code segment, which of the statements below is true?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">newString</span> <span class="o">=</span> <span class="s2">&quot;&quot;</span>\n<span class="n">phrase</span> <span class="o">=</span> <span class="s2">&quot;Rubber baby buggy bumpers.&quot;</span>\n<span class="k">for</span> <span class="n">letter</span> <span class="ow">in</span> <span class="n">phrase</span><span class="p">:</span>\n    <span class="k">if</span> <span class="n">letter</span> <span class="ow">in</span> <span class="s2">&quot;aeiou&quot;</span><span class="p">:</span>\n        <span class="n">newString</span> <span class="o">=</span> <span class="n">newString</span> <span class="o">+</span> <span class="n">letter</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">newString</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="ePost_8_24_opt_a">The printed result will only contain vowels.</li><li data-component="feedback">This only adds the letter if it is a vowel.</li>\n    \n    <li data-component="answer"  id="ePost_8_24_opt_b">The printed result will only contain consonants.</li><li data-component="feedback">This only adds the letter if it is a vowel.</li>\n    \n    <li data-component="answer"  id="ePost_8_24_opt_c">It will print the empty string.</li><li data-component="feedback">No, it will add vowels to newString and print that.</li>\n    \n    <li data-component="answer"  id="ePost_8_24_opt_d">The printed result will include "y"</li><li data-component="feedback">The letter must be in "aeiou" to be added to newString.</li>\n    \n    <li data-component="answer"  id="ePost_8_24_opt_e">I don\'t know</li><li data-component="feedback">That is okay.  We do not expect you to know this.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPAbilitySummary/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "19.3.9",
                  optional: false,
                  description:
                    "Given the following code segment, which of the statements below is true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ePost_9_19",
                data: {
                  id: 10736,
                  base_course: "StudentCSP",
                  name: "ePost_9_19",
                  chapter: "CSPAbilitySummary",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="19.3.10" data-multipleanswers="false"  id="ePost_9_19"  style="visibility: hidden;">\n    <p>What is the output from the program below?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">a</span> <span class="o">=</span> <span class="p">[</span><span class="mi">10</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">6</span><span class="p">]</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span>\n<span class="n">b</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span>\n<span class="nb">print</span> <span class="n">b</span>\n<span class="n">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="n">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span>\n<span class="nb">print</span> <span class="p">(</span><span class="n">b</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="ePost_9_19_opt_a">6          [3, 1, -2]         -2</li><li data-component="feedback">This would be correct if we hand\'t changed the value at index 2 in b.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="ePost_9_19_opt_b">6          [3, 1, -2]         -1</li><li data-component="feedback">This will print the value at index 3 in a which is 6.  Then it will print b which has [3, 1, -2].  Then it adds one to the value at index 2 in b which is -2 so -2 + 1 is -1.  Then is prints the value at index 2 in b which is -1.</li>\n    \n    <li data-component="answer"  id="ePost_9_19_opt_c">6          [3, 1, -2]          2</li><li data-component="feedback">This would be correct if the original value at index 2 in b was 1, but it was -2.</li>\n    \n    <li data-component="answer"  id="ePost_9_19_opt_d">10        [3, 1, -2]          1</li><li data-component="feedback">This would be correct if we had added 3 to the value at index 2 in b.</li>\n    \n    <li data-component="answer"  id="ePost_9_19_opt_e">10        [3, 1, -2]          2</li><li data-component="feedback">This would be correct if we had added 4 to the value at index 2 in b.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPAbilitySummary/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "19.3.10",
                  optional: false,
                  description: "What is the output from the program below?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ePost_10_23",
                data: {
                  id: 10737,
                  base_course: "StudentCSP",
                  name: "ePost_10_23",
                  chapter: "CSPAbilitySummary",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="19.3.11" data-multipleanswers="false"  id="ePost_10_23"  style="visibility: hidden;">\n    <p>Given the following code segment, which of the below statements is the most true?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">counter</span> <span class="o">=</span> <span class="mi">1</span>\n<span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>\n<span class="k">while</span> <span class="n">counter</span> <span class="o">&lt;=</span> <span class="mi">10</span><span class="p">:</span>\n    <span class="nb">sum</span> <span class="o">=</span> <span class="nb">sum</span> <span class="o">+</span> <span class="n">counter</span>\n    <span class="n">counter</span> <span class="o">=</span> <span class="n">counter</span> <span class="o">+</span> <span class="mi">2</span>\n<span class="nb">print</span> <span class="p">(</span><span class="nb">sum</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="ePost_10_23_opt_a">The printed result will be odd with a decimal point.</li><li data-component="feedback">This would be true if counter or sum had a decimal point.</li>\n    \n    <li data-component="answer"  id="ePost_10_23_opt_b">The printed result will be even with a decimal point.</li><li data-component="feedback">This would be true if this loop ran an even number of times and counter or sum had a decimal point.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="ePost_10_23_opt_c">The printed result will be odd without a decimal point.</li><li data-component="feedback">Since counter starts with a value of 1 and increments by 2 each time it will always be odd.  Sum starts off at 0 and adds counter each time.  This will be odd when there it has added an odd number of values and even when it has added an even number of values.  Since this loops till counter is greater than 10 this will loop 5 times so the result is odd.</li>\n    \n    <li data-component="answer"  id="ePost_10_23_opt_d">The printed result will be even without a decimal point.</li><li data-component="feedback">This would be true if the loop ran an even number of times.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPAbilitySummary/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "19.3.11",
                  optional: false,
                  description:
                    "Given the following code segment, which of the below statements is the most true",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "ePost_11_26",
                data: {
                  id: 10738,
                  base_course: "StudentCSP",
                  name: "ePost_11_26",
                  chapter: "CSPAbilitySummary",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="19.3.12" data-multipleanswers="false"  id="ePost_11_26"  style="visibility: hidden;">\n    <p>Given the following code segment, what will be printed?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="nb">sum</span> <span class="o">=</span> <span class="mi">0</span>\n<span class="n">numList</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">19</span><span class="p">,</span><span class="mi">21</span><span class="p">,</span><span class="mi">131</span><span class="p">]</span>\n<span class="k">for</span> <span class="n">number</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">numList</span><span class="p">),</span><span class="mi">2</span><span class="p">):</span>\n    <span class="nb">sum</span> <span class="o">=</span> <span class="nb">sum</span> <span class="o">+</span> <span class="n">numList</span><span class="p">[</span><span class="n">number</span><span class="p">]</span>\n<span class="nb">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="ePost_11_26_opt_a">182</li><li data-component="feedback">Check your addition.</li>\n    \n    <li data-component="answer"  id="ePost_11_26_opt_b">181</li><li data-component="feedback">This would be true if it was for number in range(1,len(numList))</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="ePost_11_26_opt_c">153</li><li data-component="feedback">This will add 1 + 7 + 131 which is 153</li>\n    \n    <li data-component="answer"  id="ePost_11_26_opt_d">29</li><li data-component="feedback">This would be true if it was for number in range(0,len(thingsToAdd),2)</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPAbilitySummary/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "19.3.12",
                  optional: false,
                  description: "Given the following code segment, what will be printed?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "19. Chapter 19 - Computer Abilities Summary/19.3 Post Exam",
                data: {
                  id: 11711,
                  base_course: "StudentCSP",
                  name: "19. Chapter 19 - Computer Abilities Summary/19.3 Post Exam",
                  chapter: "CSPAbilitySummary",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPInternet",
        data: {
          title: "20. Chapter 20: The Internet",
          num: 20
        },
        children: [
          {
            key: "intro",
            data: {
              title: "20.1 Introduction to the Internet",
              num: 100,
              chapter: "CSPInternet",
              subchapter: "intro",
              id: 11712,
              numQuestions: 1
            },
            children: [
              {
                key: "20. Chapter 20: The Internet/20.1 Introduction to the Internet",
                data: {
                  id: 11712,
                  base_course: "StudentCSP",
                  name: "20. Chapter 20: The Internet/20.1 Introduction to the Internet",
                  chapter: "CSPInternet",
                  subchapter: "intro",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "autonomous",
            data: {
              title: "20.2 The Internet is Many Computers",
              num: 200,
              chapter: "CSPInternet",
              subchapter: "autonomous",
              id: 11713,
              numQuestions: 1
            },
            children: [
              {
                key: "20. Chapter 20: The Internet/20.2 The Internet is Many Computers",
                data: {
                  id: 11713,
                  base_course: "StudentCSP",
                  name: "20. Chapter 20: The Internet/20.2 The Internet is Many Computers",
                  chapter: "CSPInternet",
                  subchapter: "autonomous",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "cybersecurity",
            data: {
              title: "20.3 Cybersecurity",
              num: 300,
              chapter: "CSPInternet",
              subchapter: "cybersecurity",
              id: 11715,
              numQuestions: 1
            },
            children: [
              {
                key: "20. Chapter 20: The Internet/20.3 Cybersecurity",
                data: {
                  id: 11715,
                  base_course: "StudentCSP",
                  name: "20. Chapter 20: The Internet/20.3 Cybersecurity",
                  chapter: "CSPInternet",
                  subchapter: "cybersecurity",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPCreativity",
        data: {
          title: "21. Chapter 21 - Creativity",
          num: 21
        },
        children: [
          {
            key: "intro",
            data: {
              title: "21.1 Creativity",
              num: 100,
              chapter: "CSPCreativity",
              subchapter: "intro",
              id: 11716,
              numQuestions: 1
            },
            children: [
              {
                key: "21. Chapter 21 - Creativity/21.1 Creativity",
                data: {
                  id: 11716,
                  base_course: "StudentCSP",
                  name: "21. Chapter 21 - Creativity/21.1 Creativity",
                  chapter: "CSPCreativity",
                  subchapter: "intro",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "task",
            data: {
              title: "21.2 Preparing for the AP CS Principles Exam",
              num: 200,
              chapter: "CSPCreativity",
              subchapter: "task",
              id: 11717,
              numQuestions: 1
            },
            children: [
              {
                key: "21. Chapter 21 - Creativity/21.2 Preparing for the AP CS Principles Exam",
                data: {
                  id: 11717,
                  base_course: "StudentCSP",
                  name: "21. Chapter 21 - Creativity/21.2 Preparing for the AP CS Principles Exam",
                  chapter: "CSPCreativity",
                  subchapter: "task",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "deciding",
            data: {
              title: "21.3 Deciding What to Program",
              num: 300,
              chapter: "CSPCreativity",
              subchapter: "deciding",
              id: 11718,
              numQuestions: 1
            },
            children: [
              {
                key: "21. Chapter 21 - Creativity/21.3 Deciding What to Program",
                data: {
                  id: 11718,
                  base_course: "StudentCSP",
                  name: "21. Chapter 21 - Creativity/21.3 Deciding What to Program",
                  chapter: "CSPCreativity",
                  subchapter: "deciding",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "examples",
            data: {
              title: "21.4 Project Examples",
              num: 400,
              chapter: "CSPCreativity",
              subchapter: "examples",
              id: 11719,
              numQuestions: 1
            },
            children: [
              {
                key: "21. Chapter 21 - Creativity/21.4 Project Examples",
                data: {
                  id: 11719,
                  base_course: "StudentCSP",
                  name: "21. Chapter 21 - Creativity/21.4 Project Examples",
                  chapter: "CSPCreativity",
                  subchapter: "examples",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "processQ",
            data: {
              title: "21.5 Progress and Process Questions",
              num: 500,
              chapter: "CSPCreativity",
              subchapter: "processQ",
              id: 11720,
              numQuestions: 1
            },
            children: [
              {
                key: "21. Chapter 21 - Creativity/21.5 Progress and Process Questions",
                data: {
                  id: 11720,
                  base_course: "StudentCSP",
                  name: "21. Chapter 21 - Creativity/21.5 Progress and Process Questions",
                  chapter: "CSPCreativity",
                  subchapter: "processQ",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "programming",
            data: {
              title: "21.6 Programming in a Team",
              num: 600,
              chapter: "CSPCreativity",
              subchapter: "programming",
              id: 11721,
              numQuestions: 1
            },
            children: [
              {
                key: "21. Chapter 21 - Creativity/21.6 Programming in a Team",
                data: {
                  id: 11721,
                  base_course: "StudentCSP",
                  name: "21. Chapter 21 - Creativity/21.6 Programming in a Team",
                  chapter: "CSPCreativity",
                  subchapter: "programming",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "referencing",
            data: {
              title: "21.7 Referencing Code",
              num: 700,
              chapter: "CSPCreativity",
              subchapter: "referencing",
              id: 11722,
              numQuestions: 1
            },
            children: [
              {
                key: "21. Chapter 21 - Creativity/21.7 Referencing Code",
                data: {
                  id: 11722,
                  base_course: "StudentCSP",
                  name: "21. Chapter 21 - Creativity/21.7 Referencing Code",
                  chapter: "CSPCreativity",
                  subchapter: "referencing",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPGlobalImpact",
        data: {
          title: "22. Chapter 22 - Global Impact",
          num: 22
        },
        children: [
          {
            key: "intro",
            data: {
              title: "22.1 Global Impact",
              num: 100,
              chapter: "CSPGlobalImpact",
              subchapter: "intro",
              id: 11723,
              numQuestions: 3
            },
            children: [
              {
                key: "22_1_1_MooreQ1",
                data: {
                  id: 10749,
                  base_course: "StudentCSP",
                  name: "22_1_1_MooreQ1",
                  chapter: "CSPGlobalImpact",
                  subchapter: "intro",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="22.1.1" data-multipleanswers="false"  id="22_1_1_MooreQ1"  style="visibility: hidden;">\n    <p>Which of the following are true about Moore’s Law?</p>\n\n    <li data-component="answer"  id="22_1_1_MooreQ1_opt_a">It is outdated, as processing power no longer increases.</li><li data-component="feedback">While processing power is not increasing at the same exponential rate it used to increase at, it still increases exponentially.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="22_1_1_MooreQ1_opt_b">It allows for computing industries to effectively plan for future development.</li><li data-component="feedback">Many industries use Moore\'s law to determine the magnitude of computing power in the future.</li>\n    \n    <li data-component="answer"  id="22_1_1_MooreQ1_opt_c">Moore\'s law is extremely useful, because it will always be a dependable tool for industries to use.</li><li data-component="feedback">This is false because Moore\'s law is expected to end around 2020 due to transistors being unable to be shrunk further.</li>\n    \n    <li data-component="answer"  id="22_1_1_MooreQ1_opt_d">All of the above.</li><li data-component="feedback">This is false because two of the options are false.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/intro",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.1.1",
                  optional: false,
                  description: "Which of the following are true about Moore's Law?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "22. Chapter 22 - Global Impact/22.1 Global Impact",
                data: {
                  id: 11723,
                  base_course: "StudentCSP",
                  name: "22. Chapter 22 - Global Impact/22.1 Global Impact",
                  chapter: "CSPGlobalImpact",
                  subchapter: "intro",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "22_1_2_MooreQ1",
                data: {
                  id: 23161,
                  base_course: "StudentCSP",
                  name: "22_1_2_MooreQ1",
                  chapter: "CSPGlobalImpact",
                  subchapter: "intro",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="22.1.2" data-multipleanswers="false"  id="22_1_2_MooreQ1"  style="visibility: hidden;">\n    <p>Which of the following are positive effects of computing?</p>\n<blockquote>\n<div><div class="line-block">\n<div class="line">I. Global Communication</div>\n<div class="line">II. Increased Privacy</div>\n<div class="line">III. More Accessible Information</div>\n<div class="line">IV. Equal Accessibility for all Groups of People</div>\n</div>\n</div></blockquote>\n\n    <li data-component="answer"  id="22_1_2_MooreQ1_opt_a">I, II</li><li data-component="feedback">Privacy has decreased due to computing, as companies can more easily access your personal data.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="22_1_2_MooreQ1_opt_b">I, III</li><li data-component="feedback">Computing has increased the ability to communicate around the world, and has made information readily available through the internet.</li>\n    \n    <li data-component="answer"  id="22_1_2_MooreQ1_opt_c">III, IV</li><li data-component="feedback">Certain groups of people (i.e. elderly, poor) have difficulty accessing technology.</li>\n    \n    <li data-component="answer"  id="22_1_2_MooreQ1_opt_d">I, II, III, IV</li><li data-component="feedback">Two of these options are not true.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/intro",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.1.2",
                  optional: false,
                  description: "Which of the following are positive effects of computing?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exploring",
            data: {
              title: "22.2 Exploring Impact Data",
              num: 200,
              chapter: "CSPGlobalImpact",
              subchapter: "exploring",
              id: 11724,
              numQuestions: 2
            },
            children: [
              {
                key: "21_1_1_impact",
                data: {
                  id: 10748,
                  base_course: "StudentCSP",
                  name: "21_1_1_impact",
                  chapter: "CSPGlobalImpact",
                  subchapter: "exploring",
                  author: "bmiller",
                  question_type: "parsonsprob",
                  is_private: false,
                  htmlsrc:
                    '\n        <div class="runestone parsons-container ">\n        <div data-component="parsons" id="21_1_1_impact" class="parsons" >\n        <div class="parsons_question parsons-text" >\n    <p>Sort the following technological innovations by the number of <strong>human interactions</strong> they have each second. (Sort from most to least.)</p>\n\n        </div>\n        <pre  class="parsonsblocks" data-question_label="22.2.1"   data-adaptive="true"       data-numbered="left"  style="visibility: hidden;">\n        Emails sent\n---\nFacebook likes\n---\nYouTube Videos viewed\n---\nGoogle searches made\n---\nDropbox files uploaded\n---\nTweets tweeted\n---\nSkype calls made\n---\nTumblr posts posted\n        </pre>\n        </div>\n        </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/exploring",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.2.1",
                  optional: false,
                  description:
                    "Sort the following technological innovations by the number of **human interactio",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "22. Chapter 22 - Global Impact/22.2 Exploring Impact Data",
                data: {
                  id: 11724,
                  base_course: "StudentCSP",
                  name: "22. Chapter 22 - Global Impact/22.2 Exploring Impact Data",
                  chapter: "CSPGlobalImpact",
                  subchapter: "exploring",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "task",
            data: {
              title: "22.3 Preparing for the AP CS Principles Exam",
              num: 300,
              chapter: "CSPGlobalImpact",
              subchapter: "task",
              id: 11725,
              numQuestions: 1
            },
            children: [
              {
                key: "22. Chapter 22 - Global Impact/22.3 Preparing for the AP CS Principles Exam",
                data: {
                  id: 11725,
                  base_course: "StudentCSP",
                  name: "22. Chapter 22 - Global Impact/22.3 Preparing for the AP CS Principles Exam",
                  chapter: "CSPGlobalImpact",
                  subchapter: "task",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "deciding",
            data: {
              title: "22.4 Deciding on an Innovation",
              num: 400,
              chapter: "CSPGlobalImpact",
              subchapter: "deciding",
              id: 11726,
              numQuestions: 1
            },
            children: [
              {
                key: "22. Chapter 22 - Global Impact/22.4 Deciding on an Innovation",
                data: {
                  id: 11726,
                  base_course: "StudentCSP",
                  name: "22. Chapter 22 - Global Impact/22.4 Deciding on an Innovation",
                  chapter: "CSPGlobalImpact",
                  subchapter: "deciding",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "choosing",
            data: {
              title: "22.5 Choosing a Topic",
              num: 500,
              chapter: "CSPGlobalImpact",
              subchapter: "choosing",
              id: 11727,
              numQuestions: 7
            },
            children: [
              {
                key: "choosing_1",
                data: {
                  id: 10739,
                  base_course: "StudentCSP",
                  name: "choosing_1",
                  chapter: "CSPGlobalImpact",
                  subchapter: "choosing",
                  author: "bmiller",
                  question_type: "shortanswer",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone">\n<div data-component="shortanswer" data-question_label="22.5.1" class="journal" id=choosing_1    >\n<p>What is the purpose of the innovation that you chose?</p>\n\n</div>\n</div> <!-- end of runestone div -->\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/choosing",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.5.1",
                  optional: false,
                  description: "What is the purpose of the innovation that you chose?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "choosing_2",
                data: {
                  id: 10740,
                  base_course: "StudentCSP",
                  name: "choosing_2",
                  chapter: "CSPGlobalImpact",
                  subchapter: "choosing",
                  author: "bmiller",
                  question_type: "shortanswer",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone">\n<div data-component="shortanswer" data-question_label="22.5.2" class="journal" id=choosing_2    >\n<p>Answer this question for your chosen innovation.</p>\n\n</div>\n</div> <!-- end of runestone div -->\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/choosing",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.5.2",
                  optional: false,
                  description: "Answer this question for your chosen innovation.",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "choosing_3",
                data: {
                  id: 10741,
                  base_course: "StudentCSP",
                  name: "choosing_3",
                  chapter: "CSPGlobalImpact",
                  subchapter: "choosing",
                  author: "bmiller",
                  question_type: "shortanswer",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone">\n<div data-component="shortanswer" data-question_label="22.5.3" class="journal" id=choosing_3    >\n<p>How is your innovation related to computing?</p>\n\n</div>\n</div> <!-- end of runestone div -->\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/choosing",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.5.3",
                  optional: false,
                  description: "How is your innovation related to computing?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "choosing_4",
                data: {
                  id: 10742,
                  base_course: "StudentCSP",
                  name: "choosing_4",
                  chapter: "CSPGlobalImpact",
                  subchapter: "choosing",
                  author: "bmiller",
                  question_type: "shortanswer",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone">\n<div data-component="shortanswer" data-question_label="22.5.4" class="journal" id=choosing_4    >\n<p>How is your innovation related to data?</p>\n\n</div>\n</div> <!-- end of runestone div -->\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/choosing",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.5.4",
                  optional: false,
                  description: "How is your innovation related to data?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "choosing_5",
                data: {
                  id: 10743,
                  base_course: "StudentCSP",
                  name: "choosing_5",
                  chapter: "CSPGlobalImpact",
                  subchapter: "choosing",
                  author: "bmiller",
                  question_type: "shortanswer",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone">\n<div data-component="shortanswer" data-question_label="22.5.5" class="journal" id=choosing_5    >\n<p>What population is impacted by your innovation?</p>\n\n</div>\n</div> <!-- end of runestone div -->\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/choosing",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.5.5",
                  optional: false,
                  description: "What population is impacted by your innovation?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "choosing_6",
                data: {
                  id: 10744,
                  base_course: "StudentCSP",
                  name: "choosing_6",
                  chapter: "CSPGlobalImpact",
                  subchapter: "choosing",
                  author: "bmiller",
                  question_type: "shortanswer",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone">\n<div data-component="shortanswer" data-question_label="22.5.6" class="journal" id=choosing_6    >\n<p>What are the pros and cons of your innovation?</p>\n\n</div>\n</div> <!-- end of runestone div -->\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/choosing",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.5.6",
                  optional: false,
                  description: "What are the pros and cons of your innovation?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "22. Chapter 22 - Global Impact/22.5 Choosing a Topic",
                data: {
                  id: 11727,
                  base_course: "StudentCSP",
                  name: "22. Chapter 22 - Global Impact/22.5 Choosing a Topic",
                  chapter: "CSPGlobalImpact",
                  subchapter: "choosing",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "outline",
            data: {
              title: "22.6 Writing an Outline",
              num: 600,
              chapter: "CSPGlobalImpact",
              subchapter: "outline",
              id: 11728,
              numQuestions: 5
            },
            children: [
              {
                key: "outline_1",
                data: {
                  id: 10750,
                  base_course: "StudentCSP",
                  name: "outline_1",
                  chapter: "CSPGlobalImpact",
                  subchapter: "outline",
                  author: "bmiller",
                  question_type: "shortanswer",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone">\n<div data-component="shortanswer" data-question_label="22.6.1" class="journal" id=outline_1    >\n<p>What are the long-term impacts of your innovation?</p>\n\n</div>\n</div> <!-- end of runestone div -->\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/outline",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.6.1",
                  optional: false,
                  description: "What are the long-term impacts of your innovation?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "outline_2",
                data: {
                  id: 10751,
                  base_course: "StudentCSP",
                  name: "outline_2",
                  chapter: "CSPGlobalImpact",
                  subchapter: "outline",
                  author: "bmiller",
                  question_type: "shortanswer",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone">\n<div data-component="shortanswer" data-question_label="22.6.2" class="journal" id=outline_2    >\n<p>What are the short-term impacts of your innovation?</p>\n\n</div>\n</div> <!-- end of runestone div -->\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/outline",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.6.2",
                  optional: false,
                  description: "What are the short-term impacts of your innovation?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "outline_3",
                data: {
                  id: 10752,
                  base_course: "StudentCSP",
                  name: "outline_3",
                  chapter: "CSPGlobalImpact",
                  subchapter: "outline",
                  author: "bmiller",
                  question_type: "shortanswer",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone">\n<div data-component="shortanswer" data-question_label="22.6.3" class="journal" id=outline_3    >\n<p>What are the beneficial effects of your innovation?</p>\n\n</div>\n</div> <!-- end of runestone div -->\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/outline",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.6.3",
                  optional: false,
                  description: "What are the beneficial effects of your innovation?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "outline_4",
                data: {
                  id: 10753,
                  base_course: "StudentCSP",
                  name: "outline_4",
                  chapter: "CSPGlobalImpact",
                  subchapter: "outline",
                  author: "bmiller",
                  question_type: "shortanswer",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone">\n<div data-component="shortanswer" data-question_label="22.6.4" class="journal" id=outline_4    >\n<p>What are the harmful effects of your innovation?</p>\n<blockquote>\n<div><a class="reference internal image-reference" href="../_images/writing-828911_960_720.jpg"><img alt="../_images/writing-828911_960_720.jpg" src="../_images/writing-828911_960_720.jpg" style="width: 375px; height: 250px;" /></a>\n</div></blockquote>\n\n</div>\n</div> <!-- end of runestone div -->\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/outline",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.6.4",
                  optional: false,
                  description: "What are the harmful effects of your innovation?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "22. Chapter 22 - Global Impact/22.6 Writing an Outline",
                data: {
                  id: 11728,
                  base_course: "StudentCSP",
                  name: "22. Chapter 22 - Global Impact/22.6 Writing an Outline",
                  chapter: "CSPGlobalImpact",
                  subchapter: "outline",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "completing",
            data: {
              title: "22.7 Presenting your Innovation",
              num: 700,
              chapter: "CSPGlobalImpact",
              subchapter: "completing",
              id: 11729,
              numQuestions: 4
            },
            children: [
              {
                key: "22_7_1_ArtifactQ1",
                data: {
                  id: 10745,
                  base_course: "StudentCSP",
                  name: "22_7_1_ArtifactQ1",
                  chapter: "CSPGlobalImpact",
                  subchapter: "completing",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="22.7.2.1" data-multipleanswers="false"  id="22_7_1_ArtifactQ1"  style="visibility: hidden;">\n    <p>Which of the following things are required in your written report about your innovation?</p>\n\n    <li data-component="answer"  id="22_7_1_ArtifactQ1_opt_a">A description about the innovation you chose, including it\'s purpose, the technical details, computing\'s role in the innovation, and the relationship between data and the innovation.</li><li data-component="feedback">This is true, but the other two options are also necessary in your written response.</li>\n    \n    <li data-component="answer"  id="22_7_1_ArtifactQ1_opt_b">A description of what sphere of the population is impacted by this innovation</li><li data-component="feedback">This is true, but the other two options are also necessary in your written response.</li>\n    \n    <li data-component="answer"  id="22_7_1_ArtifactQ1_opt_c">A description of the social, economic, and cultural impact of the innovation, including both the beneficial and harmful effects of the innovation.</li><li data-component="feedback">This is true, but the other two options are also necessary in your written response.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="22_7_1_ArtifactQ1_opt_d">All of the above.</li><li data-component="feedback">This is true.  All three of these are required in your written response.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/completing",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.7.2.1",
                  optional: false,
                  description:
                    "Which of the following things are required in your written report about your inn",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "22_7_2_ArtifactQ2",
                data: {
                  id: 10746,
                  base_course: "StudentCSP",
                  name: "22_7_2_ArtifactQ2",
                  chapter: "CSPGlobalImpact",
                  subchapter: "completing",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="22.7.2.2" data-multipleanswers="false"  id="22_7_2_ArtifactQ2"  style="visibility: hidden;">\n    <p>Which of the following things are true about the citations you must include for this task?</p>\n\n    <li data-component="answer"  id="22_7_2_ArtifactQ2_opt_a">You can use any source that is relevant to your innovation.</li><li data-component="feedback">This is false.  The source must be reliable, and at least two of your sources must be from the last two years.</li>\n    \n    <li data-component="answer"  id="22_7_2_ArtifactQ2_opt_b">You only need to utilize one source.</li><li data-component="feedback">This is false.  You must have between 2-5 sources.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="22_7_2_ArtifactQ2_opt_c">You must provide the full citation, and if it is online, a permalink and date accessed is required.</li><li data-component="feedback">This is true.  These requirements are necessary for all of your citations.</li>\n    \n    <li data-component="answer"  id="22_7_2_ArtifactQ2_opt_d">All of the above.</li><li data-component="feedback">This is false.  Options A and B are incorrect.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/completing",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.7.2.2",
                  optional: false,
                  description:
                    "Which of the following things are true about the citations you must include for ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "22_7_3_ArtifactQ3",
                data: {
                  id: 10747,
                  base_course: "StudentCSP",
                  name: "22_7_3_ArtifactQ3",
                  chapter: "CSPGlobalImpact",
                  subchapter: "completing",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="22.7.2.3" data-multipleanswers="false"  id="22_7_3_ArtifactQ3"  style="visibility: hidden;">\n    <p>Which of the following things are true about your visual artifact?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="22_7_3_ArtifactQ3_opt_a">It includes a description about why your visual provides insight to the effect of the innovation that you chose.</li><li data-component="feedback">These are the correct guidelines for the written portion of your visual artifact.  This response must be less than 50 words.</li>\n    \n    <li data-component="answer"  id="22_7_3_ArtifactQ3_opt_b">It must be a movie describing a beneficial or harmful impact of your chosen innovation.</li><li data-component="feedback">This is false.  The artifact does not have to be a movie.  It can be a visualization, graphic, or movie.</li>\n    \n    <li data-component="answer"  id="22_7_3_ArtifactQ3_opt_c">The movie must be at least two minutes.</li><li data-component="feedback">This is false.  If the artifact is a movie, it must be less than one minute.</li>\n    \n    <li data-component="answer"  id="22_7_3_ArtifactQ3_opt_d">The artifact should just reiterate an impact that was previously discussed in your written response.</li><li data-component="feedback">This is false.  The artifact should provide further insight on an impact that was previously mentioned.  It should not just reiterate what you have already said.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/completing",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.7.2.3",
                  optional: false,
                  description: "Which of the following things are true about your visual artifact?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "22. Chapter 22 - Global Impact/22.7 Presenting your Innovation",
                data: {
                  id: 11729,
                  base_course: "StudentCSP",
                  name: "22. Chapter 22 - Global Impact/22.7 Presenting your Innovation",
                  chapter: "CSPGlobalImpact",
                  subchapter: "completing",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "working",
            data: {
              title: "22.8 Creating your project",
              num: 800,
              chapter: "CSPGlobalImpact",
              subchapter: "working",
              id: 11730,
              numQuestions: 2
            },
            children: [
              {
                key: "writing_project",
                data: {
                  id: 10754,
                  base_course: "StudentCSP",
                  name: "writing_project",
                  chapter: "CSPGlobalImpact",
                  subchapter: "working",
                  author: "bmiller",
                  question_type: "shortanswer",
                  is_private: false,
                  htmlsrc:
                    '\n<div class="runestone">\n<div data-component="shortanswer" data-question_label="22.8.1" class="journal" id=writing_project    >\n<p>Feel free to use this space to write out your response for the written portion of the explore task.  Use your responses in the previous sections to put your response together.</p>\n\n</div>\n</div> <!-- end of runestone div -->\n',
                  autograde: null,
                  practice: null,
                  topic: "CSPGlobalImpact/working",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "22.8.1",
                  optional: false,
                  description:
                    "Feel free to use this space to write out your response for the written portion o",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "22. Chapter 22 - Global Impact/22.8 Creating your project",
                data: {
                  id: 11730,
                  base_course: "StudentCSP",
                  name: "22. Chapter 22 - Global Impact/22.8 Creating your project",
                  chapter: "CSPGlobalImpact",
                  subchapter: "working",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPWhatsNext",
        data: {
          title: "23. Chapter 23 - What’s Next?",
          num: 23
        },
        children: [
          {
            key: "whatsNext",
            data: {
              title: "23.1 What’s Next",
              num: 100,
              chapter: "CSPWhatsNext",
              subchapter: "whatsNext",
              id: 11731,
              numQuestions: 1
            },
            children: [
              {
                key: "23. Chapter 23 - What’s Next?/23.1 What’s Next",
                data: {
                  id: 11731,
                  base_course: "StudentCSP",
                  name: "23. Chapter 23 - What’s Next?/23.1 What’s Next",
                  chapter: "CSPWhatsNext",
                  subchapter: "whatsNext",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPPracticeQuestions",
        data: {
          title: "24. Chapter 24 - PRACTICE EXAMS",
          num: 24
        },
        children: [
          {
            key: "APCSP_ExamInfo",
            data: {
              title: "24.1 AP CS Principles Exam Format",
              num: 100,
              chapter: "CSPPracticeQuestions",
              subchapter: "APCSP_ExamInfo",
              id: 11732,
              numQuestions: 1
            },
            children: [
              {
                key: "24. Chapter 24 - PRACTICE EXAMS/24.1 AP CS Principles Exam Format",
                data: {
                  id: 11732,
                  base_course: "StudentCSP",
                  name: "24. Chapter 24 - PRACTICE EXAMS/24.1 AP CS Principles Exam Format",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "APCSP_ExamInfo",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "Exercises",
            data: {
              title: "24.2 Set #1",
              num: 200,
              chapter: "CSPPracticeQuestions",
              subchapter: "Exercises",
              id: 11733,
              numQuestions: 11
            },
            children: [
              {
                key: "e24_1_1",
                data: {
                  id: 11105,
                  base_course: "StudentCSP",
                  name: "e24_1_1",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.2.2" data-multipleanswers="false"  id="e24_1_1"  style="visibility: hidden;">\n    <p>Which of the following statements are true regarding compressing files?</p>\n<ol class="upperroman simple">\n<li><p>If lossless compression is applied, every single bit of data that was originally in the file remains after the file is uncompressed.</p></li>\n<li><p>No matter what compression technique is used, once a data file is compressed, it cannot be restored to its original state.</p></li>\n<li><p>The amount of data reduction possible using lossy compression is often much higher than through lossless techniques.</p></li>\n</ol>\n\n    <li data-component="answer" data-correct=\'yes\' id="e24_1_1_opt_a">I. and III. only</li><li data-component="feedback">Correct. Statement I is true since it correctly identifies a property of lossless compression. Statement III is true becasue it correctly identifies the trade-offs involved in compression techniques.</li>\n    \n    <li data-component="answer"  id="e24_1_1_opt_b">I. and II. only</li><li data-component="feedback">Incorrect. Statement II is false since lossless compression can be applied to restore a file to its original state.</li>\n    \n    <li data-component="answer"  id="e24_1_1_opt_c">II. and III. only</li><li data-component="feedback">Incorrect. Statement II is false since lossless compression can be applied to restore a file to its original state.</li>\n    \n    <li data-component="answer"  id="e24_1_1_opt_d">I., II. and III.</li><li data-component="feedback">Incorrect. Statement II is false since lossless compression can be applied to restore a file to its original state.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.2.2",
                  optional: false,
                  description:
                    "Which of the following statements are true regarding compressing files?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_1_2",
                data: {
                  id: 11106,
                  base_course: "StudentCSP",
                  name: "e24_1_2",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.2.3" data-multipleanswers="false"  id="e24_1_2"  style="visibility: hidden;">\n    <p>Which of the following statements about abstraction is true?</p>\n\n    <li data-component="answer"  id="e24_1_2_opt_a">Abstraction requires users to understand the low-level details of a system.</li><li data-component="feedback">Incorrect. Abstraction is used to hide the low-level details from the user, therefore this statement is false.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_1_2_opt_b">Abstraction reduces information and detail to facilitate focus on relevant concepts.</li><li data-component="feedback">Correct. This follows from the definition of abstraction.</li>\n    \n    <li data-component="answer"  id="e24_1_2_opt_c">Abstraction increases the run-time complexity of a program.</li><li data-component="feedback">Incorrect. Abstraction is not related to run-time complexity.</li>\n    \n    <li data-component="answer"  id="e24_1_2_opt_d">Abstraction compresses a program file to reduce file size.</li><li data-component="feedback">Incorrect. Abstraction is not related to compression.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.2.3",
                  optional: false,
                  description: "Which of the following statements about abstraction is true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_1_3",
                data: {
                  id: 11107,
                  base_course: "StudentCSP",
                  name: "e24_1_3",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.2.4" data-multipleanswers="false"  id="e24_1_3"  style="visibility: hidden;">\n    <p>A programmer is writing code to switch the values of two integer variables, namely <code class="docutils literal notranslate"><span class="pre">a</span></code> and <code class="docutils literal notranslate"><span class="pre">b</span></code>, using a temporary integer variable, <code class="docutils literal notranslate"><span class="pre">temp</span></code>. This is the pseudo-code that the programmer has come up with:</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>temp ← a  # statement 1.\nb ← temp  # statement 2.\na ← b     # statement 3.\n</pre></div>\n</div>\n<p>Will the pseudo-code correctly perform the required task (assume that <code class="docutils literal notranslate"><span class="pre">a</span></code> and <code class="docutils literal notranslate"><span class="pre">b</span></code> are never numerically equal)?</p>\n\n    <li data-component="answer"  id="e24_1_3_opt_a">Yes, the code correctly switches the values of \'a\' and \'b\'.</li><li data-component="feedback">Incorrect. In this case, the value of \'a\' will remain unchanged although \'b\' will correctly store the value of \'a\'.</li>\n    \n    <li data-component="answer"  id="e24_1_3_opt_b">No, but it will work correctly if statements 1. and 3. are switched.</li><li data-component="feedback">Incorrect. In this case, the code will not compile as we are trying to assign the value of \'temp\' to \'b\' before giving a value to \'temp\'.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_1_3_opt_c">No, but it will work correctly if statements 2. and 3. are switched.</li><li data-component="feedback">Correct. Plug any values in \'a\' and \'b\' and trace the code! You will find that it works.</li>\n    \n    <li data-component="answer"  id="e24_1_3_opt_d">No, but it will work correctly if statements 1. and 2. are switched.</li><li data-component="feedback">Incorrect. In this case, the code will not compile as we are trying to assign the value of \'temp\' to \'b\' before giving a value to \'temp\'.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.2.4",
                  optional: false,
                  description:
                    "A programmer is writing code to switch the values of two integer variables, name",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_1_4",
                data: {
                  id: 11108,
                  base_course: "StudentCSP",
                  name: "e24_1_4",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.2.5" data-multipleanswers="false"  id="e24_1_4"  style="visibility: hidden;">\n    <p>What is the final value of the integers <code class="docutils literal notranslate"><span class="pre">X</span></code> and <code class="docutils literal notranslate"><span class="pre">Y</span></code> after the following statements are executed?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>X ← 15\nY ← 5\nX ← X + Y\nY ← X + Y\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e24_1_4_opt_a">X = 155, Y = 1555</li><li data-component="feedback">Incorrect. Since \'X\' and \'Y\' are not strings, we cannot simply concatenate their characters.</li>\n    \n    <li data-component="answer"  id="e24_1_4_opt_b">X = 20, Y = 20</li><li data-component="feedback">Incorrect. While the value of \'X\' is correct in this answer choice, the final value of \'Y\' is not.</li>\n    \n    <li data-component="answer"  id="e24_1_4_opt_c">X = 15, Y = 5</li><li data-component="feedback">Incorrect. The values of both \'X\' and \'Y\' are incorrect in this answer choice.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_1_4_opt_d">X = 20, Y = 25</li><li data-component="feedback">Correct. Trace the code! Don\'t forget to use the updated value of \'X\' while finding the value of \'Y\' in the last statement.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.2.5",
                  optional: false,
                  description:
                    "What is the final value of the integers ``X`` and ``Y`` after the following stat",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_1_5",
                data: {
                  id: 11109,
                  base_course: "StudentCSP",
                  name: "e24_1_5",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.2.6" data-multipleanswers="false"  id="e24_1_5"  style="visibility: hidden;">\n    <p>A user’s smartphone makes a request to a server for 4 packets that represent the image of a baby duck. The server sends the 4 packets but they arrive at the user’s smartphone out of order. How does the smartphone interpret the packets that form the image?</p>\n<figure class="align-default">\n<img alt="../_images/duckpacket.jpg" src="../_images/duckpacket.jpg" />\n</figure>\n\n    <li data-component="answer" data-correct=\'yes\' id="e24_1_5_opt_a">The baby duck picture appears as intended.</li><li data-component="feedback">Correct. One of the specific design goals of TCP/IP network protocols is to allow packets to arrive out of order and then be reassembled correctly, therefore the picture appears as intended.</li>\n    \n    <li data-component="answer"  id="e24_1_5_opt_b">The baby duck picture appears as 4 out of order images.</li><li data-component="feedback">Incorrect. The packets are always reassembled in the correct order, so the original picture will appear as inteded.</li>\n    \n    <li data-component="answer"  id="e24_1_5_opt_c">The baby duck picture is distorted.</li><li data-component="feedback">Incorrect. The packets are always reassembled in the correct order, so the original picture will appear as inteded.</li>\n    \n    <li data-component="answer"  id="e24_1_5_opt_d">The baby duck picture won’t load on the user’s smartphone.</li><li data-component="feedback">Incorrect. The picture will load since all the packets successfully arrive on the user\'s smart phone.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.2.6",
                  optional: false,
                  description:
                    "A user’s smartphone makes a request to a server for 4 packets that represent the",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_1_6",
                data: {
                  id: 11110,
                  base_course: "StudentCSP",
                  name: "e24_1_6",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.2.7" data-multipleanswers="false"  id="e24_1_6"  style="visibility: hidden;">\n    <p>Which of the following technologies allows its users to store, manage and access files remotely over the Internet?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e24_1_6_opt_a">Cloud Computing</li><li data-component="feedback">Correct. Storage solutions made possible by Cloud Computing allow users to store, manage and access files remotely over the Internet.</li>\n    \n    <li data-component="answer"  id="e24_1_6_opt_b">Global Positioning System</li><li data-component="feedback">Incorrect. GPS allows navigation and location services to function, but it is not related to managing files remotely. Also note that GPS is not an Internet-dependent technology.</li>\n    \n    <li data-component="answer"  id="e24_1_6_opt_c">Short Message Service</li><li data-component="feedback">Incorrect. SMS allows users to send text messages to one another using standardized communication protocols, but it\'s not related to managing files remotely. Also note that SMS is not an Internet-dependent technology.</li>\n    \n    <li data-component="answer"  id="e24_1_6_opt_d">Data Mining</li><li data-component="feedback">Incorrect. Data Mining involves extracting and finding patterns in large data sets, but it\'s not related to managing files remotely. Also note that Data Mining can be done without the use of Internet.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.2.7",
                  optional: false,
                  description:
                    "Which of the following technologies allows its users to store, manage and access",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_1_7",
                data: {
                  id: 11111,
                  base_course: "StudentCSP",
                  name: "e24_1_7",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.2.8" data-multipleanswers="false"  id="e24_1_7"  style="visibility: hidden;">\n    <p>Consider the following incomplete pseudo-code to print the largest of three integer variables, namely <code class="docutils literal notranslate"><span class="pre">a</span></code>, <code class="docutils literal notranslate"><span class="pre">b</span></code> and <code class="docutils literal notranslate"><span class="pre">c</span></code>:</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>IF (a ≥ b)\n{\n   IF (&lt;MISSING CODE 1&gt;)\n   {\n      DISPLAY(a)\n   }\n   ELSE\n   {\n      DISPLAY(c)\n   }\n}\nELSE\n{\n   IF (&lt;MISSING CODE 2&gt;)\n   {\n      DISPLAY(c)\n   }\n   ELSE\n   {\n      DISPLAY(b)\n   }\n}\n</pre></div>\n</div>\n<p>Which of the following options can be substituted for &lt;MISSING CODE 1&gt; and &lt;MISSING CODE 2&gt;, respectively, for the code to work as intended?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e24_1_7_opt_a">a ≥ c and c ≥ b</li><li data-component="feedback">Correct. Plug-in values for \'a\', \'b\' and \'c\', then trace the code!</li>\n    \n    <li data-component="answer"  id="e24_1_7_opt_b">a ≥ c and b ≥ c</li><li data-component="feedback">Incorrect. The second part of this answer choice is incorrect since we display \'c\' even though \'b ≥ c\'.</li>\n    \n    <li data-component="answer"  id="e24_1_7_opt_c">c ≥ a and c ≥ b</li><li data-component="feedback">Incorrect. The first part of this answer choice is incorrect since we display \'a\' even though \'c ≥ a\'.</li>\n    \n    <li data-component="answer"  id="e24_1_7_opt_d">c ≥ b and c ≥ a</li><li data-component="feedback">Incorrect. Both parts of this answer choice are incorrect, plug-in values for \'a\', \'b\' and \'c\' to see for yourself.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.2.8",
                  optional: false,
                  description:
                    "Consider the following incomplete pseudo-code to print the largest of three inte",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_1_8",
                data: {
                  id: 11112,
                  base_course: "StudentCSP",
                  name: "e24_1_8",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.2.9" data-multipleanswers="false"  id="e24_1_8"  style="visibility: hidden;">\n    <p>Trace the value of an integer variable <code class="docutils literal notranslate"><span class="pre">n</span></code> in the following code.</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>i ← 1\nn ← 2\nREPEAT until i = 4\n{\n   n ← n * 2\n   i ← i + 1\n}\n</pre></div>\n</div>\n<p>What is the value of <code class="docutils literal notranslate"><span class="pre">n</span></code> after the above code executes?</p>\n\n    <li data-component="answer"  id="e24_1_8_opt_a">4</li><li data-component="feedback">Incorrect. This would be true if the loop terminated at i = 2</li>\n    \n    <li data-component="answer"  id="e24_1_8_opt_b">8</li><li data-component="feedback">Incorrect. This would be true if the loop terminated at i = 3</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_1_8_opt_c">16</li><li data-component="feedback">Correct. This is true since the loop runs 3 times and we are multiplying \'n\' with 2 in each iteration.</li>\n    \n    <li data-component="answer"  id="e24_1_8_opt_d">32</li><li data-component="feedback">Incorrect. This would be true if the loop terminated at i = 5</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.2.9",
                  optional: false,
                  description:
                    "Trace the value of an integer variable ``n`` in the following code. ::",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_1_9",
                data: {
                  id: 11113,
                  base_course: "StudentCSP",
                  name: "e24_1_9",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.2.10" data-multipleanswers="false"  id="e24_1_9"  style="visibility: hidden;">\n    <p>A professor uses an automated computer system to manage the student records of his classes. The time the system takes to perform various tasks for different class sizes is shown in the table below:</p>\n<table class="docutils align-default">\n<thead>\n<tr class="row-odd"><th class="head"><p>Task ↓       Size →</p></th>\n<th class="head"><p>Small class (25 students)</p></th>\n<th class="head"><p>Medium class (50 students)</p></th>\n<th class="head"><p>Large class (100 students)</p></th>\n</tr>\n</thead>\n<tbody>\n<tr class="row-even"><td><p>Sorting students by\ngrade</p></td>\n<td><p>10 seconds</p></td>\n<td><p>40 seconds</p></td>\n<td><p>160 seconds</p></td>\n</tr>\n<tr class="row-odd"><td><p>Deleting a student’s\nrecord</p></td>\n<td><p>2 seconds</p></td>\n<td><p>4 seconds</p></td>\n<td><p>8 seconds</p></td>\n</tr>\n<tr class="row-even"><td><p>Searching for a\nstudent’s name</p></td>\n<td><p>1 second</p></td>\n<td><p>2 seconds</p></td>\n<td><p>4 seconds</p></td>\n</tr>\n<tr class="row-odd"><td><p>Adding bonus points\nto grades of all\nstudents</p></td>\n<td><p>3 seconds</p></td>\n<td><p>6 seconds</p></td>\n<td><p>9 seconds</p></td>\n</tr>\n</tbody>\n</table>\n<p>Based on the information in the table, which of the following tasks is likely to take the least amount of time if the computer system is used for a class of 400 students?</p>\n\n    <li data-component="answer"  id="e24_1_9_opt_a">Sorting students by grade</li><li data-component="feedback">Incorrect. Since the run-time quadruples whenever the number of students in class double, the run-time for a class of 400 students would be 2560 seconds.</li>\n    \n    <li data-component="answer"  id="e24_1_9_opt_b">Deleting a student’s record</li><li data-component="feedback">Incorrect. Since the run-time doubles whenever the number of students in class double, the run-time for a class of 400 students would be 32 seconds.</li>\n    \n    <li data-component="answer"  id="e24_1_9_opt_c">Searching for a student’s name</li><li data-component="feedback">Incorrect. Since the run-time doubles whenever the number of students in class double, the run-time for a class of 400 students would be 16 seconds.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_1_9_opt_d">Adding bonus points to grades of all students</li><li data-component="feedback">Correct. Since the run-time increments by 3 seconds whenever the number of students in class double, the run-time for a class of 400 students would be 15 seconds, which is the least out of all the four options.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.2.10",
                  optional: false,
                  description:
                    "A professor uses an automated computer system to manage the student records of h",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_1_10",
                data: {
                  id: 11114,
                  base_course: "StudentCSP",
                  name: "e24_1_10",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "Exercises",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.2.11" data-multipleanswers="false"  id="e24_1_10"  style="visibility: hidden;">\n    <p>Why is digital data often represented in hexadecimal as opposed to binary?</p>\n\n    <li data-component="answer"  id="e24_1_10_opt_a">Because hexadecimal is a lower level of abstraction than binary.</li><li data-component="feedback">Incorrect. Hexademical is a higher level of abstraction since more information can be encoded in fewer hexadecimal digits.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_1_10_opt_b">Because hexadecimal can be represented with fewer total digits than binary.</li><li data-component="feedback">Correct. Since hexadecimal is base 16 and binary is base 2, we need fewer hexadecimal digits than binary digits to encode the same information.</li>\n    \n    <li data-component="answer"  id="e24_1_10_opt_c">Because numbers greater than 1 must be used for certain forms of digital data.</li><li data-component="feedback">Incorrect. Both binary and hexademical can be used to represent decimals greater than 1.</li>\n    \n    <li data-component="answer"  id="e24_1_10_opt_d">Because hexadecimal is easier to convert to decimal form.</li><li data-component="feedback">Incorrect. Calculations involved in converting hexadecimal to decimal are more intensive.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/Exercises",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.2.11",
                  optional: false,
                  description:
                    "Why is digital data often represented in hexadecimal as opposed to binary?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "24. Chapter 24 - PRACTICE EXAMS/24.2 Set #1",
                data: {
                  id: 11733,
                  base_course: "StudentCSP",
                  name: "24. Chapter 24 - PRACTICE EXAMS/24.2 Set #1",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "Exercises",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam24_2",
            data: {
              title: "24.3 Set #2",
              num: 300,
              chapter: "CSPPracticeQuestions",
              subchapter: "exam24_2",
              id: 11734,
              numQuestions: 11
            },
            children: [
              {
                key: "e24_2_1",
                data: {
                  id: 11115,
                  base_course: "StudentCSP",
                  name: "e24_2_1",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.3.2" data-multipleanswers="false"  id="e24_2_1"  style="visibility: hidden;">\n    <p>Which of the following is most likely to be a part of a phishing attack?</p>\n\n    <li data-component="answer"  id="e24_2_1_opt_a">Sending your address to a friend through a text message.</li><li data-component="feedback">Incorrect. This isn\'t phishing because there is no ill intent and there is no request made.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_2_1_opt_b">Someone requesting your personal information through an online chat room.</li><li data-component="feedback">Correct. This is a clear example of phishing because it involves a request for information.</li>\n    \n    <li data-component="answer"  id="e24_2_1_opt_c">Entering a website that attempts to infect computers with viruses.</li><li data-component="feedback">Incorrect. This is different from phishing because there is no request for information.</li>\n    \n    <li data-component="answer"  id="e24_2_1_opt_d">Using someone’s software that searches for saved passwords on your computer.</li><li data-component="feedback">Incorrect. This is different from phishing because there is no request for information.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.3.2",
                  optional: false,
                  description:
                    "Which of the following is most likely to be a part of a phishing attack?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_2_2",
                data: {
                  id: 11116,
                  base_course: "StudentCSP",
                  name: "e24_2_2",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.3.3" data-multipleanswers="false"  id="e24_2_2"  style="visibility: hidden;">\n    <p>Which of the following statements is true regarding the benefits of using the internet?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>I.   The Internet allows information to be spread quickly from person to\nperson.\nII.  Internet users’ private information is protected regardless of\nwhat they do on the Internet.\nIII. The Internet can be used from a variety of devices.\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e24_2_2_opt_a">I only</li><li data-component="feedback">Incorrect. The Internet does allow for quick spread of information, but it also can be accessed from different devices (phones, laptops, desktops, etc.)</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_2_2_opt_b">I, III only</li><li data-component="feedback">Correct. This is correct because The Internet is not made with security built-in, rather spread of informaton and availability are key goals.</li>\n    \n    <li data-component="answer"  id="e24_2_2_opt_c">II, III only</li><li data-component="feedback">Incorrect. This is incorrect because the Internet is not made with security built-in.</li>\n    \n    <li data-component="answer"  id="e24_2_2_opt_d">I, II, III</li><li data-component="feedback">Incorrect. This is incorrect because the Internet is not made with security built-in.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.3.3",
                  optional: false,
                  description:
                    "Which of the following statements is true regarding the benefits of using the in",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_2_3",
                data: {
                  id: 11117,
                  base_course: "StudentCSP",
                  name: "e24_2_3",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.3.4" data-multipleanswers="false"  id="e24_2_3"  style="visibility: hidden;">\n    <p>A pet store has a database of all of its animals with information about each animal. The database is shown below.</p>\n<table class="docutils align-default">\n<thead>\n<tr class="row-odd"><th class="head"><p>Animal</p></th>\n<th class="head"><p>Animal Size</p></th>\n<th class="head"><p>Price</p></th>\n<th class="head"><p>Quantity</p></th>\n<th class="head"><p>Favorite Food</p></th>\n</tr>\n</thead>\n<tbody>\n<tr class="row-even"><td><p>Rabbit</p></td>\n<td><p>Small</p></td>\n<td><p>$15.99</p></td>\n<td><p>4</p></td>\n<td><p>Carrots</p></td>\n</tr>\n<tr class="row-odd"><td><p>Dog</p></td>\n<td><p>Large</p></td>\n<td><p>$89.99</p></td>\n<td><p>2</p></td>\n<td><p>Dog Food</p></td>\n</tr>\n<tr class="row-even"><td><p>Cat</p></td>\n<td><p>Medium</p></td>\n<td><p>$69.99</p></td>\n<td><p>3</p></td>\n<td><p>Catnip</p></td>\n</tr>\n<tr class="row-odd"><td><p>Fish</p></td>\n<td><p>Fish</p></td>\n<td><p>$9.99</p></td>\n<td><p>8</p></td>\n<td><p>Fish Pellets</p></td>\n</tr>\n</tbody>\n</table>\n<p>If the store manager wants to know how much money will be made by selling all the small animals, which of the following categories can be ignored when calculating this number?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e24_2_3_opt_a">Animal, Favorite Food</li><li data-component="feedback">Correct. The Name of the animal and an animal\'s Favorite Food do not influence total money made from selling the animals.</li>\n    \n    <li data-component="answer"  id="e24_2_3_opt_b">Animal Size, Quantity, Favorite Food</li><li data-component="feedback">Incorrect. Quantity is important in calculating total money made because each animal costs a price and the total amount for an animal is (price x quantity).</li>\n    \n    <li data-component="answer"  id="e24_2_3_opt_c">Animal, Quantity</li><li data-component="feedback">Incorrect. Quantity is important in calculating total money made because each animal costs a price and the total amount for an animal is (price x quantity).</li>\n    \n    <li data-component="answer"  id="e24_2_3_opt_d">Favorite Food</li><li data-component="feedback">Incorrect. Favorite Food is not important for calculating price, but an Animal\'s name is not important for calculating total money.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.3.4",
                  optional: false,
                  description:
                    "A pet store has a database of all of its animals with information about each ani",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_2_4",
                data: {
                  id: 11118,
                  base_course: "StudentCSP",
                  name: "e24_2_4",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.3.5" data-multipleanswers="false"  id="e24_2_4"  style="visibility: hidden;">\n    <p>A pet store has a database of all of its animals with information about each animal. The database is shown below.</p>\n<table class="docutils align-default">\n<thead>\n<tr class="row-odd"><th class="head"><p>Animal</p></th>\n<th class="head"><p>Animal Size</p></th>\n<th class="head"><p>Price</p></th>\n<th class="head"><p>Quantity</p></th>\n<th class="head"><p>Favorite Food</p></th>\n</tr>\n</thead>\n<tbody>\n<tr class="row-even"><td><p>Rabbit</p></td>\n<td><p>Small</p></td>\n<td><p>$15.99</p></td>\n<td><p>4</p></td>\n<td><p>Carrots</p></td>\n</tr>\n<tr class="row-odd"><td><p>Dog</p></td>\n<td><p>Large</p></td>\n<td><p>$89.99</p></td>\n<td><p>2</p></td>\n<td><p>Dog Food</p></td>\n</tr>\n<tr class="row-even"><td><p>Cat</p></td>\n<td><p>Medium</p></td>\n<td><p>$69.99</p></td>\n<td><p>3</p></td>\n<td><p>Catnip</p></td>\n</tr>\n<tr class="row-odd"><td><p>Fish</p></td>\n<td><p>Fish</p></td>\n<td><p>$9.99</p></td>\n<td><p>8</p></td>\n<td><p>Fish Pellets</p></td>\n</tr>\n</tbody>\n</table>\n<p>If the store manager wants to prepare food for small size animals only, which of the following categories should he/she use?</p>\n\n    <li data-component="answer"  id="e24_2_4_opt_a">Animal Size, Quantity</li><li data-component="feedback">Incorrect. The quantity of animal isn\'t considered if trying to determine what food to prepare.</li>\n    \n    <li data-component="answer"  id="e24_2_4_opt_b">Price, Quantity</li><li data-component="feedback">Incorrect. Price and quantity of an animal isnt considered when determining which food to prepare.</li>\n    \n    <li data-component="answer"  id="e24_2_4_opt_c">Quantity, Favorite Food</li><li data-component="feedback">Incorrect. Favorite food is important for the manager to know, but quantity of animal is not important in determining what food to prepare.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_2_4_opt_d">Animal Size, Favorite Food</li><li data-component="feedback">Correct. Animal size and favorite food are the two columns a manager would look at to determine which food to prepare.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.3.5",
                  optional: false,
                  description:
                    "A pet store has a database of all of its animals with information about each ani",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_2_5",
                data: {
                  id: 11119,
                  base_course: "StudentCSP",
                  name: "e24_2_5",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.3.6" data-multipleanswers="false"  id="e24_2_5"  style="visibility: hidden;">\n    <p>If the number of steps that an algorithm takes is equal to a linear function of the input size, then which of the following statements is true regarding the runtime of the algorithm?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e24_2_5_opt_a">The run-time is directly proportional to the input size.</li><li data-component="feedback">Correct. This is true because every additional input requires the same amount of additional time.</li>\n    \n    <li data-component="answer"  id="e24_2_5_opt_b">The run-time is inversely proportional to the input size.</li><li data-component="feedback">Incorrect. This is incorrect because the number of steps doesn\'t decrease with more inputs for this algorithm.</li>\n    \n    <li data-component="answer"  id="e24_2_5_opt_c">The run-time of the program does not change with respect to the input size.</li><li data-component="feedback">Incorrect. The number of steps an algorithm goes through does influence the the time an algorithm takes to run for this algorithm.</li>\n    \n    <li data-component="answer"  id="e24_2_5_opt_d">The run-time first increases and then decreases as the input size is increased.</li><li data-component="feedback">Incorrect. As the number of inputs increases, the number of steps in this algorithm will always be increasing in this case.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.3.6",
                  optional: false,
                  description:
                    "If the number of steps that an algorithm takes is equal to a linear function of ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_2_6",
                data: {
                  id: 11120,
                  base_course: "StudentCSP",
                  name: "e24_2_6",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.3.7" data-multipleanswers="false"  id="e24_2_6"  style="visibility: hidden;">\n    <dl>\n<dt>Which of the following statements is true about the output of this circuit?</dt><dd><figure class="align-default">\n<img alt="../_images/logicgate.jpg" src="../_images/logicgate.jpg" />\n</figure>\n</dd>\n</dl>\n\n    <li data-component="answer"  id="e24_2_6_opt_a">The output of the circuit is always true</li><li data-component="feedback">Incorrect. If A is false, then the output is false in this circuit.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_2_6_opt_b">The output of the circuit is the same as the value of input A</li><li data-component="feedback">Correct. If either A or B is false, then the second input to Or is false, thus the final output is dependent on the value of A.</li>\n    \n    <li data-component="answer"  id="e24_2_6_opt_c">The output of the circuit is the same as the value of input B</li><li data-component="feedback">Incorrect. In all cases, the output depends on the value of A instead of the value of B</li>\n    \n    <li data-component="answer"  id="e24_2_6_opt_d">The output of the circuit is always false</li><li data-component="feedback">Incorrect. If A is true, the circuit will always output true for a given B.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.3.7",
                  optional: false,
                  description:
                    "Which of the following statements is true about the output of this circuit?    .",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_2_7",
                data: {
                  id: 11121,
                  base_course: "StudentCSP",
                  name: "e24_2_7",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.3.8" data-multipleanswers="false"  id="e24_2_7"  style="visibility: hidden;">\n    <p>Consider the following code snippet that takes a positive integer ‘n’ as input and answer the question that follows</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>i &lt;- 1\nREPEAT UNTIL i ≤ n\n   IF i MOD 2 = 1\n       DISPLAY(“ODD”)\n   ELSE\n       DISPLAY(“EVEN”)\n   i &lt;- i + 1\n</pre></div>\n</div>\n<p>Which of the following statements are true?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>I.   “ODD” is printed n/2 times if n is even\nII.  “ODD” is printed (n + 1)/2 times if n is odd\nIII. “EVEN” is printed (n - 1)/2 times if n is odd\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e24_2_7_opt_a">I, II only</li><li data-component="feedback">Incorrect. These situations are correct, but there is another correct situtation.</li>\n    \n    <li data-component="answer"  id="e24_2_7_opt_b">II, III only</li><li data-component="feedback">Incorrect. These situations are correct, but there is another correct situtation.</li>\n    \n    <li data-component="answer"  id="e24_2_7_opt_c">I only</li><li data-component="feedback">Incorrect. This situation is correct, but there are more correct situations.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_2_7_opt_d">I, II, III</li><li data-component="feedback">Correct. All three of these scenarios occur at the given n.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.3.8",
                  optional: false,
                  description:
                    "Consider the following code snippet that takes a positive integer ‘n’ as input a",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_2_8",
                data: {
                  id: 11122,
                  base_course: "StudentCSP",
                  name: "e24_2_8",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.3.9" data-multipleanswers="false"  id="e24_2_8"  style="visibility: hidden;">\n    <blockquote>\n<div><p>The Traveling Salesman Problem is a problem in theoretical computer science in which one tries to find the shortest route that passes through every point in a set, once and only once. The optimal solution to the problem for an arbitrary set of of points cannot be found in a reasonable amount of time, that is, it cannot be found in polynomial time. However, we can find an approximation to the optimal solution in a reasonable amount of time. It would be best to find the approximate solution using a</p>\n</div></blockquote>\n\n    <li data-component="answer" data-correct=\'yes\' id="e24_2_8_opt_a">Heuristic algorithm</li><li data-component="feedback">Correct. A Heuristic algorithm atempts to find an approximation of a solution without finding the exact solution.</li>\n    \n    <li data-component="answer"  id="e24_2_8_opt_b">Brute-Force algorithm</li><li data-component="feedback">Incorrect. Brute-Forcing is trying to find a solution using trial and error.</li>\n    \n    <li data-component="answer"  id="e24_2_8_opt_c">Recursive algorithm</li><li data-component="feedback">Incorrect. A Recursive algorithm is an algorithm that calls itself until a condition is met, at which point it stops.</li>\n    \n    <li data-component="answer"  id="e24_2_8_opt_d">Dynamic Programming</li><li data-component="feedback">Incorrect. Dynamic Programming is breaking a problem into smaller sub-problems in order to find the correct answer.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.3.9",
                  optional: false,
                  description:
                    " The Traveling Salesman Problem is a problem in theoretical computer science in ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_2_9",
                data: {
                  id: 11123,
                  base_course: "StudentCSP",
                  name: "e24_2_9",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.3.10" data-multipleanswers="false"  id="e24_2_9"  style="visibility: hidden;">\n    <p>In a freezer, the temperature can be increased, but should not go above 0° C.  It can, however, be exactly equal to 0° C. The unfinished code for increasing the temperature in a freezer is shown below.  The variable temp represents the current temperature in degrees Celsius.</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>PROCEDURE incrementTemperature(temp)\n{\n   IF (&lt;MISSING CODE&gt;)\n   {\n      temp ← temp + 1\n   }\n   RETURN temp\n}\n</pre></div>\n</div>\n<p>Which of the following conditional statements will allow the code to function as expected?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">I</span><span class="o">.</span>     <span class="n">temp</span> <span class="o">==</span> <span class="mi">0</span>\n<span class="n">II</span><span class="o">.</span>    <span class="n">temp</span> <span class="o">&gt;</span> <span class="mi">0</span>\n<span class="n">III</span><span class="o">.</span>   <span class="n">temp</span> <span class="o">&lt;</span> <span class="mi">0</span>\n<span class="n">IV</span><span class="o">.</span>    <span class="n">NOT</span> <span class="p">(</span><span class="n">temp</span> <span class="o">&gt;=</span> <span class="mi">0</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e24_2_9_opt_a">I. and II. only</li><li data-component="feedback">Incorrect. temp == 0 will cause the temperature to increment to 1 when temp == 0 and temp greater than 0 will cause the temperature to only increment above temp == 0.</li>\n    \n    <li data-component="answer"  id="e24_2_9_opt_b">I. and III. only</li><li data-component="feedback">Incorrect. temp == 0 will cause the temperature to increment to 1 when temp == 0</li>\n    \n    <li data-component="answer"  id="e24_2_9_opt_c">I. and IV. only</li><li data-component="feedback">Incorrect. temp == 0 will cause the temperature to increment to 1 when temp == 0</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_2_9_opt_d">III. and IV. only</li><li data-component="feedback">Correct. These two conditionals will not allow temp to go above 0</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.3.10",
                  optional: false,
                  description:
                    "In a freezer, the temperature can be increased, but should not go above 0° C.  I",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_2_10",
                data: {
                  id: 11124,
                  base_course: "StudentCSP",
                  name: "e24_2_10",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.3.11" data-multipleanswers="false"  id="e24_2_10"  style="visibility: hidden;">\n    <p>What is NOT a good example of abstraction?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e24_2_10_opt_a">A new electronic device that requires knowledge of the internal details, because it is important to know all the details of the device before using it.</li><li data-component="feedback">Correct. Abstraction doesn\'t require knowledge of internal details to understand the overall function of a device.</li>\n    \n    <li data-component="answer"  id="e24_2_10_opt_b">A topographical map of the United States, because not all features of the geography are present, but the essence of the geography is present</li><li data-component="feedback">Incorrect. This is a good example because not every part of the real landscape is represented on a map, only key features.</li>\n    \n    <li data-component="answer"  id="e24_2_10_opt_c">A painting by Picasso, because the painting does not contain as many details as a photograph, but it still communicates the emotion of the event being painted</li><li data-component="feedback">Incorrect. This is a good example because knowledge of details is not required to understand the overall concept.</li>\n    \n    <li data-component="answer"  id="e24_2_10_opt_d">Pressing on the brake pedal of your car, because you don’t have to know how brakes work in order to stop the car</li><li data-component="feedback">Incorrect. This is a good example because knowledge of how a car brake functions is not required to press a car brake.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.3.11",
                  optional: false,
                  description: "What is NOT a good example of abstraction?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "24. Chapter 24 - PRACTICE EXAMS/24.3 Set #2",
                data: {
                  id: 11734,
                  base_course: "StudentCSP",
                  name: "24. Chapter 24 - PRACTICE EXAMS/24.3 Set #2",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_2",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam24_3",
            data: {
              title: "24.4 Set #3",
              num: 400,
              chapter: "CSPPracticeQuestions",
              subchapter: "exam24_3",
              id: 11735,
              numQuestions: 11
            },
            children: [
              {
                key: "e24_3_1",
                data: {
                  id: 11125,
                  base_course: "StudentCSP",
                  name: "e24_3_1",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.4.2" data-multipleanswers="false"  id="e24_3_1"  style="visibility: hidden;">\n    <p>Which of the following would be a subdomain of the domain sample.org according to the guidelines of the Domain Name System (DNS)?</p>\n\n    <li data-component="answer"  id="e24_3_1_opt_a">sample.com</li><li data-component="feedback">Incorrect. This is a completely different website unrelated to sample.org.</li>\n    \n    <li data-component="answer"  id="e24_3_1_opt_b">sample.org.biz</li><li data-component="feedback">Incorrect. sample.org is a subdomain of biz in this answer choice.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_3_1_opt_c">enter.sample.org</li><li data-component="feedback">Correct. The subdomain is always on the left of the domain name.</li>\n    \n    <li data-component="answer"  id="e24_3_1_opt_d">sample.org/help</li><li data-component="feedback">Incorrect. Subdomains are always on the left side of the domain and use a "." instead of a "/".</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.4.2",
                  optional: false,
                  description:
                    "Which of the following would be a subdomain of the domain sample.org according t",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_3_2",
                data: {
                  id: 11126,
                  base_course: "StudentCSP",
                  name: "e24_3_2",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.4.3" data-multipleanswers="false"  id="e24_3_2"  style="visibility: hidden;">\n    <p>There are 16 students standing in a classroom. Each student is given back his or her graded homework. Students decide to find out the class’s average score on the homework. Two different algorithms are given for finding the average score.</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>Algorithm A\nStep 1: All students stand.\nStep 2: A randomly selected student writes his or her score on the whiteboard\nand is seated.\nStep 3: A randomly selected standing student adds his or her score to the value\non the whiteboard, records the new value on the whiteboard, and is seated.\nThe previous value on the whiteboard is erased.\nStep 4: Repeat step 3 until no students remain standing.\nStep 5: The value on the whiteboard is divided by 16.\n\nAlgorithm B\nStep 1: All students stand.\nStep 2: Students form groups of 4.\nStep 3: In each group, the students with the lowest and highest scores return\nto their seats.\nStep 4: Repeat steps 1 and 2 until only two students remain standing.\nStep 5: Add the remaining two students’ numbers and divide the sum by two.\n</pre></div>\n</div>\n<p>Which of the following statements is true?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e24_3_2_opt_a">Algorithm A always calculates the correct average, but Algorithm B may not.</li><li data-component="feedback">Correct. Algorithm A correctly calculates the average, while Algorithm B does not.</li>\n    \n    <li data-component="answer"  id="e24_3_2_opt_b">Algorithm B always calculates the correct average, but Algorithm A may not.</li><li data-component="feedback">Incorrect. Algorithm B would calculate the average if the groups of four took an average of their scores.</li>\n    \n    <li data-component="answer"  id="e24_3_2_opt_c">Both Algorithm A and Algorithm B always calculate the correct average.</li><li data-component="feedback">Incorrect. Algorithm B would calculate the average if the groups of four took an average of their scores.</li>\n    \n    <li data-component="answer"  id="e24_3_2_opt_d">Neither Algorithm A nor Algorithm B always calculate the correct average.</li><li data-component="feedback">Incorrect. Algorithm A correctly calculates the average.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.4.3",
                  optional: false,
                  description:
                    "There are 16 students standing in a classroom. Each student is given back his or",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_3_3",
                data: {
                  id: 11127,
                  base_course: "StudentCSP",
                  name: "e24_3_3",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.4.4" data-multipleanswers="false"  id="e24_3_3"  style="visibility: hidden;">\n    <p>Meteorologists record atmospheric data to predict future weather conditions. Suppose that a meteorological lab in Atlanta takes hourly measurements of air temperature and precipitation in the city for a total period of 12 months. Note that the lab also records the exact time and date for each measurement.</p>\n<p>Which of the following questions about the city’s weather could NOT be accurately answered using only the data collected by the lab?</p>\n\n    <li data-component="answer"  id="e24_3_3_opt_a">How does the temperature fluctuate from day to night?</li><li data-component="feedback">Incorrect. The meteorologists have temperature data from days and nights so they can compare the differences between them.</li>\n    \n    <li data-component="answer"  id="e24_3_3_opt_b">Is there a correlation between air temperature and precipitation?</li><li data-component="feedback">Incorrect. The meteorologists have temperature and precipitation data, so they can compare them and determine if there is a correlation.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_3_3_opt_c">What is the average annual precipitation?</li><li data-component="feedback">Correct. The meteorologists only have data from one year, so they cannot calculate the average annual precipitation.</li>\n    \n    <li data-component="answer"  id="e24_3_3_opt_d">What is the average daily temperature?</li><li data-component="feedback">Incorrect. The meteorologists have temperature data for an entire year, so they can find the average of daily temperatures across that time range.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.4.4",
                  optional: false,
                  description:
                    "Meteorologists record atmospheric data to predict future weather conditions. Sup",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_3_4",
                data: {
                  id: 11128,
                  base_course: "StudentCSP",
                  name: "e24_3_4",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.4.5" data-multipleanswers="false"  id="e24_3_4"  style="visibility: hidden;">\n    <p>Meteorologists record atmospheric data to predict future weather conditions. Suppose that a meteorological lab in Atlanta takes hourly measurements of air temperature and precipitation in the city for a total period of 12 months. Note that the lab also records the exact time and date for each measurement.</p>\n<p>Which of the following questions about Atlanta’s weather can be accurately answered using only the data collected by the lab?</p>\n\n    <li data-component="answer"  id="e24_3_4_opt_a">How does wind speed fluctuate from day to night?</li><li data-component="feedback">Incorrect. The meteorologists do not have wind speed data.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_3_4_opt_b">During which hour of the day does it rain the most on average?</li><li data-component="feedback">Correct. The meteorologists have precipitation data for a year, so they can calculate this.</li>\n    \n    <li data-component="answer"  id="e24_3_4_opt_c">Is there a correlation between air pressure and precipitation?</li><li data-component="feedback">Incorrect. The meteorologists do not have air pressure data.</li>\n    \n    <li data-component="answer"  id="e24_3_4_opt_d">Is there a correlation between Atlanta’s temperature and Chicago’s temperature?</li><li data-component="feedback">Incorrect. The meteorologists do not have data for Chicago\'s temperature.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.4.5",
                  optional: false,
                  description:
                    "Meteorologists record atmospheric data to predict future weather conditions. Sup",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_3_5",
                data: {
                  id: 11129,
                  base_course: "StudentCSP",
                  name: "e24_3_5",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.4.6" data-multipleanswers="false"  id="e24_3_5"  style="visibility: hidden;">\n    <p>ASCII is a character-encoding scheme that uses numeric values in decimal (base 10)  to represent alphanumeric and special characters. For example, the uppercase letter ‘A’ is represented by the decimal value ‘65’. Digits from ‘0’ - ‘9’ also have a corresponding ASCII value. The digit ‘0’ has an ASCII value of ‘48’, ‘1’ has an ASCII value of ‘49’ and so on.We can represent the ASCII value of digits as hexadecimal  numbers (base 16) as well. Which digit has a hexadecimal value of ‘33’?</p>\n\n    <li data-component="answer"  id="e24_3_5_opt_a">8</li><li data-component="feedback">Incorrect. This would be true for a hexadecimal value of 38.</li>\n    \n    <li data-component="answer"  id="e24_3_5_opt_b">7</li><li data-component="feedback">Incorrect. This would be true for a hexadecimal value of 37.</li>\n    \n    <li data-component="answer"  id="e24_3_5_opt_c">5</li><li data-component="feedback">Incorrect. This would be true for a hexadecimal value of 35.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_3_5_opt_d">3</li><li data-component="feedback">Correct. The ASCII value would be \'51\'.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.4.6",
                  optional: false,
                  description:
                    "ASCII is a character-encoding scheme that uses numeric values in decimal (base 1",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_3_6",
                data: {
                  id: 11130,
                  base_course: "StudentCSP",
                  name: "e24_3_6",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.4.7" data-multipleanswers="false"  id="e24_3_6"  style="visibility: hidden;">\n    <p>Imagine there is a programming language which uses two different data types to store integers - a 16-bit short data type and a 64-bit long data type. Then which of the following statements is true about the two data types?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e24_3_6_opt_a">The long data type can store 2^48 times as many distinct values as the short data type</li><li data-component="feedback">Correct. It can store 2^(64 - 16) as many distinct values.</li>\n    \n    <li data-component="answer"  id="e24_3_6_opt_b">The long data type can store 2^64 times as many distinct values as the short data type</li><li data-component="feedback">Incorrect. That is how many total values the long data stores.</li>\n    \n    <li data-component="answer"  id="e24_3_6_opt_c">The long data type can store 2^16 times as many distinct values as the short data type</li><li data-component="feedback">Incorrect. That is how many total values the short data stores.</li>\n    \n    <li data-component="answer"  id="e24_3_6_opt_d">The short data type can store 4 times as many distinct values as the long data type</li><li data-component="feedback">Incorrect. While long data is 4 times as long as the short, the question asks for the difference in distinct values the data type can hold.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.4.7",
                  optional: false,
                  description:
                    "Imagine there is a programming language which uses two different data types to s",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_3_7",
                data: {
                  id: 11131,
                  base_course: "StudentCSP",
                  name: "e24_3_7",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.4.8" data-multipleanswers="false"  id="e24_3_7"  style="visibility: hidden;">\n    <p>At a company, n number of employees are given the same bonus of $5,000 on top of their salary.  However, each person can only get a maximum of $100,000 a year, so if adding the bonus causes the employee’s total pay to surpass $100,000, the employee will receive the maximum pay of $100,000.  Each employee’s original annual salary is stored in a list entitled employeeList, indexed from 1 to n.</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>PROCEDURE addBonuses(employeeList)\n{\n  i ← n\n  REPEAT n TIMES\n  {\n     &lt;MISSING CODE&gt;\n     i ← i + 1\n  }\n  RETURN employeeList\n}\n</pre></div>\n</div>\n<p>Which of the following code segments can be placed in the &lt;MISSING CODE&gt; area to make the program work as expected?</p>\n<p>(The min(a,b) and max(a,b) functions return the lesser and greater values of the inputs, respectively.)</p>\n<p>Option I.</p>\n<blockquote>\n<div><div class="highlight-default notranslate"><div class="highlight"><pre><span></span>employeeList[i] ← min (employeeList [i] + 5000, 100000)\n</pre></div>\n</div>\n</div></blockquote>\n<p>Option II.</p>\n<blockquote>\n<div><div class="highlight-default notranslate"><div class="highlight"><pre><span></span>employeeList [i] ← max (employeeList [i] + 5000, 100000)\n</pre></div>\n</div>\n</div></blockquote>\n<p>Option III.</p>\n<blockquote>\n<div><div class="highlight-default notranslate"><div class="highlight"><pre><span></span>employeeList[i] ← employeeList [i] + 5000\nIF (employeeList [i] &gt; 100000)\n{\n   employeeList [i] ← employeeList [i] - 5000\n}\n</pre></div>\n</div>\n</div></blockquote>\n<p>Option IV.</p>\n<blockquote>\n<div><div class="highlight-default notranslate"><div class="highlight"><pre><span></span>employeeList[i] ← employeeList [i] + 5000\nIF (employeeList [i] &gt; 100000)\n{\n   employeeList [i] ← 100000\n}\n</pre></div>\n</div>\n</div></blockquote>\n\n    <li data-component="answer"  id="e24_3_7_opt_a">I,III</li><li data-component="feedback">Incorrect. Option III will not give them the maximum pay, and won\'t give them any bonus.</li>\n    \n    <li data-component="answer"  id="e24_3_7_opt_b">II, III</li><li data-component="feedback">Incorrect. Both of these options are incorrect.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_3_7_opt_c">I, IV</li><li data-component="feedback">Correct. Both of these options correctly calculate each employee\'s pay.</li>\n    \n    <li data-component="answer"  id="e24_3_7_opt_d">I, II, III, IV</li><li data-component="feedback">Incorrect. Options II and III both incorrectly calculate the employee\'s pay.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.4.8",
                  optional: false,
                  description:
                    "At a company, n number of employees are given the same bonus of $5,000 on top of",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_3_8",
                data: {
                  id: 11132,
                  base_course: "StudentCSP",
                  name: "e24_3_8",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.4.9" data-multipleanswers="false"  id="e24_3_8"  style="visibility: hidden;">\n    <p>Which of the following have increased the availability of communication and collaboration between people at a distance?</p>\n<blockquote>\n<div><div class="line-block">\n<div class="line">I. Social Media</div>\n<div class="line">II. SMS</div>\n<div class="line">III. Email</div>\n<div class="line">IV. Video Conferencing</div>\n</div>\n</div></blockquote>\n\n    <li data-component="answer"  id="e24_3_8_opt_a">I, IV</li><li data-component="feedback">Incorrect. SMS and Email have also increased the availability of distant communication and collaboration.</li>\n    \n    <li data-component="answer"  id="e24_3_8_opt_b">I, III, IV</li><li data-component="feedback">Incorrect. SMS has also increased the availability of distant communication and collaboration.</li>\n    \n    <li data-component="answer"  id="e24_3_8_opt_c">II, III</li><li data-component="feedback">Incorrect. Social Media websites and Video Conferencing have also increased the availability of distant communication and collaboration.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_3_8_opt_d">I, II, III, IV</li><li data-component="feedback">Correct. All of these utilities have increased the availability of distant communication and collaboration.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.4.9",
                  optional: false,
                  description:
                    "Which of the following have increased the availability of communication and coll",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_3_9",
                data: {
                  id: 11133,
                  base_course: "StudentCSP",
                  name: "e24_3_9",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.4.10" data-multipleanswers="false"  id="e24_3_9"  style="visibility: hidden;">\n    <p>Which of the following statements are true about algorithms?</p>\n<blockquote>\n<div><div class="line-block">\n<div class="line">I. If an algorithm runs in reasonable time, the number of steps the algorithm takes is a polynomial function (constant, linear, squared, etc.) of the size of the input.</div>\n<div class="line">II. All problems can be solved using an algorithm that runs in reasonable time.</div>\n<div class="line">III. If a problem cannot be solved in reasonable time, a heuristic approach is helpful to solve the problem.</div>\n</div>\n</div></blockquote>\n\n    <li data-component="answer"  id="e24_3_9_opt_a">I, II</li><li data-component="feedback">Incorrect. Option II is incorrect. Some problems require algorithms that do not run in reasonable time.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_3_9_opt_b">I, III</li><li data-component="feedback">Correct. Both of these statements regarding algorithms are true.</li>\n    \n    <li data-component="answer"  id="e24_3_9_opt_c">I, II, III</li><li data-component="feedback">Incorrect. Option II is incorrect. Some problems require algorithms that do not run in reasonable time.</li>\n    \n    <li data-component="answer"  id="e24_3_9_opt_d">None of the options</li><li data-component="feedback">Incorrect. An algorithm that runs in reasonable time refers to a polynomial function of the input size.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.4.10",
                  optional: false,
                  description: "Which of the following statements are true about algorithms?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_3_10",
                data: {
                  id: 11134,
                  base_course: "StudentCSP",
                  name: "e24_3_10",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.4.11" data-multipleanswers="false"  id="e24_3_10"  style="visibility: hidden;">\n    <p>The red triangle in the grid below is currently located at the position (5, 1) (5th row down and 1st column across), and is facing upward.</p>\n<a class="reference internal image-reference" href="../_images/triangle.png"><img alt="../_images/triangle.png" src="../_images/triangle.png" style="width: 250px; height: 250px;" /></a>\n<p>If the following code is run, which position will the red triangle end up on?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>n ← 4\nREPEAT UNTIL n = 1\n{\n   REPEAT n TIMES\n   {\n      MOVE_FORWARD\n   }\n   TURN_RIGHT\n   n ← n/2\n}\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e24_3_10_opt_a">(3,3)</li><li data-component="feedback">Incorrect. Notice that n is changed to n/2 after the inner loop.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_3_10_opt_b">(1,3)</li><li data-component="feedback">Correct. By following the code, you can see that the triangle ends up in (1,3).</li>\n    \n    <li data-component="answer"  id="e24_3_10_opt_c">(5,3)</li><li data-component="feedback">Incorrect. The triangle only turns right throughout the enter code segment.</li>\n    \n    <li data-component="answer"  id="e24_3_10_opt_d">(1,1)</li><li data-component="feedback">Incorrect. Did you miss the TURN_RIGHT call after the inner loop?</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.4.11",
                  optional: false,
                  description:
                    "The red triangle in the grid below is currently located at the position (5, 1) (",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "24. Chapter 24 - PRACTICE EXAMS/24.4 Set #3",
                data: {
                  id: 11735,
                  base_course: "StudentCSP",
                  name: "24. Chapter 24 - PRACTICE EXAMS/24.4 Set #3",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_3",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam24_4",
            data: {
              title: "24.5 Set #4",
              num: 500,
              chapter: "CSPPracticeQuestions",
              subchapter: "exam24_4",
              id: 11736,
              numQuestions: 11
            },
            children: [
              {
                key: "e24_4_1",
                data: {
                  id: 11135,
                  base_course: "StudentCSP",
                  name: "e24_4_1",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.5.2" data-multipleanswers="false"  id="e24_4_1"  style="visibility: hidden;">\n    <p>The Domain Name System (DNS) is analogous to:</p>\n\n    <li data-component="answer"  id="e24_4_1_opt_a">Calling Domino’s Pizza to talk to an employee to place an order</li><li data-component="feedback">Incorrect. This is analogous to giving a request to a server but not analogous to DNS.</li>\n    \n    <li data-component="answer"  id="e24_4_1_opt_b">Downloading your AP scores from the College Board website</li><li data-component="feedback">Incorrect. This is analogous to receiving data from a server but not analogous to DNS.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_4_1_opt_c">Searching through a phone book to find the phone number belonging to a certain name</li><li data-component="feedback">Correct. The DNS is the Internet\'s equivalent of a phone book. It maintains a directory of domain names and translate them to Internet Protocol (IP) addresses.</li>\n    \n    <li data-component="answer"  id="e24_4_1_opt_d">Adding a subdomain to your website for your blog posts</li><li data-component="feedback">Incorrect. The rules laid out by the DNS allow us to create subdomains, but this is not analogous to the purpose DNS serves.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.5.2",
                  optional: false,
                  description: "The Domain Name System (DNS) is analogous to:",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_4_2",
                data: {
                  id: 11136,
                  base_course: "StudentCSP",
                  name: "e24_4_2",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.5.3" data-multipleanswers="false"  id="e24_4_2"  style="visibility: hidden;">\n    <p>Suppose you are writing a program to accept two integers as input, divide them and return the answer. You decide to use a 64-bit floating-point variable in your program to store the calculated answer and your friend decides to use a 32-bit floating-point variable in his program to store the calculated answer. Assume that the two programs are identical in all other aspects and that the user will never attempt to divide by 0. Then, which of the following statements comparing the answers calculated by the two programs is true?</p>\n\n    <li data-component="answer"  id="e24_4_2_opt_a">Your friend’s program will give equally or more precise answers for any arbitrary input.</li><li data-component="feedback">Incorrect. Refer to feedback for answer choice (B).</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_4_2_opt_b">Your program will give equally or more precise answers for any arbitrary input.</li><li data-component="feedback">Correct. Since the variable used in your program occupies more memory/has greater number of bits, it will have greater precision and range than the variable used in your friend\'s program. Thus a more accurate answer is received in your program when numbers are divided.</li>\n    \n    <li data-component="answer"  id="e24_4_2_opt_c">The two programs will give equally precise answers for any arbitrary input.</li><li data-component="feedback">Incorrect. There will be cases in which precision will differ since the two variables have different memory size, and therefore different range.</li>\n    \n    <li data-component="answer"  id="e24_4_2_opt_d">Your program is more likely than your friend’s to give answers with round off errors.</li><li data-component="feedback">Incorrect. Round off errors are observed more when variables with lesser memory size are used.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.5.3",
                  optional: false,
                  description:
                    "Suppose you are writing a program to accept two integers as input, divide them a",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_4_3",
                data: {
                  id: 11137,
                  base_course: "StudentCSP",
                  name: "e24_4_3",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.5.4" data-multipleanswers="false"  id="e24_4_3"  style="visibility: hidden;">\n    <p>ASCII is a character-encoding scheme that uses numeric values to represent alphanumeric and special characters. For example, the uppercase letter ‘A’ is represented by the decimal (base 10) value 65. A partial list of characters and their corresponding ASCII values are shown in the table below.</p>\n<figure class="align-center">\n<a class="reference internal image-reference" href="../_images/ascii.png"><img alt="../_images/ascii.png" src="../_images/ascii.png" style="width: 490.5px; height: 337.5px;" /></a>\n</figure>\n<p>ASCII characters can also be represented by octal numbers (base 8). To represent an entire word using octal numbers, we can find the octal value for each letter in the word and then concatenate the values. According to the information provided above, which English word do the following octal numbers represent:</p>\n<p><em>102 117 107</em></p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e24_4_3_opt_a">BOG</li><li data-component="feedback">Correct. We can see that 102 base-8 = 1 * 64 + 0 * 8 + 2 * 1 = 66 base-10 = \'B\', similarly 117 base-8 = \'O\' and 107 base-8 = \'G\'</li>\n    \n    <li data-component="answer"  id="e24_4_3_opt_b">BON</li><li data-component="feedback">Incorrect. Check your calculations. See feedback for answer choice A to understand how to convert ocal numbers to decimal numbers.</li>\n    \n    <li data-component="answer"  id="e24_4_3_opt_c">CON</li><li data-component="feedback">Incorrect. Check your calculations. See feedback for answer choice A to understand how to convert ocal numbers to decimal numbers.</li>\n    \n    <li data-component="answer"  id="e24_4_3_opt_d">BEG</li><li data-component="feedback">Incorrect. Check your calculations. See feedback for answer choice A to understand how to convert ocal numbers to decimal numbers.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.5.4",
                  optional: false,
                  description:
                    "ASCII is a character-encoding scheme that uses numeric values to represent alpha",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_4_4",
                data: {
                  id: 11138,
                  base_course: "StudentCSP",
                  name: "e24_4_4",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.5.5" data-multipleanswers="false"  id="e24_4_4"  style="visibility: hidden;">\n    <p>Which of the following is an important part of data analysis?</p>\n\n    <li data-component="answer"  id="e24_4_4_opt_a">Importing the data into a format that the computer can process</li><li data-component="feedback">Incorrect. This statement is true since we cannot perform meaninful analysis on our data if  our computer can\'t understand it. However, the other answer choices are also correct!</li>\n    \n    <li data-component="answer"  id="e24_4_4_opt_b">Testing hypotheses and looking for patterns in the processed data to gain insight and knowledge</li><li data-component="feedback">Incorrect. Before we can arrive at results, we need to hypothesize - make predictions about what our results may be and test them out. Looking for patterns in the data can help us gain intuition into how we should proceed proving or disproving our hypothesis. This statement is true; however, the other answer choices are also correct!</li>\n    \n    <li data-component="answer"  id="e24_4_4_opt_c">Visualizing or reporting the results in a meaningful way to the end user</li><li data-component="feedback">Incorrect. The end user is not concerned with our raw data, or with all our lengthy calculations; we should use abstraction and present only the necessary data and results to the end user. This statement is true; however, the other answer choices are also correct!</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_4_4_opt_d">All of the above</li><li data-component="feedback">Correct. Since all answer choices are correct.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.5.5",
                  optional: false,
                  description: "Which of the following is an important part of data analysis?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_4_5",
                data: {
                  id: 11139,
                  base_course: "StudentCSP",
                  name: "e24_4_5",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.5.6" data-multipleanswers="false"  id="e24_4_5"  style="visibility: hidden;">\n    <dl>\n<dt>A certain mobile application allows its users to take pictures and send them to whoever they wish to on their contact list as an online message. If a user receives a picture, he may download the picture to save it or let the application automatically delete it within 24 hours of receiving the message. A picture itself is considered to be data. In addition to the data, the application stores the following metadata for all pictures:</dt><dd><ul class="simple">\n<li><p>The time the picture was taken, and the time the picture was received as a message</p></li>\n<li><p>The name of the user who sent the picture and the names of users who received the picture</p></li>\n<li><p>The number of users who downloaded the picture</p></li>\n</ul>\n<p>For which of the following goals would it be more useful to analyze the data instead of the metadata?</p>\n</dd>\n</dl>\n\n    <li data-component="answer"  id="e24_4_5_opt_a">To determine the users who send pictures most frequently</li><li data-component="feedback">Incorrect. We need to use metadata for this, particularly the names of users who send pictures.</li>\n    \n    <li data-component="answer"  id="e24_4_5_opt_b">To determine the time of day that the application is most active</li><li data-component="feedback">Incorrect. We need to use metadata for this, particularly the times at which pictures were taken and received as a message.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_4_5_opt_c">To determine the objects that many users are are taking pictures of</li><li data-component="feedback">Correct. This answer choice is correct since we need to look at the actual picture, that is, the data in this case.</li>\n    \n    <li data-component="answer"  id="e24_4_5_opt_d">To determine which pictures from a particular user have been downloaded the most</li><li data-component="feedback">Incorrect. We need to use metadata for this, particularly the number of users who downloaded the pictures.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.5.6",
                  optional: false,
                  description:
                    "A certain mobile application allows its users to take pictures and send them to ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_4_6",
                data: {
                  id: 11140,
                  base_course: "StudentCSP",
                  name: "e24_4_6",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.5.7" data-multipleanswers="false"  id="e24_4_6"  style="visibility: hidden;">\n    <p>A red triangle is pictured below in a grid of squares. It is currently facing upward, and can only move using the MoveTriangle procedure, shown below. The triangle can move onto white and gray squares, but not onto the black squares.</p>\n<figure class="align-center">\n<a class="reference internal image-reference" href="../_images/triangle2.png"><img alt="../_images/triangle2.png" src="../_images/triangle2.png" style="width: 354.6px; height: 263.7px;" /></a>\n</figure>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">PROCEDURE</span> <span class="n">MoveTriangle</span> <span class="p">(</span><span class="n">numMoves</span><span class="p">,</span> <span class="n">numTurns</span><span class="p">)</span>\n<span class="p">{</span>\n   <span class="n">REPEAT</span> <span class="n">numMoves</span> <span class="n">TIMES</span>\n   <span class="p">{</span>\n       <span class="n">MOVE_FORWARD</span><span class="p">()</span>\n   <span class="p">}</span>\n   <span class="n">REPEAT</span> <span class="n">numTurns</span> <span class="n">TIMES</span>\n   <span class="p">{</span>\n       <span class="n">TURN_RIGHT</span><span class="p">()</span>\n   <span class="p">}</span>\n <span class="p">}</span>\n</pre></div>\n</div>\n<p>Which of the following instructions will get the red triangle to the gray square?</p>\n<p>(A)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>\n<span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>\n<span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>\n<span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>\n</pre></div>\n</div>\n<p>(B)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>\n<span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>\n</pre></div>\n</div>\n<p>(C)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>\n<span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>\n<span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>\n<span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>\n</pre></div>\n</div>\n<p>(D)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>\n<span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>\n<span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>\n<span class="n">MoveTriangle</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e24_4_6_opt_a"></li><li data-component="feedback">Incorrect. The first step in this answer choice is correct. However, after the second step gets executed, the triangle faces a black sqaure, that is a dead end, and cannot move forward unless it turns first!</li>\n    \n    <li data-component="answer"  id="e24_4_6_opt_b"></li><li data-component="feedback">Incorrect. We will get an error in the very first step since our triangle cannot move forward 4 times!</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_4_6_opt_c"></li><li data-component="feedback">Correct. Trace the movement of the red triangle in the grid for this answer choice. You will find that we successfully reach the gray sqaure.</li>\n    \n    <li data-component="answer"  id="e24_4_6_opt_d"></li><li data-component="feedback">Incorrect. Look at the third step - we incorrectly turn the triangle three times and it now faces a black sqaure. Therefore, we can\'t move forward now!</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.5.7",
                  optional: false,
                  description:
                    "A red triangle is pictured below in a grid of squares. It is currently facing up",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_4_7",
                data: {
                  id: 11141,
                  base_course: "StudentCSP",
                  name: "e24_4_7",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.5.8" data-multipleanswers="false"  id="e24_4_7"  style="visibility: hidden;">\n    <p>A teacher wants to give extra credit to those students in her class who did an extra project and volunteered for community service.</p>\n<p>She creates a list <code class="docutils literal notranslate"><span class="pre">extraProjectStudents</span></code>, which contains names of all the students who did the extra project, and another list <code class="docutils literal notranslate"><span class="pre">volunteerServiceStudents</span></code>, which contains names of all the students who volunteered for community service. The teacher wants to create another list, <code class="docutils literal notranslate"><span class="pre">extraCreditStudents</span></code>, which contains names of all the students who are eligible to receive extra credit.</p>\n<p>Look at the incomplete code for the procedure <code class="docutils literal notranslate"><span class="pre">createExtraCreditList()</span></code> given below.</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>PROCEDURE createExtraCreditList(extraProjectStudents, volunteerServiceStudents)\n{\n    extraCreditStudents ← [ ]\n    FOR EACH student IN extraProjectStudents\n    {\n        &lt;MISSING CODE&gt;\n    }\n    RETURN extraCreditStudents\n}\n</pre></div>\n</div>\n<p>Which of the answer choices should replace <code class="docutils literal notranslate"><span class="pre">&lt;MISSING</span> <span class="pre">CODE&gt;</span></code> so that <code class="docutils literal notranslate"><span class="pre">extraCreditStudents</span></code> gets filled as intended?</p>\n<p>You may use a procedure <code class="docutils literal notranslate"><span class="pre">contains(list,</span> <span class="pre">name)</span></code> in your answer which returns <code class="docutils literal notranslate"><span class="pre">true</span></code> if the <code class="docutils literal notranslate"><span class="pre">name</span></code> is found in the <code class="docutils literal notranslate"><span class="pre">list</span></code> and <code class="docutils literal notranslate"><span class="pre">false</span></code> otherwise.</p>\n<p>(A)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">IF</span> <span class="p">(</span><span class="n">contains</span> <span class="p">(</span><span class="n">volunteerServiceStudents</span><span class="p">,</span> <span class="n">student</span><span class="p">))</span>\n<span class="p">{</span>\n    <span class="n">APPEND</span> <span class="p">(</span><span class="n">extraCreditStudents</span><span class="p">,</span> <span class="n">student</span><span class="p">)</span>\n<span class="p">}</span>\n</pre></div>\n</div>\n<p>(B)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">IF</span> <span class="p">(</span><span class="n">contains</span> <span class="p">(</span><span class="n">extraCreditStudents</span><span class="p">,</span> <span class="n">student</span><span class="p">))</span>\n<span class="p">{</span>\n    <span class="n">APPEND</span> <span class="p">(</span><span class="n">volunteerServiceStudents</span><span class="p">,</span> <span class="n">student</span><span class="p">)</span>\n<span class="p">}</span>\n</pre></div>\n</div>\n<p>(C)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">IF</span> <span class="p">(</span><span class="n">contains</span> <span class="p">(</span><span class="n">extraProjectStudents</span><span class="p">,</span> <span class="n">student</span><span class="p">))</span>\n<span class="p">{</span>\n    <span class="n">APPEND</span> <span class="p">(</span><span class="n">extraCreditStudents</span><span class="p">,</span> <span class="n">student</span><span class="p">)</span>\n<span class="p">}</span>\n</pre></div>\n</div>\n<p>(D)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">IF</span> <span class="p">(</span><span class="n">contains</span> <span class="p">(</span><span class="n">volunteerServiceStudents</span><span class="p">,</span> <span class="n">student</span><span class="p">))</span>\n<span class="p">{</span>\n    <span class="n">APPEND</span> <span class="p">(</span><span class="n">extraProjectStudents</span><span class="p">,</span> <span class="n">student</span><span class="p">)</span>\n<span class="p">}</span>\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="e24_4_7_opt_a"></li><li data-component="feedback">Correct. In our loop, \'student\' is already present in \'extraProjectStudents\' therefore we only need to check if \'student\' is also present in \'volunteerServiceStudents\' and add \'student\' to \'extraCreditStudents\' if this condition is satisfied. This is exactly what this answer choice does.</li>\n    \n    <li data-component="answer"  id="e24_4_7_opt_b"></li><li data-component="feedback">Incorrect. Checking if \'student\' is in \'extraCreditStudents\' and then adding \'student\' to \'volunteerServiceStudents\' is incorrect; we need to check if \'student\' is in \'volunteerSeriveStudents\' and then add \'student\' to \'extraCreditStudents\'</li>\n    \n    <li data-component="answer"  id="e24_4_7_opt_c"></li><li data-component="feedback">Incorrect. This option will incorrectly add all students in \'extraProjectStudents\' to \'extraCreditStudents\' even if a \'student\' is not present in \'volunteerServiceStudents\'.</li>\n    \n    <li data-component="answer"  id="e24_4_7_opt_d"></li><li data-component="feedback">Incorrect. We need to add students to \'extraCreditStudents\' not to \'extraProjectStudents\'.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.5.8",
                  optional: false,
                  description:
                    "A teacher wants to give extra credit to those students in her class who did an e",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_4_8",
                data: {
                  id: 11142,
                  base_course: "StudentCSP",
                  name: "e24_4_8",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.5.9" data-multipleanswers="false"  id="e24_4_8"  style="visibility: hidden;">\n    <p>Efficiency of algorithms is most often analyzed based on which of the following characteristics?</p>\n\n    <li data-component="answer"  id="e24_4_8_opt_a">The number of lines of computer code needed to implement the algorithm.</li><li data-component="feedback">Incorrect. Efficiencies of algorithms are not related to number of lines of codes. In fact, a program with fewer lines of code may very well be more inefficient than a program with more lines of code.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_4_8_opt_b">The time and memory space necessary to run the algorithm.</li><li data-component="feedback">Correct. This is correct since efficiency of algorithms in measured in terms of run-time and space complexity.</li>\n    \n    <li data-component="answer"  id="e24_4_8_opt_c">How easy or difficult the algorithm is to understand.</li><li data-component="feedback">Inorrect. How "complex" an algorithm is to understand has nothing to do with its run-time or space complexity. In fact, an algorithm which is easy to understand may very well be more inefficient than an algorithm which isn\'t.</li>\n    \n    <li data-component="answer"  id="e24_4_8_opt_d">The size of the output obtained after running the algorithm.</li><li data-component="feedback">Incorrect. Output size doest not determine the efficiency of an algorithm.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.5.9",
                  optional: false,
                  description:
                    "Efficiency of algorithms is most often analyzed based on which of the following ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_4_9",
                data: {
                  id: 11143,
                  base_course: "StudentCSP",
                  name: "e24_4_9",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.5.10" data-multipleanswers="false"  id="e24_4_9"  style="visibility: hidden;">\n    <p>A student purchases a single-user license of an online textbook and wants to share the textbook with their classmates. Under what conditions is it acceptable for the student to share this textbook?</p>\n\n    <li data-component="answer"  id="e24_4_9_opt_a">If the student shares only three chapters of the textbook with their classmates</li><li data-component="feedback">Incorrect. Reproducing even a part of copyrighted, single-user content constitutes plagiarism.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_4_9_opt_b">If the student gets permission from the textbook’s copyright owner</li><li data-component="feedback">Correct. Permission from appropriate sources needs to be obtained before single-user content can be shared.</li>\n    \n    <li data-component="answer"  id="e24_4_9_opt_c">If the textbook is only shared with people in the student’s class</li><li data-component="feedback">Incorrect. Sharing single-user material with anyone constitutes plagiarism.</li>\n    \n    <li data-component="answer"  id="e24_4_9_opt_d">If the textbook is only shared with one other classmate</li><li data-component="feedback">Incorrect. Sharing single-user material with even one other person constitutes plagiarism.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.5.10",
                  optional: false,
                  description:
                    "A student purchases a single-user license of an online textbook and wants to sha",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e24_4_10",
                data: {
                  id: 11144,
                  base_course: "StudentCSP",
                  name: "e24_4_10",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="24.5.11" data-multipleanswers="false"  id="e24_4_10"  style="visibility: hidden;">\n    <p>The code segment below moves a robot through a maze, with the objective of reaching the gray square. The robot in each grid is represented as a red triangle and is initially facing upwards. The robot can move onto white and gray squares, but not onto the black squares. The procedure <code class="docutils literal notranslate"><span class="pre">goalReached()</span></code> used in the code segment below evaluates to <code class="docutils literal notranslate"><span class="pre">true</span></code> if the robot is on the gray square and evaluates to <code class="docutils literal notranslate"><span class="pre">false</span></code> in all other cases.</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span><span class="n">REPEAT</span> <span class="n">UNTIL</span> <span class="p">(</span><span class="n">goalReached</span> <span class="p">())</span>\n<span class="p">{</span>\n    <span class="n">IF</span> <span class="p">(</span><span class="n">CAN_MOVE</span> <span class="p">(</span><span class="n">forward</span><span class="p">))</span>\n    <span class="p">{</span>\n        <span class="n">MOVE_FORWARD</span> <span class="p">()</span>\n    <span class="p">}</span>\n    <span class="n">IF</span> <span class="p">(</span><span class="n">CAN_MOVE</span> <span class="p">(</span><span class="n">left</span><span class="p">))</span>\n    <span class="p">{</span>\n        <span class="n">ROTATE_LEFT</span> <span class="p">()</span>\n    <span class="p">}</span>\n    <span class="n">IF</span> <span class="p">(</span><span class="n">CAN_MOVE</span> <span class="p">(</span><span class="n">right</span><span class="p">))</span>\n    <span class="p">{</span>\n        <span class="n">ROTATE_RIGHT</span> <span class="p">()</span>\n    <span class="p">}</span>\n<span class="p">}</span>\n</pre></div>\n</div>\n<p>For which of the following grids does the program NOT correctly move the triangle to the gray square?</p>\n<figure class="align-center">\n<img alt="../_images/triangleoptions.png" src="../_images/triangleoptions.png" />\n</figure>\n\n    <li data-component="answer"  id="e24_4_10_opt_a"></li><li data-component="feedback">Incorrect. The robot has a direct path from origin to destination. Therefore it will reach the gray square in this case.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e24_4_10_opt_b"></li><li data-component="feedback">Correct. Let\'s look at what happens when the robot reaches the sqaure (4, 2), that is, 4th row from top and the 2nd column from left. The robot is facing right and has just moved forward from square (4, 1). Next we check if the robot can move left, since it can the robot turns left and faces the top. Then we check if the robot can move right, since it can, the robot turns right and faces the right side again. Then, \'goalReached()\' evaluates to false, the next iteration beigns and the robot moves forward onto square (4, 3). At this point, we can conclude that the robot will never reach the gray sqaure since it has gone off-track, in fact, the robot will continue to move until it gets stuck at sqaure (3, 4).</li>\n    \n    <li data-component="answer"  id="e24_4_10_opt_c"></li><li data-component="feedback">Incorrect. Let\'s look at what happens when the robot reaches the sqaure (2, 2), that is, 2nd row from top and the 2nd column from left. The robot is facing the top and has just moved forward from square (3, 2). Next we check if the robot can move left, since it cannot the robot\'s direction remains unchanged. Then we check if the robot can move right, since it can, the robot turns right and faces the right side. Then, \'goalReached()\' evaluates to false, the next iteration beigns and the robot moves forward onto square (2, 3). At this point, we can conclude that the robot will reach the gray sqaure since a direct path lies ahead.</li>\n    \n    <li data-component="answer"  id="e24_4_10_opt_d"></li><li data-component="feedback">Incorrect. The robot has a direct path from origin to destination. Therefore it will reach the gray square in this case.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPPracticeQuestions/exam24_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "24.5.11",
                  optional: false,
                  description:
                    "The code segment below moves a robot through a maze, with the objective of reach",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "24. Chapter 24 - PRACTICE EXAMS/24.5 Set #4",
                data: {
                  id: 11736,
                  base_course: "StudentCSP",
                  name: "24. Chapter 24 - PRACTICE EXAMS/24.5 Set #4",
                  chapter: "CSPPracticeQuestions",
                  subchapter: "exam24_4",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      },
      {
        key: "CSPUntimedPracticeQuestions",
        data: {
          title: "25. Chapter 25 - UNTIMED PRACTICE QUESTIONS",
          num: 25
        },
        children: [
          {
            key: "exam25_1",
            data: {
              title: "25.1 Set #1",
              num: 100,
              chapter: "CSPUntimedPracticeQuestions",
              subchapter: "exam25_1",
              id: 27051,
              numQuestions: 16
            },
            children: [
              {
                key: "e25_1_1",
                data: {
                  id: 27021,
                  base_course: "StudentCSP",
                  name: "e25_1_1",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.1" data-multipleanswers="false"  id="e25_1_1"  style="visibility: hidden;">\n    <p>Which term does the following statement describe?</p>\n<p><em>Any sequence of characters we can type between a pair of single, double, or triple quotes</em></p>\n\n    <li data-component="answer"  id="e25_1_1_opt_a">A variable.</li><li data-component="feedback">Incorrect. A variable is name that a computer can associate with a value. For example, if <i>name</i> =\'Alexa\' then <i>name</i> is the variable and \'Alexa\' is the value.</li>\n    \n    <li data-component="answer"  id="e25_1_1_opt_b">A Function.</li><li data-component="feedback">Incorrect. Functions perform some action, like a procedure, and return a value. For example, x.lower() would return a new string in all lowercase.</li>\n    \n    <li data-component="answer"  id="e25_1_1_opt_c">Code.</li><li data-component="feedback">Incorrect. Code is what you are using to tell the computer how to function! You are learning how to code!</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_1_1_opt_d">A String.</li><li data-component="feedback">Correct. A string is characters typed between one, two, or three quotes.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.1",
                  optional: false,
                  description: "Which term does the following statement describe?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_2",
                data: {
                  id: 27022,
                  base_course: "StudentCSP",
                  name: "e25_1_2",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.2" data-multipleanswers="false"  id="e25_1_2"  style="visibility: hidden;">\n    <p>Which of the following is NOT true of a Turing Machine?</p>\n\n    <li data-component="answer"  id="e25_1_2_opt_a">A device that can be programmed to compute anything that can be mathematically computed.</li><li data-component="feedback">Incorrect. This one is true! All Turing Machines have the ability to compute mathematical functions.</li>\n    \n    <li data-component="answer"  id="e25_1_2_opt_b">Any machine that passes the Turing Test.</li><li data-component="feedback">Incorrect. This one is true! Turing Machines pass the Turing Test if they reflect human-like tendencies during the Turing Test.</li>\n    \n    <li data-component="answer"  id="e25_1_2_opt_c">A machine that can read instructions from a tape and write results to the tape.</li><li data-component="feedback">Incorrect. This one is true! A Turing Machine can read information that it is provided and write back results.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_1_2_opt_d">A computer that cannot repeat steps.</li><li data-component="feedback">Correct. This answer is not true! All Turing Machines do have the ability to repeat steps.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.2",
                  optional: false,
                  description: "Which of the following is NOT true of a Turing Machine?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_3",
                data: {
                  id: 27023,
                  base_course: "StudentCSP",
                  name: "e25_1_3",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.3" data-multipleanswers="false"  id="e25_1_3"  style="visibility: hidden;">\n    <p>Use the following code for questions 3 and 4.</p>\n<p>What will print out when the code is run?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>animal_1 ← &#39;Garfield&#39;\nanimal_2 ← &#39;Fido&#39;\nanimal_3 ← &#39;Gary&#39;\nanimal_1 ← animal_2\nanimal_3 ← animal_1\nanimal_2 ← &#39;fish&#39;\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="e25_1_3_opt_a">\'Fido\'</li><li data-component="feedback">Correct. On line four, notice how <i>animal_1</i> is reassigned to \'Fido\'. On the following line <i>animal_3</i> is reassigned to the value of <i>animal_1</i>, which is now \'Fido\'.</li>\n    \n    <li data-component="answer"  id="e25_1_3_opt_b">animal_3</li><li data-component="feedback">Incorrect. <i>animal_3</i> is the name of the variable.</li>\n    \n    <li data-component="answer"  id="e25_1_3_opt_c">\'fish\'</li><li data-component="feedback">Incorrect. \'fish\' is the new value of <i>animal_2</i> assigned on the last line.</li>\n    \n    <li data-component="answer"  id="e25_1_3_opt_d">Error</li><li data-component="feedback">Incorrect. This code will run and there will not be an error.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.3",
                  optional: false,
                  description: "Use the following code for questions 3 and 4.",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_4",
                data: {
                  id: 27024,
                  base_course: "StudentCSP",
                  name: "e25_1_4",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.4" data-multipleanswers="false"  id="e25_1_4"  style="visibility: hidden;">\n    <p>Which of the following is <em>animal_1</em> an example of?</p>\n\n    <li data-component="answer"  id="e25_1_4_opt_a">A name</li><li data-component="feedback">Incorrect. <i>animal_1</i> is the name of the variable, but the type of <i>animal_1</i> is a variable.</li>\n    \n    <li data-component="answer"  id="e25_1_4_opt_b">A string</li><li data-component="feedback">Incorrect. The value of <i>animal_1</i> is a string, however, <i>animal_1</i> is a variable assigned to that value.</li>\n    \n    <li data-component="answer"  id="e25_1_4_opt_c">A function</li><li data-component="feedback">Incorrect. A function performs an action on variables and returns some result.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_1_4_opt_d">A variable</li><li data-component="feedback">Correct. <i>animal_1</i> is a variable with a string as its value.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.4",
                  optional: false,
                  description: "Which of the following is *animal_1* an example of?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_5",
                data: {
                  id: 27025,
                  base_course: "StudentCSP",
                  name: "e25_1_5",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.5" data-multipleanswers="false"  id="e25_1_5"  style="visibility: hidden;">\n    <p>Which of the following are mutable?</p>\n\n    <li data-component="answer"  id="e25_1_5_opt_a">strings</li><li data-component="feedback">Incorrect. Strings are immutable.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_1_5_opt_b">lists</li><li data-component="feedback">Correct. Lists can be changed by indexing and reassigning the value of that index.</li>\n    \n    <li data-component="answer"  id="e25_1_5_opt_c">integers</li><li data-component="feedback">Incorrect. Integers are immutable, but mathematical functions can be applied to change their values.</li>\n    \n    <li data-component="answer"  id="e25_1_5_opt_d">booleans</li><li data-component="feedback">Incorrect. Booleans have the value of either True or False.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.5",
                  optional: false,
                  description: "Which of the following are mutable?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_6",
                data: {
                  id: 27026,
                  base_course: "StudentCSP",
                  name: "e25_1_6",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.6" data-multipleanswers="false"  id="e25_1_6"  style="visibility: hidden;">\n    <p>What describes the process of searching data sets for incomplete data records to process?</p>\n\n    <li data-component="answer"  id="e25_1_6_opt_a">Classifying</li><li data-component="feedback">Incorrect. This process is not called Classifying.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_1_6_opt_b">Cleaning</li><li data-component="feedback">Correct. Cleaning is in fact the process of searching data sets for incomplete data records.</li>\n    \n    <li data-component="answer"  id="e25_1_6_opt_c">Clustering</li><li data-component="feedback">Incorrect. This is not the definition of Clustering.</li>\n    \n    <li data-component="answer"  id="e25_1_6_opt_d">Filtering</li><li data-component="feedback">Incorrect. Filtering often refers to choosing data with specific characteristics.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.6",
                  optional: false,
                  description:
                    "What describes the process of searching data sets for incomplete data records to",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_7",
                data: {
                  id: 27027,
                  base_course: "StudentCSP",
                  name: "e25_1_7",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.7" data-multipleanswers="false"  id="e25_1_7"  style="visibility: hidden;">\n    <p>Which of the following is <em>not</em> a legal variable name?</p>\n\n    <li data-component="answer"  id="e25_1_7_opt_a">_a1SteakSauce</li><li data-component="feedback">Incorrect. Names of variables MUST start with a letter or an underscore (_).</li>\n    \n    <li data-component="answer"  id="e25_1_7_opt_b">My_name</li><li data-component="feedback">Incorrect. This is a legal variable. It does not start with a number or contain any spaces.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_1_7_opt_c">1more-try</li><li data-component="feedback">Correct. Legal variable names must start with a letter or underscore, can contain but not start with a digit, and cannot be a Python keyword.</li>\n    \n    <li data-component="answer"  id="e25_1_7_opt_d">LOL</li><li data-component="feedback">Incorrect. This is a legal variable name.</li>\n    \n    <li data-component="answer"  id="e25_1_7_opt_e">alotOfexamStuff</li><li data-component="feedback">Incorrect. This is a legal variable.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.7",
                  optional: false,
                  description: "Which of the following is *not* a legal variable name?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_8",
                data: {
                  id: 27028,
                  base_course: "StudentCSP",
                  name: "e25_1_8",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.8" data-multipleanswers="false"  id="e25_1_8"  style="visibility: hidden;">\n    <p>What will the above code print?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>result ← 1/4\nDISPLAY (result)\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="e25_1_8_opt_a">.25</li><li data-component="feedback">Correct. In Python code, pseudo code as well, a decimal value will be returned from an integer calculation. Note that in older Python code, it would have printed 0. In other languages as well, the code will return the number just before the decimal.</li>\n    \n    <li data-component="answer"  id="e25_1_8_opt_b">0</li><li data-component="feedback">Incorrect. Because we are applying Python 3.0, the code will return a decimal.</li>\n    \n    <li data-component="answer"  id="e25_1_8_opt_c">1/4</li><li data-component="feedback">Incorrect. The code will calculate the value of a fraction.</li>\n    \n    <li data-component="answer"  id="e25_1_8_opt_d">.2</li><li data-component="feedback">Incorrect. The value of 1/4 is .25, not .2 or .20.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.8",
                  optional: false,
                  description: "What will the above code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_9",
                data: {
                  id: 27029,
                  base_course: "StudentCSP",
                  name: "e25_1_9",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.9" data-multipleanswers="false"  id="e25_1_9"  style="visibility: hidden;">\n    <p>What is the value of <em>Product</em>?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>Mid ← 8\nRight ← 10\nLeft ← 4\nProduct ← Right *((Right+Left)+ Mid)\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e25_1_9_opt_a">122</li><li data-component="feedback">Incorrect. Based on the order of operations, be sure to start with the inmost parentheses.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_1_9_opt_b">220</li><li data-component="feedback">Correct. The expression will begin by adding <i>Right</i> + <i>Left</i> inside the parentheses then move to the outer parentheses to add Mid to the sum of <i>Right</i> + <i>Left</i>. The entire sum within the outer parentheses will then be multiplied by <i>Right</i>.</li>\n    \n    <li data-component="answer"  id="e25_1_9_opt_c">420</li><li data-component="feedback">Incorrect. Remember to follow the order of operations.</li>\n    \n    <li data-component="answer"  id="e25_1_9_opt_d">0</li><li data-component="feedback">Incorrect. The product is not 0. Remember to follow the order of operations.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.9",
                  optional: false,
                  description: "What is the value of *Product*?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_10",
                data: {
                  id: 27030,
                  base_course: "StudentCSP",
                  name: "e25_1_10",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.10" data-multipleanswers="false"  id="e25_1_10"  style="visibility: hidden;">\n    <p>How do the World Wide Web and the Internet work together?</p>\n\n    <li data-component="answer"  id="e25_1_10_opt_a">They are the same.</li><li data-component="feedback">Incorrect. The Web and the Internet are not the same. The Internet is a global computer network consisting of interconnected networks. The Web is an information system on the Internet that allows documents to be connected to one another.</li>\n    \n    <li data-component="answer"  id="e25_1_10_opt_b">The Internet cannot search using user-specified queries, the Web can.</li><li data-component="feedback">Incorrect. The Internet can search user-specified queries.</li>\n    \n    <li data-component="answer"  id="e25_1_10_opt_c">The Internet uses the Web to connect devices to share data.</li><li data-component="feedback">Incorrect. The Web is a system on the Internet that connects documents to one another.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_1_10_opt_d">The Web uses HTTP to share computational artifacts using the Internet.</li><li data-component="feedback">Correct. This is true of the World Wide Web.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.10",
                  optional: false,
                  description: "How do the World Wide Web and the Internet work together?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_11",
                data: {
                  id: 27031,
                  base_course: "StudentCSP",
                  name: "e25_1_11",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.11" data-multipleanswers="false"  id="e25_1_11"  style="visibility: hidden;">\n    <p>Which of the following is a main advantage for a company placing their data in the cloud?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e25_1_11_opt_a">Everyone with access can reach it at any time.</li><li data-component="feedback">Correct. Using cloud computing refers to storing and accessing information using the Internet rather than one\'s hard drive. It allows more than one computer to access it.</li>\n    \n    <li data-component="answer"  id="e25_1_11_opt_b">The cloud keeps their information private from other companies.</li><li data-component="feedback">Incorrect. Cloud computing systems can keep information private, however, that is not a main advantage of using it.</li>\n    \n    <li data-component="answer"  id="e25_1_11_opt_c">The cloud blocks all information from its employees.</li><li data-component="feedback">Incorrect. Advantages of cloud computing do the exact opposite.</li>\n    \n    <li data-component="answer"  id="e25_1_11_opt_d">Half of the company’s data can be transferred to other locations to reduce demand on servers.</li><li data-component="feedback">Incorrect. This is not a main advantage of cloud computing systems for businesses.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.11",
                  optional: false,
                  description:
                    "Which of the following is a main advantage for a company placing their data in t",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_12",
                data: {
                  id: 27032,
                  base_course: "StudentCSP",
                  name: "e25_1_12",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.12" data-multipleanswers="false"  id="e25_1_12"  style="visibility: hidden;">\n    <p>What will the following code print out?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>num ← 4 MOD 2\nDISPLAY (num)\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e25_1_12_opt_a">2</li><li data-component="feedback">Incorrect. 4 is divisible by 2, and 4/2 = 2, but MOD will produce the remainder value of 4/2.</li>\n    \n    <li data-component="answer"  id="e25_1_12_opt_b">4</li><li data-component="feedback">Incorrect. The remainder of 4/2 is not 4.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_1_12_opt_c">0</li><li data-component="feedback">Correct. Because 4 is divisible by 2, there is no remainder.</li>\n    \n    <li data-component="answer"  id="e25_1_12_opt_d">None</li><li data-component="feedback">Incorrect. The answer is not None. MOD will return an integer.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.12",
                  optional: false,
                  description: "What will the following code print out?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_13",
                data: {
                  id: 27033,
                  base_course: "StudentCSP",
                  name: "e25_1_13",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.13" data-multipleanswers="false"  id="e25_1_13"  style="visibility: hidden;">\n    <p>Use the following code for questions 13 and 14.</p>\n<p>What is the value of <em>gallons</em>?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>distance ← 100.0\nmpg ← 20.0\ngallons ← distance / mpg\ncostPerGallon ← 3.00\ncostTrip ← gallons * costPerGallon\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e25_1_13_opt_a">0.5</li><li data-component="feedback">Incorrect. 100 divided by 20 is 5.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_1_13_opt_b">5.0</li><li data-component="feedback">Correct. Because they are float types, the value of 100.0/20.0 is equal to 5.0.</li>\n    \n    <li data-component="answer"  id="e25_1_13_opt_c">15.0</li><li data-component="feedback">Incorrect. 100 divided by 20 is not 15.</li>\n    \n    <li data-component="answer"  id="e25_1_13_opt_d">20</li><li data-component="feedback">Incorrect. 100 divided by 20 is not 20. The value of a float divided by a float is also a float.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.13",
                  optional: false,
                  description: "Use the following code for questions 13 and 14.",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_14",
                data: {
                  id: 27034,
                  base_course: "StudentCSP",
                  name: "e25_1_14",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.14" data-multipleanswers="false"  id="e25_1_14"  style="visibility: hidden;">\n    <p>What is the value of <em>costTrip</em>?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e25_1_14_opt_a">15.0</li><li data-component="feedback">Correct. The value of <i>gallons</i> is 5.0, the value of <i>costPerGallon</i> is 3.00. Therefore, <i>costTrip</i> = 15.0.</li>\n    \n    <li data-component="answer"  id="e25_1_14_opt_b">5.0</li><li data-component="feedback">Incorrect. A float multiplied by a float is a float.</li>\n    \n    <li data-component="answer"  id="e25_1_14_opt_c">15.0</li><li data-component="feedback">Incorrect. The value of <i>costTrip</i> is the product of <i>gallons</i> multiplied by <i>costPerGallon</i>.</li>\n    \n    <li data-component="answer"  id="e25_1_14_opt_d">20</li><li data-component="feedback">Incorrect. The value of <i>costTrip</i> is the product of <i>gallons</i> multiplied by <i>costPerGallon</i>.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.14",
                  optional: false,
                  description: "What is the value of *costTrip*?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_1_15",
                data: {
                  id: 27035,
                  base_course: "StudentCSP",
                  name: "e25_1_15",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.1.15" data-multipleanswers="false"  id="e25_1_15"  style="visibility: hidden;">\n    <p>What shape will the turtle function return?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>def square(turtle):\n  turtle.forward(100)\n  turtle.right(90)\n  turtle.forward(100)\n  turtle.right(90)\n  turtle.forward(100)\n  turtle.right(90)\n  turtle.forward(100)\n  turtle.right(90)\n  return “What a fast turtle!”\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e25_1_15_opt_a">\'What a fast turtle!\'</li><li data-component="feedback">Incorrect. The return value of a function will not be printed unless in a print statement.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_1_15_opt_b">A square</li><li data-component="feedback">Correct. This function creates a square. Turtles start facing East.</li>\n    \n    <li data-component="answer"  id="e25_1_15_opt_c">A turtle</li><li data-component="feedback">Incorrect. This function does not create a turtle shape.</li>\n    \n    <li data-component="answer"  id="e25_1_15_opt_d">A triangle</li><li data-component="feedback">Incorrect. Write out the function. The turtle starts facing East, moves forward 100, turns right and does it again three more times.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_1",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.1.15",
                  optional: false,
                  description: "What shape will the turtle function return?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "25. Chapter 25 - UNTIMED PRACTICE QUESTIONS/25.1 Set #1",
                data: {
                  id: 27051,
                  base_course: "StudentCSP",
                  name: "25. Chapter 25 - UNTIMED PRACTICE QUESTIONS/25.1 Set #1",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_1",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam25_2",
            data: {
              title: "25.2 Set #2",
              num: 200,
              chapter: "CSPUntimedPracticeQuestions",
              subchapter: "exam25_2",
              id: 27052,
              numQuestions: 16
            },
            children: [
              {
                key: "e25_2_1",
                data: {
                  id: 27036,
                  base_course: "StudentCSP",
                  name: "e25_2_1",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.1" data-multipleanswers="false"  id="e25_2_1"  style="visibility: hidden;">\n    <p>What will the following code print?</p>\n<p>PROCEDURE counter(lst):</p>\n<blockquote>\n<div><p>count ← 0</p>\n<p>FOR EACH item IN lst:</p>\n<blockquote>\n<div><p>{\ncount ← count + item\n}</p>\n</div></blockquote>\n<p>RETURN (count)</p>\n</div></blockquote>\n<p>new_list ← [1,2,3,4]</p>\n<p>run_counter ← counter(new_list)</p>\n<p>DISPLAY (run_counter)</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e25_2_1_opt_a">10</li><li data-component="feedback">Correct. PROCEDURE counter(lst) is called on new_list and adds together its values.</li>\n    \n    <li data-component="answer"  id="e25_2_1_opt_b">[1,2,3,4]</li><li data-component="feedback">Incorrect. This is what is assigned to the variable new_list.</li>\n    \n    <li data-component="answer"  id="e25_2_1_opt_c">4</li><li data-component="feedback">Incorrect. This is the final value in new_list.</li>\n    \n    <li data-component="answer"  id="e25_2_1_opt_d">None</li><li data-component="feedback">Incorrect. The value of run_counter is what is returned from count(new_list).</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.1",
                  optional: false,
                  description: "What will the following code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_2",
                data: {
                  id: 27037,
                  base_course: "StudentCSP",
                  name: "e25_2_2",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.2" data-multipleanswers="false"  id="e25_2_2"  style="visibility: hidden;">\n    <p>Which of the following is NOT why we stop at 100 in the following code?</p>\n<p>sum ← 0</p>\n<p>numbers ← RANGE(0,101,2)</p>\n<p>FOR EACH number IN numbers:</p>\n<blockquote>\n<div><p>{\nsum ← sum + number\n}</p>\n</div></blockquote>\n<p>DISPLAY(sum)</p>\n\n    <li data-component="answer"  id="e25_2_2_opt_a">Because we started at 0.</li><li data-component="feedback">Incorrect. Since we start at 0, we are counting by even numbers with a step of 2.</li>\n    \n    <li data-component="answer"  id="e25_2_2_opt_b">Because the range only extends to 101.</li><li data-component="feedback">Incorrect. Since the range extends to 101, the last number we use is 100.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_2_opt_c">Because the computer only understands 1s and 0s.</li><li data-component="feedback">Correct. Binary code is not relevant to why this code stops at 100.</li>\n    \n    <li data-component="answer"  id="e25_2_2_opt_d">Because we are using a step of 2.</li><li data-component="feedback">Incorrect. Since we start at 0 and use a step of 2, we are counting by even numbers up to 101.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.2",
                  optional: false,
                  description:
                    "Which of the following is NOT why we stop at 100 in the following code?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_3",
                data: {
                  id: 27038,
                  base_course: "StudentCSP",
                  name: "e25_2_3",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.3" data-multipleanswers="false"  id="e25_2_3"  style="visibility: hidden;">\n    <p>Which of the following will result in an infinite loop?</p>\n<p>x ← “heLLo”</p>\n<p>while x[2] == ’L’:</p>\n<blockquote>\n<div><p>DISPLAY(x)</p>\n<p>x ← x.split(‘h’)</p>\n</div></blockquote>\n<p>(B)</p>\n<p>my_num ← 6</p>\n<p>while my_num ≠ 0:</p>\n<blockquote>\n<div><p>DISPLAY(“Hello World”)</p>\n<p>my_num ← my_num % 2</p>\n</div></blockquote>\n<p>(C)</p>\n<p>counter ← 10</p>\n<p>while counter &gt; 0:</p>\n<blockquote>\n<div><p>DISPLAY(counter)</p>\n<p>counter ← counter + 1</p>\n</div></blockquote>\n<p>(D)</p>\n<p>x ← 5</p>\n<p>while x &gt; 0:</p>\n<blockquote>\n<div><p>DISPLAY(x)</p>\n<p>x ← x - 1</p>\n</div></blockquote>\n<p>DISPLAY(“x is now” + x)</p>\n\n    <li data-component="answer"  id="e25_2_3_opt_a"></li><li data-component="feedback">Incorrect. After the .split() function, the while loop will break.</li>\n    \n    <li data-component="answer"  id="e25_2_3_opt_b"></li><li data-component="feedback">Incorrect. The remainder of 6 divided by 2 is equal to 0 and the loop will break.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_3_opt_c"></li><li data-component="feedback">Correct. The variable counter begins at a value greater than 0 and continues to increase which leads to an infinite loop.</li>\n    \n    <li data-component="answer"  id="e25_2_3_opt_d"></li><li data-component="feedback">Incorrect. The program will eventually end since x is subtracted by 1 each time through the loop.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.3",
                  optional: false,
                  description: "Which of the following will result in an infinite loop?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_4",
                data: {
                  id: 27039,
                  base_course: "StudentCSP",
                  name: "e25_2_4",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.4" data-multipleanswers="false"  id="e25_2_4"  style="visibility: hidden;">\n    <p>What number should be added in the blank to make the following function print the number 6?</p>\n<p>x ← 3</p>\n<p>i ← 0</p>\n<p>while i &lt; 3:</p>\n<blockquote>\n<div><p>x ← i*___</p>\n<p>i ← i + 1</p>\n</div></blockquote>\n<p>DISPLAY(x)</p>\n\n    <li data-component="answer"  id="e25_2_4_opt_a">4</li><li data-component="feedback">Incorrect. Variable x will never equal 6 if 4 is added in the blank.</li>\n    \n    <li data-component="answer"  id="e25_2_4_opt_b">2</li><li data-component="feedback">Incorrect. Variable x will never equal 6 if 2 is added in the blank.</li>\n    \n    <li data-component="answer"  id="e25_2_4_opt_c">i</li><li data-component="feedback">Incorrect. Variable x will never equal 6 if i is added in the blank.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_4_opt_d">3</li><li data-component="feedback">Correct. After two times through the loop, variable i will equal 2 and it will be multiplied by 3 which equals 6.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.4",
                  optional: false,
                  description:
                    "What number should be added in the blank to make the following function print th",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_5",
                data: {
                  id: 27040,
                  base_course: "StudentCSP",
                  name: "e25_2_5",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.5" data-multipleanswers="false"  id="e25_2_5"  style="visibility: hidden;">\n    <p>What will the following code print?</p>\n<p>newS ← “?”</p>\n<p>phrase ← ”Where are you going with that?”</p>\n<p>for EACH item in phrase:</p>\n<blockquote>\n<div><p>{ newS ← newS + item }</p>\n</div></blockquote>\n<p>DISPLAY(newS)</p>\n\n    <li data-component="answer"  id="e25_2_5_opt_a">"Where are you going with that?"</li><li data-component="feedback">Incorrect. We are adding onto the existing value of newS which is "?", so newS will begin with a "?".</li>\n    \n    <li data-component="answer"  id="e25_2_5_opt_b">Nothing</li><li data-component="feedback">Incorrect. newS has a value, therefore something will display.</li>\n    \n    <li data-component="answer"  id="e25_2_5_opt_c">"?"</li><li data-component="feedback">Incorrect. "? is the initial value of the variable newS".</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_5_opt_d">"?Where are you going with that?"</li><li data-component="feedback">Correct. The code iterates through the string phrase and adds each character in the string to the variable newS which is initially "?".</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.5",
                  optional: false,
                  description: "What will the following code print?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_6",
                data: {
                  id: 27041,
                  base_course: "StudentCSP",
                  name: "e25_2_6",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.6" data-multipleanswers="false"  id="e25_2_6"  style="visibility: hidden;">\n    <p>Refer to the code below. Suppose someone wants to test this. When they reach line 3, they enter “5.” What will happen?</p>\n<p>Line 1: x ← 1</p>\n<p>Line 2: DISPLAY(x)</p>\n<p>Line 3: x ← INPUT()</p>\n<p>Line 4: DISPLAY(x)</p>\n\n    <li data-component="answer"  id="e25_2_6_opt_a">The following output occurs: 1x</li><li data-component="feedback">Incorrect. Assigning a value of 1 to variable x does not change its value to 1x.</li>\n    \n    <li data-component="answer"  id="e25_2_6_opt_b">An error occurs. A person could use the INPUT() function like this, but nothing is entered into the INPUT() function, so nothing would print out.</li><li data-component="feedback">Incorrect. This is not true. "5" is entered into the INPUT() function .</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_6_opt_c">The following output occurs: 1 5</li><li data-component="feedback">Correct. When x is displayed in line 2, its value is 1. When x is displayed in line 4, its value is 5.</li>\n    \n    <li data-component="answer"  id="e25_2_6_opt_d">An error occurs. You cannot display the value of variables in programming.</li><li data-component="feedback">Incorrect. This is false. You can displayed the value of variables in programming.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.6",
                  optional: false,
                  description:
                    "Refer to the code below. Suppose someone wants to test this. When they reach lin",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_7",
                data: {
                  id: 27042,
                  base_course: "StudentCSP",
                  name: "e25_2_7",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.7" data-multipleanswers="false"  id="e25_2_7"  style="visibility: hidden;">\n    <p>Tucker is writing his first program. He wants the program to say “hey” to him. Below is an overview of what he hopes the program will do:</p>\n<ol class="arabic simple">\n<li><p>Display “Please enter your name.”</p></li>\n<li><p>The user enters in their name: TUCKER</p></li>\n<li><p>The computer displays: “Hey TUCKER”.</p></li>\n</ol>\n<p>Which of the following programs will do what Tucker wants?</p>\n<p>(A)</p>\n<p>x ←  INPUT()</p>\n<p>DISPLAY(x)</p>\n<p>DISPLAY(“Hey”)</p>\n<p>DISPLAY(“Please enter your name.”)</p>\n<p>(B)</p>\n<p>DISPLAY(“Please enter your name.”)</p>\n<p>x ← INPUT()</p>\n<p>DISPLAY(“Hey”)</p>\n<p>DISPLAY(x)</p>\n<p>(C)</p>\n<p>DISPLAY(“Hey”)</p>\n<p>x ← INPUT()</p>\n<p>DISPLAY(“Please enter your name.”)</p>\n<p>DISPLAY(x)</p>\n<p>(D)</p>\n<p>DISPLAY(“Please enter your name.”)</p>\n<p>x ← INPUT()</p>\n<p>DISPLAY(x)</p>\n<p>DISPLAY(“Tucker”)</p>\n\n    <li data-component="answer"  id="e25_2_7_opt_a"></li><li data-component="feedback">Incorrect. This code will display "Tucker Hey Please enter your name".</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_7_opt_b"></li><li data-component="feedback">Correct. This code will ask to enter your name and store it in variable x. Then, will display Hey Tucker.</li>\n    \n    <li data-component="answer"  id="e25_2_7_opt_c"></li><li data-component="feedback">Incorrect. This code will display "Hey Please enter your name Tucker".</li>\n    \n    <li data-component="answer"  id="e25_2_7_opt_d"></li><li data-component="feedback">Incorrect. This code will display "Tucker Tucker".</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.7",
                  optional: false,
                  description:
                    "Tucker is writing his first program. He wants the program to say “hey” to him. B",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_8",
                data: {
                  id: 27043,
                  base_course: "StudentCSP",
                  name: "e25_2_8",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.8" data-multipleanswers="false"  id="e25_2_8"  style="visibility: hidden;">\n    <p>Given two variables, num1 and num2, which of the following would mean that both num1 and num2 are positive integers?</p>\n\n    <li data-component="answer"  id="e25_2_8_opt_a">(num1 = num2)</li><li data-component="feedback">Incorrect. The two variables can be equal to each other and still be negative integers.</li>\n    \n    <li data-component="answer"  id="e25_2_8_opt_b">(num1 = num2) OR (num1 ≠ num2)</li><li data-component="feedback">Incorrect. Regardless of whether the two variables are equal or not equal to one another, they can still be negative.</li>\n    \n    <li data-component="answer"  id="e25_2_8_opt_c">(num1 = num2) AND (num1<0)</li><li data-component="feedback">Incorrect. The two variables would both be negative in this case.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_8_opt_d">(num1 = num2) AND (num2>0)</li><li data-component="feedback">Correct. If num1 is equal to num2 and num2 is greater than 0, then both values must be positive.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.8",
                  optional: false,
                  description:
                    "Given two variables, num1 and num2, which of the following would mean that both ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_9",
                data: {
                  id: 27044,
                  base_course: "StudentCSP",
                  name: "e25_2_9",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.9" data-multipleanswers="false"  id="e25_2_9"  style="visibility: hidden;">\n    <p>Consider the code below.</p>\n<p>IF(freshman)</p>\n<blockquote>\n<div><p>{ DISPLAY(“I am a freshman.”) }</p>\n</div></blockquote>\n<p>If freshman is True, what is displayed?</p>\n\n    <li data-component="answer"  id="e25_2_9_opt_a">DISPLAY(“I am a freshman.”)</li><li data-component="feedback">Incorrect. Only what is inside the quotations in the DISPLAY function gets displayed.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_9_opt_b">“I am a freshman.”</li><li data-component="feedback">Correct. The text in quotations inside the DISPLAY function gets displayed when called on.</li>\n    \n    <li data-component="answer"  id="e25_2_9_opt_c">DISPLAY(freshman)</li><li data-component="feedback">Incorrect. The variable freshman is never called on in the DISPLAY function in this code.</li>\n    \n    <li data-component="answer"  id="e25_2_9_opt_d">Nothing will print out.</li><li data-component="feedback">Incorrect. Nothing would print if freshman were not True.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.9",
                  optional: false,
                  description: "Consider the code below.",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_10",
                data: {
                  id: 27045,
                  base_course: "StudentCSP",
                  name: "e25_2_10",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.10" data-multipleanswers="false"  id="e25_2_10"  style="visibility: hidden;">\n    <p>Consider the code below.</p>\n<p>IF(freshman)</p>\n<blockquote>\n<div><p>{ DISPLAY(“I am a freshman.”) }</p>\n</div></blockquote>\n<p>ELSE</p>\n<blockquote>\n<div><p>{ DISPLAY(“I am not a freshman.”)}</p>\n</div></blockquote>\n<p>If the variable freshman is false, what is displayed?</p>\n\n    <li data-component="answer"  id="e25_2_10_opt_a">“I am a freshman.”</li><li data-component="feedback">Incorrect. This would print if freshman were True.</li>\n    \n    <li data-component="answer"  id="e25_2_10_opt_b">Nothing is displayed.</li><li data-component="feedback">Incorrect. Nothing would display if there were no ELSE clause.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_10_opt_c">"I am not a freshman"</li><li data-component="feedback">Correct. Since freshman is False and there is an ELSE clause, the block after the ELSE is run.</li>\n    \n    <li data-component="answer"  id="e25_2_10_opt_d">DISPLAY("I am not a freshman")</li><li data-component="feedback">Incorrect. Only the text inside the quotations in the DISPLAY function is displayed.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.10",
                  optional: false,
                  description: "Consider the code below.",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_11",
                data: {
                  id: 27046,
                  base_course: "StudentCSP",
                  name: "e25_2_11",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.11" data-multipleanswers="false"  id="e25_2_11"  style="visibility: hidden;">\n    <p>Consider the code below.</p>\n<p>IF(freshman)</p>\n<blockquote>\n<div><p>{ DISPLAY(“I am a freshman.”) }</p>\n</div></blockquote>\n<p>ELSE</p>\n<blockquote>\n<div><p>IF(sophomore)</p>\n<blockquote>\n<div><p>{ DISPLAY(“I am a sophomore”) }</p>\n</div></blockquote>\n<p>ELSE</p>\n<blockquote>\n<div><p>{ DISPLAY(“Who knows what I am?”) }</p>\n</div></blockquote>\n</div></blockquote>\n<p>If the variable sophomore is false, what is displayed?</p>\n\n    <li data-component="answer"  id="e25_2_11_opt_a">“I am a sophomore.”</li><li data-component="feedback">Incorrect. Sophomore is False, so this would not be displayed.</li>\n    \n    <li data-component="answer"  id="e25_2_11_opt_b">"I am not a freshman"</li><li data-component="feedback">Incorrect. We do not know if freshman is True, so we cannot say whether this would be displayed.</li>\n    \n    <li data-component="answer"  id="e25_2_11_opt_c">"Who knows what I am?"</li><li data-component="feedback">Incorrect. We do not know if freshman is True, so we cannot say whether this would be displayed.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_11_opt_d">It is impossible to tell with the given information.</li><li data-component="feedback">Correct. Since we do not know whether freshman is True, we cannot say whether the code block under freshman is run or if the ELSE statement after sophomore will be executed.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.11",
                  optional: false,
                  description: "Consider the code below.",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_12",
                data: {
                  id: 27047,
                  base_course: "StudentCSP",
                  name: "e25_2_12",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.12" data-multipleanswers="false"  id="e25_2_12"  style="visibility: hidden;">\n    <p>Consider the code below.</p>\n<p>IF(freshman)</p>\n<blockquote>\n<div><p>{ DISPLAY(“I am a freshman.”) }</p>\n</div></blockquote>\n<p>ELSE</p>\n<blockquote>\n<div><p>IF(sophomore)</p>\n<blockquote>\n<div><p>{ DISPLAY(“I am a sophomore”) }</p>\n</div></blockquote>\n<p>ELSE</p>\n<blockquote>\n<div><p>{ DISPLAY(“Who knows what I am?”) }</p>\n</div></blockquote>\n</div></blockquote>\n<p>If variables freshman and sophomore are false, what is displayed?</p>\n\n    <li data-component="answer"  id="e25_2_12_opt_a">“I am a sophomore.”</li><li data-component="feedback">Incorrect.  Sophomore is False, so this would not be displayed.</li>\n    \n    <li data-component="answer"  id="e25_2_12_opt_b">"I am not a freshman"</li><li data-component="feedback">Incorrect.  Freshman is False, so this would not be displayed.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_12_opt_c">"Who knows what I am?"</li><li data-component="feedback">Correct. Since we know that freshman is and sophomore are False, the ELSE block after sophomore is executed.</li>\n    \n    <li data-component="answer"  id="e25_2_12_opt_d">It is impossible to tell with the given information.</li><li data-component="feedback">Incorrect. Since we know that freshman is and sophomore are False, the ELSE block after sophomore is executed.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.12",
                  optional: false,
                  description: "Consider the code below.",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_13",
                data: {
                  id: 27048,
                  base_course: "StudentCSP",
                  name: "e25_2_13",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.13" data-multipleanswers="false"  id="e25_2_13"  style="visibility: hidden;">\n    <p>Consider the code below.</p>\n<p>IF(freshman)</p>\n<blockquote>\n<div><p>{ DISPLAY(“I am a freshman.”) }</p>\n</div></blockquote>\n<p>ELSE</p>\n<blockquote>\n<div><p>IF(sophomore)</p>\n<blockquote>\n<div><p>{ DISPLAY(“I am a sophomore”) }</p>\n</div></blockquote>\n<p>ELSE</p>\n<blockquote>\n<div><p>{ DISPLAY(“Who knows what I am?”) }</p>\n</div></blockquote>\n</div></blockquote>\n<p>If freshman is False and sophomore is True, what is displayed?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e25_2_13_opt_a">“I am a sophomore.”</li><li data-component="feedback">Correct. Sophomore is True, so the code block after is executed.</li>\n    \n    <li data-component="answer"  id="e25_2_13_opt_b">"I am not a freshman"</li><li data-component="feedback">Incorrect. Freshman is False, so this would not be displayed.</li>\n    \n    <li data-component="answer"  id="e25_2_13_opt_c">"Who knows what I am?"</li><li data-component="feedback">Incorrect. Since we know that freshman is False and sophomore are True, the ELSE block after sophomore is not executed.</li>\n    \n    <li data-component="answer"  id="e25_2_13_opt_d">It is impossible to tell with the given information.</li><li data-component="feedback">Incorrect. Sophomore is True, so the code block after is executed.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.13",
                  optional: false,
                  description: "Consider the code below.",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_14",
                data: {
                  id: 27049,
                  base_course: "StudentCSP",
                  name: "e25_2_14",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.14" data-multipleanswers="false"  id="e25_2_14"  style="visibility: hidden;">\n    <p>Consider the following code:</p>\n<p>x ← 2</p>\n<p>figure ← 0</p>\n<p>REPEAT UNTIL figure &gt; 15</p>\n<p>{</p>\n<blockquote>\n<div><p>figure ← 3 * x</p>\n<p>x  ← x + 1</p>\n</div></blockquote>\n<p>}</p>\n<p>DISPLAY(“figure =”)</p>\n<p>DISPLAY(figure)</p>\n<p>DISPLAY(“, x =”)</p>\n<p>DISPLAY(x)</p>\n<p>What is displayed as a result of running the code above?</p>\n\n    <li data-component="answer"  id="e25_2_14_opt_a">figure = 15, x = 6</li><li data-component="feedback">Incorrect. The code runs for 5 periods total. We start in period 0 with fig = 0 and x = 2. The value for x increases by 1 after each period. So, the values for figure are as follows for every period: After period 2, figure = 3 * 3 = 9 and x = 4; after period 3, figure = 3 * 4 = 12 and x = 5; after period 4, figure = 3 * 5 = 15 and x = 6; after period 5, figure = 3 * 6 = 18 and x = 7. The program will stop after period 5 since figure exceeds 15.</li>\n    \n    <li data-component="answer"  id="e25_2_14_opt_b">figure = 18, x = 3</li><li data-component="feedback">Incorrect. The code runs for 5 periods total. We start in period 0 with fig = 0 and x = 2. The value for x increases by 1 after each period. So, the values for figure are as follows for every period: After period 2, figure = 3 * 3 = 9 and x = 4; after period 3, figure = 3 * 4 = 12 and x = 5; after period 4, figure = 3 * 5 = 15 and x = 6; after period 5, figure = 3 * 6 = 18 and x = 7. The program will stop after period 5 since figure exceeds 15.</li>\n    \n    <li data-component="answer"  id="e25_2_14_opt_c">figure = 15, x = 7</li><li data-component="feedback">Incorrect. The code runs for 5 periods total. We start in period 0 with fig = 0 and x = 2. The value for x increases by 1 after each period. So, the values for figure are as follows for every period: After period 2, figure = 3 * 3 = 9 and x = 4; after period 3, figure = 3 * 4 = 12 and x = 5; after period 4, figure = 3 * 5 = 15 and x = 6; after period 5, figure = 3 * 6 = 18 and x = 7. The program will stop after period 5 since figure exceeds 15.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_14_opt_d">figure = 18, x = 7</li><li data-component="feedback">Correct. The code runs for 5 periods total. We start in period 0 with fig = 0 and x = 2. The value for x increases by 1 after each period. So, the values for figure are as follows for every period: After period 2, figure = 3 * 3 = 9 and x = 4; after period 3, figure = 3 * 4 = 12 and x = 5; after period 4, figure = 3 * 5 = 15 and x = 6; after period 5, figure = 3 * 6 = 18 and x = 7. The program will stop after period 5 since figure exceeds 15.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.14",
                  optional: false,
                  description: "Consider the following code:",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_2_15",
                data: {
                  id: 27050,
                  base_course: "StudentCSP",
                  name: "e25_2_15",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.2.15" data-multipleanswers="false"  id="e25_2_15"  style="visibility: hidden;">\n    <p>Consider the following code:</p>\n<p>x ← 1</p>\n<p>figure ← 0</p>\n<p>REPEAT UNTIL figure &gt; 20</p>\n<p>{</p>\n<blockquote>\n<div><p>figure ← 5 * x</p>\n<p>x  ← x + 1</p>\n</div></blockquote>\n<p>}</p>\n<p>DISPLAY(“figure =”)</p>\n<p>DISPLAY(figure)</p>\n<p>DISPLAY(“, x =”)</p>\n<p>DISPLAY(x)</p>\n<p>What is displayed as a result of running the code above?</p>\n\n    <li data-component="answer"  id="e25_2_15_opt_a">figure = 30, x = 6</li><li data-component="feedback">Incorrect. The code runs for 5 periods total. We start in period 0 with fig = 0 and x = 1. The value for x increases by 1 after each period. So, the values for figure are as follows for every period: After period 2, figure = 5 * 2 = 10 and x = 3; after period 3, figure = 5 * 3 = 15 and x = 4; after period 4, figure = 5 * 4 = 20 and x = 5; after period 5, figure = 5 * 5 = 25 and x = 6. The program will stop after period 5 since figure exceeds 20.</li>\n    \n    <li data-component="answer"  id="e25_2_15_opt_b">figure = 20, x = 5</li><li data-component="feedback">Incorrect. The code runs for 5 periods total. We start in period 0 with fig = 0 and x = 1. The value for x increases by 1 after each period. So, the values for figure are as follows for every period: After period 2, figure = 5 * 2 = 10 and x = 3; after period 3, figure = 5 * 3 = 15 and x = 4; after period 4, figure = 5 * 4 = 20 and x = 5; after period 5, figure = 5 * 5 = 25 and x = 6. The program will stop after period 5 since figure exceeds 20.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_2_15_opt_c">figure = 25, x = 6</li><li data-component="feedback">Correct. The code runs for 5 periods total. We start in period 0 with fig = 0 and x = 1. The value for x increases by 1 after each period. So, the values for figure are as follows for every period: After period 2, figure = 5 * 2 = 10 and x = 3; after period 3, figure = 5 * 3 = 15 and x = 4; after period 4, figure = 5 * 4 = 20 and x = 5; after period 5, figure = 5 * 5 = 25 and x = 6. The program will stop after period 5 since figure exceeds 20.</li>\n    \n    <li data-component="answer"  id="e25_2_15_opt_d">figure = 25, x = 5</li><li data-component="feedback">Incorrect. The code runs for 5 periods total. We start in period 0 with fig = 0 and x = 1. The value for x increases by 1 after each period. So, the values for figure are as follows for every period: After period 2, figure = 5 * 2 = 10 and x = 3; after period 3, figure = 5 * 3 = 15 and x = 4; after period 4, figure = 5 * 4 = 20 and x = 5; after period 5, figure = 5 * 5 = 25 and x = 6. The program will stop after period 5 since figure exceeds 20.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_2",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.2.15",
                  optional: false,
                  description: "Consider the following code:",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "25. Chapter 25 - UNTIMED PRACTICE QUESTIONS/25.2 Set #2",
                data: {
                  id: 27052,
                  base_course: "StudentCSP",
                  name: "25. Chapter 25 - UNTIMED PRACTICE QUESTIONS/25.2 Set #2",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_2",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam25_3",
            data: {
              title: "25.3 Set #3",
              num: 300,
              chapter: "CSPUntimedPracticeQuestions",
              subchapter: "exam25_3",
              id: 27522,
              numQuestions: 16
            },
            children: [
              {
                key: "e25_3_1",
                data: {
                  id: 27492,
                  base_course: "StudentCSP",
                  name: "e25_3_1",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.1" data-multipleanswers="false"  id="e25_3_1"  style="visibility: hidden;">\n    <p>A grocery store uses a database to store important statistics. The prices of all items are stored in a list called itemList, which is indexed from 1 to x. The company uses the following program to assign the index of the item in the store that has the highest price to the variable max.</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>i ← 0\nmax ← i + 1\nx ← LENGTH(itemList)\nREPEAT x times\n{\n        i ← i + 1\n        &lt;MISSING CODE&gt;\n}\n</pre></div>\n</div>\n<p>Which of the following code segments can replace &lt;MISSING CODE&gt; so that the program works as intended?</p>\n<p>(A)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>IF(itemList[i] &gt; max)\n\n{\n     max ← itemList[i]\n}\n</pre></div>\n</div>\n<p>(B)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>IF(itemList[i] &gt; itemList[max])\n\n{\n    max ← i\n}\n</pre></div>\n</div>\n<p>(C)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>IF(itemList[i] &lt; itemList[max])\n\n{\n    max ← i\n}\n</pre></div>\n</div>\n<p>(D)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>IF(itemList[i] &gt; itemList[max])\n\n{\n    max ← itemList[i]\n}\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e25_3_1_opt_a"></li><li data-component="feedback">Incorrect. This does not compare two prices -- the variable \'max\' is not a price, it is the index of the current max value.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_3_1_opt_b"></li><li data-component="feedback">Correct. This updates the value of max with \'i\' if it is greater than the previous maximum price.</li>\n    \n    <li data-component="answer"  id="e25_3_1_opt_c"></li><li data-component="feedback">Incorrect. This will not update the value of max with the highest price value.</li>\n    \n    <li data-component="answer"  id="e25_3_1_opt_d"></li><li data-component="feedback">Incorrect. This assigns the price value to the variable max rather than the index value of the list itemList.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.1",
                  optional: false,
                  description:
                    "A grocery store uses a database to store important statistics. The prices of all",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_2",
                data: {
                  id: 27493,
                  base_course: "StudentCSP",
                  name: "e25_3_2",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.2" data-multipleanswers="false"  id="e25_3_2"  style="visibility: hidden;">\n    <p>What does iteration with computer science loops mean?</p>\n\n    <li data-component="answer"  id="e25_3_2_opt_a">Executing code once</li><li data-component="feedback">Incorrect. Iteration with a loop involves repetition, so executing code once is not iteration.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_3_2_opt_b">Repeating a block of code until a condition is met</li><li data-component="feedback">Correct. Iteration repeats one or more statements until a condition is met.</li>\n    \n    <li data-component="answer"  id="e25_3_2_opt_c">Duplicating a section of code multiple times in a program</li><li data-component="feedback">Incorrect. Iterating with loops is a way of preventing you from having to duplicate a section of code multiple times.</li>\n    \n    <li data-component="answer"  id="e25_3_2_opt_d">Debugging code multiple times until it passes testing</li><li data-component="feedback">Incorrect. Debugging involves a person finding errors or "bugs" in their code. Iteration with loops runs a set of code until a condition is met.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.2",
                  optional: false,
                  description: "What does iteration with computer science loops mean?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_3",
                data: {
                  id: 27494,
                  base_course: "StudentCSP",
                  name: "e25_3_3",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.3" data-multipleanswers="false"  id="e25_3_3"  style="visibility: hidden;">\n    <p>Refer to the following code:</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>weight ← 0.5\nIF weight &lt; 1\n { price ← 1.45 }\nIF weight &gt;= 1\n { price ← 1.15 }\ntotal ← weight * price\nDISPLAY(weight)\nDISPLAY(price)\n</pre></div>\n</div>\n<p>What will be printed?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e25_3_3_opt_a">0.5 1.45</li><li data-component="feedback">Correct. Since \'weight\' < 1 is True, \'price\' equals 1.45. Both \'weight\' and \'price\' are being displayed.</li>\n    \n    <li data-component="answer"  id="e25_3_3_opt_b">0.5 0.75</li><li data-component="feedback">Incorrect. Although 0.75 is the value of \'total,\' it is never displayed.</li>\n    \n    <li data-component="answer"  id="e25_3_3_opt_c">0</li><li data-component="feedback">Incorrect. Neither the value of weight nor price -- the two variables being displayed -- are equal to 0.</li>\n    \n    <li data-component="answer"  id="e25_3_3_opt_d">1.45</li><li data-component="feedback">Incorrect. Although price is equal to 1.45, the value of weight is also being displayed by this code.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.3",
                  optional: false,
                  description: "Refer to the following code:",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_4",
                data: {
                  id: 27495,
                  base_course: "StudentCSP",
                  name: "e25_3_4",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.4" data-multipleanswers="false"  id="e25_3_4"  style="visibility: hidden;">\n    <p>Refer to the following code:</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>numItems ← 1\nIF numItems ← 1\n{ message ← &quot;You ordered 1 item” }\nIF numItems &gt; 1\n{ message ← &quot;You ordered &quot; + numItems + &quot; items&quot; }\nDISPLAY(message)\n</pre></div>\n</div>\n<p>What will print if numItems ← -2?</p>\n\n    <li data-component="answer"  id="e25_3_4_opt_a">“You ordered -2 items”</li><li data-component="feedback">Incorrect. There is no code to make "You ordered -2 items" the value of \'message.\'</li>\n    \n    <li data-component="answer"  id="e25_3_4_opt_b">“You ordered 1 item”</li><li data-component="feedback">Incorrect. This would be the value of \'message\' if numItems equaled 1.</li>\n    \n    <li data-component="answer"  id="e25_3_4_opt_c">Nothing will be printed.</li><li data-component="feedback">Incorrect. Variable \'message\' was never assigned a value, so this would result in an error and the code would not run completely.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_3_4_opt_d">You will get an error message.</li><li data-component="feedback">Correct. Variable \'message\' was never assigned a value, so this would result in an error.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.4",
                  optional: false,
                  description: "Refer to the following code:",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_5",
                data: {
                  id: 27496,
                  base_course: "StudentCSP",
                  name: "e25_3_5",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.5" data-multipleanswers="false"  id="e25_3_5"  style="visibility: hidden;">\n    <p>Refer to the following code:</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>numbers ← [-1,0,1]\nFOR EACH item IN numbers:\nIF item &gt; 0:\n  DISPLAY(&quot;positive&quot;)\nELIF item &lt; 0:\n  DISPLAY(“negative”)\nELSE:\n  DISPLAY(“neither”)\n</pre></div>\n</div>\n<p>What will print when this code is run?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e25_3_5_opt_a">negative neither positive</li><li data-component="feedback">Correct. The loop iterates through the three integers in \'numbers\' and displays the proper strings when the IF statements are true.</li>\n    \n    <li data-component="answer"  id="e25_3_5_opt_b">positive</li><li data-component="feedback">Incorrect. \'Positive\' is displayed for the final item in the list, but there are two other items in the list.</li>\n    \n    <li data-component="answer"  id="e25_3_5_opt_c">negative positive</li><li data-component="feedback">Incorrect. This does not account for the 0 in the list.</li>\n    \n    <li data-component="answer"  id="e25_3_5_opt_d">Nothing will print</li><li data-component="feedback">Incorrect. The if and else clauses are satisfied in this code, so there would be an output.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.5",
                  optional: false,
                  description: "Refer to the following code:",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_6",
                data: {
                  id: 27497,
                  base_course: "StudentCSP",
                  name: "e25_3_6",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.6" data-multipleanswers="false"  id="e25_3_6"  style="visibility: hidden;">\n    <p>What is the default direction a turtle object is facing?</p>\n\n    <li data-component="answer"  id="e25_3_6_opt_a">North</li><li data-component="feedback">Incorrect. Though it may seem like a turtle should start by facing north, it starts facing a different direction.</li>\n    \n    <li data-component="answer"  id="e25_3_6_opt_b">South</li><li data-component="feedback">Incorrect. The default direction of a turtle is facing east.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_3_6_opt_c">East</li><li data-component="feedback">Correct. The default direction of a turtle is facing east.</li>\n    \n    <li data-component="answer"  id="e25_3_6_opt_d">West</li><li data-component="feedback">Incorrect. Think about in which direction you read and write.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.6",
                  optional: false,
                  description: "What is the default direction a turtle object is facing?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_7",
                data: {
                  id: 27498,
                  base_course: "StudentCSP",
                  name: "e25_3_7",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.7" data-multipleanswers="false"  id="e25_3_7"  style="visibility: hidden;">\n    <p>What will print when the following code is run?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>myLst ← [0,5,10,15,20,25]\nFOR EACH item IN myLst[:3] :\n  {       y ← x*2\n  myLst.APPEND(y)   }\nDISPLAY(myLst[4:])\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e25_3_7_opt_a">[0, 5, 10, 20, 25, 0, 10, 20, 30]</li><li data-component="feedback">Incorrect. Look again at which elements are modified in the FOR loop and which items in myLst are displayed in the last line of code.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_3_7_opt_b">[20, 25, 0, 10, 20]</li><li data-component="feedback">Correct. The first three items in \'myLst\' iterate through the loop, are multiplied by 2 and appended to the back of \'myLst.\' Then the list is displayed from the fifth item until the end of the list.</li>\n    \n    <li data-component="answer"  id="e25_3_7_opt_c">[25, 0, 10, 20]</li><li data-component="feedback">Incorrect. This would be correct if myLst[5:] were displayed.</li>\n    \n    <li data-component="answer"  id="e25_3_7_opt_d">[0, 5, 10, 15]</li><li data-component="feedback">Incorrect. This would be correct if you wanted to display myLst[:4] instead of myLst[4:].</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.7",
                  optional: false,
                  description: "What will print when the following code is run?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_8",
                data: {
                  id: 27499,
                  base_course: "StudentCSP",
                  name: "e25_3_8",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.8" data-multipleanswers="false"  id="e25_3_8"  style="visibility: hidden;">\n    <p>New data is available to add to a company’s existing data. The IT director wants to store the new data on the cloud. What is a concern that needs to be addressed before implementing the plan?</p>\n\n    <li data-component="answer"  id="e25_3_8_opt_a">The redundancy of the Internet increasing costs</li><li data-component="feedback">Incorrect. This is not a concern when moving data to the cloud.</li>\n    \n    <li data-component="answer"  id="e25_3_8_opt_b">The cost the ISP will charge to access the cloud</li><li data-component="feedback">Incorrect. An internet service provider will not charge more to access a data cloud.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_3_8_opt_c">The security of the data being transmitted back and forth</li><li data-component="feedback">Correct. One of the main concerns with implementing new data systems for large companies is security.</li>\n    \n    <li data-component="answer"  id="e25_3_8_opt_d">Determining who has access to the data.</li><li data-component="feedback">Incorrect. This is not a main concern and would be up to the discretion of the IT director.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.8",
                  optional: false,
                  description:
                    "New data is available to add to a company’s existing data. The IT director wants",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_9",
                data: {
                  id: 27500,
                  base_course: "StudentCSP",
                  name: "e25_3_9",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.9" data-multipleanswers="false"  id="e25_3_9"  style="visibility: hidden;">\n    <p>Which of the following will evaluate to true?</p>\n<blockquote>\n<div><div class="line-block">\n<div class="line">I. True AND False</div>\n<div class="line">II. False or True</div>\n<div class="line">III. False AND (True or False)</div>\n</div>\n</div></blockquote>\n\n    <li data-component="answer"  id="e25_3_9_opt_a">I</li><li data-component="feedback">Incorrect. This evaluates to False - a statement cannot be True AND False.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_3_9_opt_b">II</li><li data-component="feedback">Correct. The statement can be either True or False which evaluates to True.</li>\n    \n    <li data-component="answer"  id="e25_3_9_opt_c">I and II</li><li data-component="feedback">Incorrect. I evaluates to False.</li>\n    \n    <li data-component="answer"  id="e25_3_9_opt_d">II and III</li><li data-component="feedback">Incorrect. III evaluates to False because a statement cannot be False AND True.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.9",
                  optional: false,
                  description: "Which of the following will evaluate to true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_10",
                data: {
                  id: 27501,
                  base_course: "StudentCSP",
                  name: "e25_3_10",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.10" data-multipleanswers="false"  id="e25_3_10"  style="visibility: hidden;">\n    <p>A student purchases a single-user license of an online textbook and wants to share the textbook with their classmates. Under what conditions is it acceptable for the student to share this textbook?</p>\n\n    <li data-component="answer"  id="e25_3_10_opt_a">If the student shares only three chapters of the textbook with their classmates.</li><li data-component="feedback">Incorrect. A single-user license does not allow you to distribute the text, regardless of how many chapters you share.</li>\n    \n    <li data-component="answer"  id="e25_3_10_opt_b">If the student gets permission from textbook’s editor</li><li data-component="feedback">Incorrect. The editor does not own the rights to the text.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_3_10_opt_c">If the student gets permission from the textbook’s copyright owner</li><li data-component="feedback">Correct. The copyright owner owns the rights to the text.</li>\n    \n    <li data-component="answer"  id="e25_3_10_opt_d">If the textbook is only shared with one other classmate</li><li data-component="feedback">Incorrect. Single-user license implies that the text cannot be shared.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.10",
                  optional: false,
                  description:
                    "A student purchases a single-user license of an online textbook and wants to sha",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_11",
                data: {
                  id: 27502,
                  base_course: "StudentCSP",
                  name: "e25_3_11",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.11" data-multipleanswers="false"  id="e25_3_11"  style="visibility: hidden;">\n    <p>Which of the following would be considered a subdomain of umich.edu according to the guidelines of the Domain Name System (DNS)?</p>\n\n    <li data-component="answer"  id="e25_3_11_opt_a">umich.edu/help</li><li data-component="feedback">Incorrect. This links to a different url in the same web address; it is not a subdomain of umich.edu.</li>\n    \n    <li data-component="answer"  id="e25_3_11_opt_b">umich.edu.subdomain</li><li data-component="feedback">Incorrect. A subdomain does not come after umich.edu in the web address.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_3_11_opt_c">students.umich.edu</li><li data-component="feedback">Correct. A subdomain modifies a domain and comes before the domain in the web address.</li>\n    \n    <li data-component="answer"  id="e25_3_11_opt_d">umich.edu</li><li data-component="feedback">Incorrect. Nothing is modifying the domain umich.edu.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.11",
                  optional: false,
                  description:
                    "Which of the following would be considered a subdomain of umich.edu according to",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_12",
                data: {
                  id: 27503,
                  base_course: "StudentCSP",
                  name: "e25_3_12",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.12" data-multipleanswers="false"  id="e25_3_12"  style="visibility: hidden;">\n    <p>A weatherman record atmospheric data to predict future weather conditions. Suppose that his lab in Detroit takes hourly measurements of air temperature and precipitation in the city for a total period of 12 months. The lab also records the exact time and date for each measurement.</p>\n<p>Which of the following questions about the Detroit’s weather could NOT be accurately answered using only the data collected by the lab?</p>\n\n    <li data-component="answer"  id="e25_3_12_opt_a">How does temperature fluctuate in Detroit from day to night?</li><li data-component="feedback">Incorrect. This data could be recorded since air temperature and time are both measured.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_3_12_opt_b">What is the average annual precipitation?</li><li data-component="feedback">Correct. Data for only one year is recorded, so there is no way to measure average annual precipitation.</li>\n    \n    <li data-component="answer"  id="e25_3_12_opt_c">Is there a correlation between air temperature and precipitation?</li><li data-component="feedback">Incorrect. Since both air temperature and precipitation are recorded, this can be measured.</li>\n    \n    <li data-component="answer"  id="e25_3_12_opt_d">What is the average daily temperature?</li><li data-component="feedback">Incorrect. This can be recorded since the temperature is recorded every day for 12 months.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.12",
                  optional: false,
                  description:
                    "A weatherman record atmospheric data to predict future weather conditions. Suppo",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_13",
                data: {
                  id: 27504,
                  base_course: "StudentCSP",
                  name: "e25_3_13",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.13" data-multipleanswers="false"  id="e25_3_13"  style="visibility: hidden;">\n    <p>A weatherman record atmospheric data to predict future weather conditions. Suppose that his lab in Detroit takes hourly measurements of air temperature and precipitation in the city for a total period of 12 months. The lab also records the exact time and date for each measurement.</p>\n<p>Which of the following questions about the Detroit’s weather could be accurately answered using only the data collected by the lab?</p>\n\n    <li data-component="answer"  id="e25_3_13_opt_a">What is the average time the sun is out each day?</li><li data-component="feedback">Incorrect. Sunrise and sunset times are not recorded.</li>\n    \n    <li data-component="answer"  id="e25_3_13_opt_b">Is there a correlation between precipitation in Detroit and Kalamazoo?</li><li data-component="feedback">Incorrect. Only data from Detroit is recorded.</li>\n    \n    <li data-component="answer"  id="e25_3_13_opt_c">Is there a correlation between daily air temperature and sunrise time?</li><li data-component="feedback">Incorrect. Time of sunrise is not measured by the data.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_3_13_opt_d">During which hour of the day does it rain most on average?</li><li data-component="feedback">Correct. Precipitation and time are recorded, so this could be measured.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.13",
                  optional: false,
                  description:
                    "A weatherman record atmospheric data to predict future weather conditions. Suppo",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_14",
                data: {
                  id: 27505,
                  base_course: "StudentCSP",
                  name: "e25_3_14",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.14" data-multipleanswers="false"  id="e25_3_14"  style="visibility: hidden;">\n    <p>A programmer is writing code to swap two user-input values. The program will ask the user for two inputs and stores them in value1 and value2, then switch the two values. Which of the following correctly does this?</p>\n<p>(A)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>value1 ← INPUT()\n\nvalue2 ← INPUT()\n\nvalue2 ← value1\n\nvalue1 ← value2\n</pre></div>\n</div>\n<p>(B)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>value1 ← INPUT()\n\nvalue2 ← INPUT()\n\ntemp ← value1\n\nvalue2 ← temp\n\nvalue1 ← temp\n</pre></div>\n</div>\n<p>(C)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>value1 ← INPUT()\n\nvalue2 ← INPUT()\n\ntemp ← value1\n\nvalue1 ← value2\n\nvalue 2 ← temp\n</pre></div>\n</div>\n<p>(D)</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>value1 ← INPUT()\n\nvalue2 ← INPUT()\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e25_3_14_opt_a"></li><li data-component="feedback">Incorrect. This will result in value1 and value2 being the same.</li>\n    \n    <li data-component="answer"  id="e25_3_14_opt_b"></li><li data-component="feedback">Incorrect. Close! You DO need a temporary variable, but value1 and value2 will still be the same in this case.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_3_14_opt_c"></li><li data-component="feedback">Correct. By using the variable "temp" you can swap the values of value1 and value2 by storing the original value of value1 in temp.</li>\n    \n    <li data-component="answer"  id="e25_3_14_opt_d"></li><li data-component="feedback">Incorrect. The values are only being assigned here, not being swapped.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.14",
                  optional: false,
                  description:
                    "A programmer is writing code to swap two user-input values. The program will ask",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_3_15",
                data: {
                  id: 27506,
                  base_course: "StudentCSP",
                  name: "e25_3_15",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.3.15" data-multipleanswers="false"  id="e25_3_15"  style="visibility: hidden;">\n    <p>Which of the following algorithms, given a list of integers, require both selection and iteration?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e25_3_15_opt_a">An algorithm that returns the number of elements that are positive.</li><li data-component="feedback">Correct. The algorithm will have to iterate through the list and select the positive integers.</li>\n    \n    <li data-component="answer"  id="e25_3_15_opt_b">An algorithm that returns true if the first element equals the last.</li><li data-component="feedback">Incorrect. The algorithm will only need to select the first and last integers and compare the values.</li>\n    \n    <li data-component="answer"  id="e25_3_15_opt_c">An algorithm that calculates the average of the elements in the list.</li><li data-component="feedback">Incorrect. This only requires iteration since no individual values are selected.</li>\n    \n    <li data-component="answer"  id="e25_3_15_opt_d">An algorithm that swaps the first and second elements in the list.</li><li data-component="feedback">Incorrect. This does not require iteration.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_3",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.3.15",
                  optional: false,
                  description:
                    "Which of the following algorithms, given a list of integers, require both select",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "25. Chapter 25 - UNTIMED PRACTICE QUESTIONS/25.3 Set #3",
                data: {
                  id: 27522,
                  base_course: "StudentCSP",
                  name: "25. Chapter 25 - UNTIMED PRACTICE QUESTIONS/25.3 Set #3",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_3",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          },
          {
            key: "exam25_4",
            data: {
              title: "25.4 Set #4",
              num: 400,
              chapter: "CSPUntimedPracticeQuestions",
              subchapter: "exam25_4",
              id: 27523,
              numQuestions: 16
            },
            children: [
              {
                key: "e25_4_1",
                data: {
                  id: 27507,
                  base_course: "StudentCSP",
                  name: "e25_4_1",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.1" data-multipleanswers="false"  id="e25_4_1"  style="visibility: hidden;">\n    <p>Which of the following is true about linear and binary search?</p>\n\n    <li data-component="answer"  id="e25_4_1_opt_a">Linear search is more efficient for large data sets than binary search.</li><li data-component="feedback">Incorrect. Linear search will generally take longer since it looks at one element at a time.</li>\n    \n    <li data-component="answer"  id="e25_4_1_opt_b">Binary search does not work on ordered lists.</li><li data-component="feedback">Incorrect. Binary search can only be used on ordered sets.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_4_1_opt_c">Linear search looks at one element at a time.</li><li data-component="feedback">Correct. Linear search looks at just one element at a time.</li>\n    \n    <li data-component="answer"  id="e25_4_1_opt_d">Binary search is better for smaller lists.</li><li data-component="feedback">Incorrect. Linear search is generally preferred for smaller data.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.1",
                  optional: false,
                  description: "Which of the following is true about linear and binary search?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_2",
                data: {
                  id: 27508,
                  base_course: "StudentCSP",
                  name: "e25_4_2",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.2" data-multipleanswers="false"  id="e25_4_2"  style="visibility: hidden;">\n    <p>Which of the following statements is NOT true?</p>\n\n    <li data-component="answer"  id="e25_4_2_opt_a">An unsolvable problem cannot be solved using any algorithm.</li><li data-component="feedback">Incorrect. If a problem is unsolvable, not even an algorithm can solve it.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_4_2_opt_b">A solvable problem can be solved using an algorithm.</li><li data-component="feedback">Correct. An algorithm can solve an a solvable problem.</li>\n    \n    <li data-component="answer"  id="e25_4_2_opt_c">Some solvable problems will not run in reasonable time.</li><li data-component="feedback">Incorrect. Some solvable problems will take long to solve with an algorithm and will, therefore, not run in reasonable time.</li>\n    \n    <li data-component="answer"  id="e25_4_2_opt_d">An unsolvable problem can be solved using an algorithm.</li><li data-component="feedback">Incorrect. If a problem is unsolvable, an algorithm will not solve it.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.2",
                  optional: false,
                  description: "Which of the following statements is NOT true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_3",
                data: {
                  id: 27509,
                  base_course: "StudentCSP",
                  name: "e25_4_3",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.3" data-multipleanswers="false"  id="e25_4_3"  style="visibility: hidden;">\n    <p>Which of the following is NOT true about a program?</p>\n\n    <li data-component="answer"  id="e25_4_3_opt_a">Instructions may involve variables which may change or be output from the program.</li><li data-component="feedback">Incorrect. A program can have variables which may be changed or be output by the program.</li>\n    \n    <li data-component="answer"  id="e25_4_3_opt_b">Instructions are processed sequentially.</li><li data-component="feedback">Incorrect. Code in a program is read sequentially line by line.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_4_3_opt_c">A program always has a return value.</li><li data-component="feedback">Correct. A return value is not a necessity for a program.</li>\n    \n    <li data-component="answer"  id="e25_4_3_opt_d">A program automates processes in a computer.</li><li data-component="feedback">Incorrect. A program is an automated process that runs on a computer.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.3",
                  optional: false,
                  description: "Which of the following is NOT true about a program?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_4",
                data: {
                  id: 27510,
                  base_course: "StudentCSP",
                  name: "e25_4_4",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.4" data-multipleanswers="false"  id="e25_4_4"  style="visibility: hidden;">\n    <p>Imagine you want to create a procedure to find and print the smallest item in a list. Take the code below for example:</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>PROCEDURE showMin(aList)\n\n {\n  min ← 0\n\n  FOR EACH item IN aList\n\n   {\n    if (min &gt; item)\n\n     {\n             min ← item\n     }\n   }\n  DISPLAY(“smallest item in list is “ + min)\n }\n</pre></div>\n</div>\n<p>In what situation would this procedure fail to correctly display the minimum?</p>\n\n    <li data-component="answer"  id="e25_4_4_opt_a">In no situation; this procedure works as intended</li><li data-component="feedback">Incorrect. This procedure does not work in every case.</li>\n    \n    <li data-component="answer"  id="e25_4_4_opt_b">In all situations; this procedure will DISPLAY the maximum, not the minimum</li><li data-component="feedback">Incorrect. This code does obtain a minimum value, but fails to do so under certain circumstances.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_4_4_opt_c">If every item in the list is greater than zero</li><li data-component="feedback">Correct. If every item in the list is positive, "min" never gets updated because it is initialized to 0 and every value in the list is being compared to it.</li>\n    \n    <li data-component="answer"  id="e25_4_4_opt_d">If every item in the list is less than zero</li><li data-component="feedback">Incorrect. The code will work as intended if every value is negative.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.4",
                  optional: false,
                  description:
                    "Imagine you want to create a procedure to find and print the smallest item in a ",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_5",
                data: {
                  id: 27511,
                  base_course: "StudentCSP",
                  name: "e25_4_5",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.5" data-multipleanswers="false"  id="e25_4_5"  style="visibility: hidden;">\n    <p>Which of the following is NOT true about abstraction?</p>\n\n    <li data-component="answer"  id="e25_4_5_opt_a">Abstraction reduces or removes details to help understand something new.</li><li data-component="feedback">Incorrect. Abstraction removes unnecessary information that is not needed to understand something.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_4_5_opt_b">A lower-level abstraction is less specific than a higher-level abstraction.</li><li data-component="feedback">Correct. The opposite is true. A lower the level of abstraction means there is more detail.</li>\n    \n    <li data-component="answer"  id="e25_4_5_opt_c">Abstraction helps you manage the details and code of a program.</li><li data-component="feedback">Incorrect. Abstraction is a way of managing details because it emphasizes the details that are relevant.</li>\n    \n    <li data-component="answer"  id="e25_4_5_opt_d">Lower-level abstractions can be combined to make higher-level abstractions.</li><li data-component="feedback">Incorrect. Since lower-level abstractions are more detailed, they cannot be combined to make higher-level abstractions.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.5",
                  optional: false,
                  description: "Which of the following is NOT true about abstraction?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_6",
                data: {
                  id: 27512,
                  base_course: "StudentCSP",
                  name: "e25_4_6",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.6" data-multipleanswers="false"  id="e25_4_6"  style="visibility: hidden;">\n    <p>Which of the following is NOT true?</p>\n\n    <li data-component="answer"  id="e25_4_6_opt_a">All digital data is an abstraction.</li><li data-component="feedback">Incorrect. Digital data is represented by different levels of abstractions.</li>\n    \n    <li data-component="answer"  id="e25_4_6_opt_b">All data eventually becomes binary digits (bits) that the computer interprets.</li><li data-component="feedback">Incorrect. Computers read binary digits to interpret data.</li>\n    \n    <li data-component="answer"  id="e25_4_6_opt_c">Programming commands are a source of bits.</li><li data-component="feedback">Incorrect. Commands are data which can be broken down into bits.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_4_6_opt_d">Abstractions occur only in hardware applications.</li><li data-component="feedback">Correct. Abstractions occur in software applications.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.6",
                  optional: false,
                  description: "Which of the following is NOT true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_7",
                data: {
                  id: 27513,
                  base_course: "StudentCSP",
                  name: "e25_4_7",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.7" data-multipleanswers="false"  id="e25_4_7"  style="visibility: hidden;">\n    <p>Which of the following is most likely to be a part of a phishing attack?</p>\n\n    <li data-component="answer"  id="e25_4_7_opt_a">Someone using your social media information to show you specific advertisements.</li><li data-component="feedback">Incorrect. Although your personal information is being used in this situation, showing specific advertisements is not considered phishing.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_4_7_opt_b">Someone requesting your personal information through an online chat room.</li><li data-component="feedback">Correct. Phishing involves someone else trying to obtain personal information from you through electronic communication.</li>\n    \n    <li data-component="answer"  id="e25_4_7_opt_c">Clicking a button that results in all of your passwords being open to hackers.</li><li data-component="feedback">Incorrect. Although your sensitive information is being revealed, this is not phishing because there is not another person disguising themselves as a trustworthy source.</li>\n    \n    <li data-component="answer"  id="e25_4_7_opt_d">Having all of your email accounts deleted from too many failed login attempts</li><li data-component="feedback">Incorrect. This is not phishing because there is no one trying to steal personal information from you.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.7",
                  optional: false,
                  description:
                    "Which of the following is most likely to be a part of a phishing attack?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_8",
                data: {
                  id: 27514,
                  base_course: "StudentCSP",
                  name: "e25_4_8",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.8" data-multipleanswers="false"  id="e25_4_8"  style="visibility: hidden;">\n    <p>Which of the following is true?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e25_4_8_opt_a">Converting data from one file type to another usually comes at a cost.</li><li data-component="feedback">Correct. For example, you may lose the ability to edit a document when you convert to a PDF file.</li>\n    \n    <li data-component="answer"  id="e25_4_8_opt_b">Data is never lost in conversion.</li><li data-component="feedback">Incorrect. For example, the quality of a photo may decrease when you convert from JPG to PNG.</li>\n    \n    <li data-component="answer"  id="e25_4_8_opt_c">Data is never changed in conversion.</li><li data-component="feedback">Incorrect. Data may lose readability in conversion and may be changed as a result.</li>\n    \n    <li data-component="answer"  id="e25_4_8_opt_d">Data can always be converted without a loss.</li><li data-component="feedback">Incorrect. There are instances in which data is lost through conversion.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.8",
                  optional: false,
                  description: "Which of the following is true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_9",
                data: {
                  id: 27515,
                  base_course: "StudentCSP",
                  name: "e25_4_9",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.9" data-multipleanswers="false"  id="e25_4_9"  style="visibility: hidden;">\n    <p>Which of the following is most likely an example of an overflow error?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>(A)\n\nz ← ⅓\n\n\n(B)\n\nz ← 1/0\n\n\n(C)\n\nnums ← (1, 2, 3)\n\nn ← 0\n\nREPEAT 4 TIMES\n\nn ← n + 1\n\nDISPLAY(nums(n))\n\n\n(D)\n\nn ← 0\n\nREPEAT UNTIL NOT n = 0\n\nn ← n * 100\n</pre></div>\n</div>\n\n    <li data-component="answer" data-correct=\'yes\' id="e25_4_9_opt_a"></li><li data-component="feedback">Correct. This is a repeating decimal which will result in an overflow error.</li>\n    \n    <li data-component="answer"  id="e25_4_9_opt_b"></li><li data-component="feedback">Incorrect. Though the solution is undefined, it will not result in an overflow error.</li>\n    \n    <li data-component="answer"  id="e25_4_9_opt_c"></li><li data-component="feedback">Incorrect. This will not result in an overflow error but rather a value error.</li>\n    \n    <li data-component="answer"  id="e25_4_9_opt_d"></li><li data-component="feedback">Incorrect. This will result in an infinite loop.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.9",
                  optional: false,
                  description:
                    "Which of the following is most likely an example of an overflow error?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_10",
                data: {
                  id: 27516,
                  base_course: "StudentCSP",
                  name: "e25_4_10",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.10" data-multipleanswers="false"  id="e25_4_10"  style="visibility: hidden;">\n    <p>Which of the following statements is true?</p>\n\n    <li data-component="answer" data-correct=\'yes\' id="e25_4_10_opt_a">Problems that have a “yes” or “no” answer for all inputs are called decidable.</li><li data-component="feedback">Correct. A decidable problem is solvable.</li>\n    \n    <li data-component="answer"  id="e25_4_10_opt_b">Problems that have a “yes” or “no” answer for all inputs are called undecidable.</li><li data-component="feedback">Incorrect. If a problem is solvable, it cannot be undecidable.</li>\n    \n    <li data-component="answer"  id="e25_4_10_opt_c">Undecidable problems always have a solution.</li><li data-component="feedback">Incorrect. It is impossible to construct an algorithm that solves an undecidable problem.</li>\n    \n    <li data-component="answer"  id="e25_4_10_opt_d">Problems that cannot be solved with an algorithm are called solvable.</li><li data-component="feedback">Incorrect. Problems than cannot be solved with an algorithm are called unsolvable.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.10",
                  optional: false,
                  description: "Which of the following statements is true?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_11",
                data: {
                  id: 27517,
                  base_course: "StudentCSP",
                  name: "e25_4_11",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.11" data-multipleanswers="false"  id="e25_4_11"  style="visibility: hidden;">\n    <p>Which of the following correctly converts 167 to the binary number system? (Hint: Binary numbers have place values that are powers of 2.)</p>\n\n    <li data-component="answer"  id="e25_4_11_opt_a">11100101</li><li data-component="feedback">Incorrect. 11100101 = (1 × 2⁷) + (1 × 2⁶) + (1 × 2⁵) + (0 × 2⁴) + (0 × 2³) + (1 × 2²) + (0 × 2¹) + (1 × 2⁰) = 229</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_4_11_opt_b">10100111</li><li data-component="feedback">Correct. 10100111 = (1 × 2⁷) + (0 × 2⁶) + (1 × 2⁵) + (0 × 2⁴) + (0 × 2³) + (1 × 2²) + (1 × 2¹) + (1 × 2⁰) = 167</li>\n    \n    <li data-component="answer"  id="e25_4_11_opt_c">0000111</li><li data-component="feedback">Incorrect. 0000111 = (0 × 2⁶) + (0 × 2⁵) + (0 × 2⁴) + (0 × 2³) + (1 × 2²) + (1 × 2¹) + (1 × 2⁰) = 7</li>\n    \n    <li data-component="answer"  id="e25_4_11_opt_d">1010101</li><li data-component="feedback">Incorrect. 1010101 = (1 × 2⁶) + (0 × 2⁵) + (1 × 2⁴) + (0 × 2³) + (1 × 2²) + (0 × 2¹) + (1 × 2⁰) = 85</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.11",
                  optional: false,
                  description:
                    "Which of the following correctly converts 167 to the binary number system? (Hint",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_12",
                data: {
                  id: 27518,
                  base_course: "StudentCSP",
                  name: "e25_4_12",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.12" data-multipleanswers="false"  id="e25_4_12"  style="visibility: hidden;">\n    <p>Algorithms will exponential behavior (e.g. x^n) are:</p>\n\n    <li data-component="answer"  id="e25_4_12_opt_a">Expected to run in reasonable time</li><li data-component="feedback">Incorrect. Algorithms with exponential will continually change over time.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_4_12_opt_b">NOT expected to run in reasonable time</li><li data-component="feedback">Correct. Since an exponential function is continually changing, it may not run in reasonable time.</li>\n    \n    <li data-component="answer"  id="e25_4_12_opt_c">Impossible to calculate</li><li data-component="feedback">Incorrect. They can be solved for a specific value.</li>\n    \n    <li data-component="answer"  id="e25_4_12_opt_d">Easier to do by hand</li><li data-component="feedback">Incorrect. It is not necessarily easier to calculate by hand.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.12",
                  optional: false,
                  description: "Algorithms will exponential behavior (e.g. x^n) are:",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_13",
                data: {
                  id: 27519,
                  base_course: "StudentCSP",
                  name: "e25_4_13",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.13" data-multipleanswers="false"  id="e25_4_13"  style="visibility: hidden;">\n    <p>Data compression that allows for all of the original data to be retrieved is called:</p>\n\n    <li data-component="answer"  id="e25_4_13_opt_a">Lossy</li><li data-component="feedback">Incorrect. Data is lost in lossy compression.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_4_13_opt_b">Lossless</li><li data-component="feedback">Correct. All original data can be retrieved through lossless compression.</li>\n    \n    <li data-component="answer"  id="e25_4_13_opt_c">Data manipulation</li><li data-component="feedback">Incorrect. Data manipulation is not a specific form of data compression.</li>\n    \n    <li data-component="answer"  id="e25_4_13_opt_d">Sticky</li><li data-component="feedback">Incorrect. There is no such thing as sticky data compression.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.13",
                  optional: false,
                  description:
                    "Data compression that allows for all of the original data to be retrieved is cal",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_14",
                data: {
                  id: 27520,
                  base_course: "StudentCSP",
                  name: "e25_4_14",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.14" data-multipleanswers="false"  id="e25_4_14"  style="visibility: hidden;">\n    <p>A group of two or more systems linked together is called:</p>\n\n    <li data-component="answer"  id="e25_4_14_opt_a">The internet</li><li data-component="feedback">Incorrect. The internet is the global system of connected computer networks.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_4_14_opt_b">A network</li><li data-component="feedback">Correct. A network is a group of multiple systems.</li>\n    \n    <li data-component="answer"  id="e25_4_14_opt_c">A model</li><li data-component="feedback">Incorrect. A model represents the relationship between elements or objects.</li>\n    \n    <li data-component="answer"  id="e25_4_14_opt_d">Memory</li><li data-component="feedback">Incorrect. Memory is the storing of information.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.14",
                  optional: false,
                  description: "A group of two or more systems linked together is called:",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "e25_4_15",
                data: {
                  id: 27521,
                  base_course: "StudentCSP",
                  name: "e25_4_15",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: "bmiller",
                  question_type: "mchoice",
                  is_private: false,
                  htmlsrc:
                    '\n    <div class="runestone ">\n    <ul data-component="multiplechoice" data-question_label="25.4.15" data-multipleanswers="false"  id="e25_4_15"  style="visibility: hidden;">\n    <p>What is the value of n after the above code executes?</p>\n<div class="highlight-default notranslate"><div class="highlight"><pre><span></span>i ← 1\n\nn ← 2\n\nREPEAT until i = 4\n\n  {\n  n ← n * 2\n\n  i ← i + 1\n  }\n</pre></div>\n</div>\n\n    <li data-component="answer"  id="e25_4_15_opt_a">0</li><li data-component="feedback">Incorrect. The value of n increases every time this code repeats.</li>\n    \n    <li data-component="answer"  id="e25_4_15_opt_b">22</li><li data-component="feedback">Incorrect. The block of code will repeat 3 times and the value of n will be 16. If it repeats a fourth time, n would equal 32.</li>\n    \n    <li data-component="answer" data-correct=\'yes\' id="e25_4_15_opt_c">16</li><li data-component="feedback">Correct. The block of code will repeat 3 times and the value of n will be 16.</li>\n    \n    <li data-component="answer"  id="e25_4_15_opt_d">4</li><li data-component="feedback">Incorrect. The value of n equals 4 after repeating one time, but the block of code will repeat until i = 4.</li>\n    \n\n    </ul>\n    </div>\n    ',
                  autograde: null,
                  practice: null,
                  topic: "CSPUntimedPracticeQuestions/exam25_4",
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: "25.4.15",
                  optional: false,
                  description: "What is the value of n after the above code executes?",
                  difficulty: 3.0,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              },
              {
                key: "25. Chapter 25 - UNTIMED PRACTICE QUESTIONS/25.4 Set #4",
                data: {
                  id: 27523,
                  base_course: "StudentCSP",
                  name: "25. Chapter 25 - UNTIMED PRACTICE QUESTIONS/25.4 Set #4",
                  chapter: "CSPUntimedPracticeQuestions",
                  subchapter: "exam25_4",
                  author: null,
                  question_type: "page",
                  is_private: null,
                  htmlsrc: null,
                  autograde: null,
                  practice: null,
                  topic: null,
                  feedback: null,
                  from_source: true,
                  review_flag: false,
                  qnumber: null,
                  optional: null,
                  description: null,
                  difficulty: null,
                  pct_on_first: null,
                  mean_clicks_to_correct: null,
                  question_json: null,
                  owner: null,
                  tags: null
                }
              }
            ]
          }
        ]
      }
    ]
  }
};
