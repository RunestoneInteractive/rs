.container {
  display: flex;
  flex-direction: column;
  min-height: min(100vh - 60px, fit-content);
  max-height: calc(100vh - 60px);
  background: var(--surface-ground);
  gap: 1rem;
  width: 100%;
  margin: 0 auto;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.75rem 1.5rem;
  background: #fff;
  margin-bottom: 1rem;
}

.header h2 {
  margin: 0;
  font-size: 1.1rem;
  font-weight: 500;
  color: #334155;
}

.headerButtons {
  display: flex;
  gap: 0.5rem;
  align-items: center;
}

.headerButtons :global(.p-button) {
  height: 32px;
  font-size: 0.875rem;
  border-radius: calc(var(--border-radius) - 2px);
}

.headerButtons :global(.p-button.p-button-text) {
  color: var(--text-color-secondary);
  padding: 0 0.75rem;
}

.headerButtons :global(.p-button.p-button-text:hover) {
  color: var(--text-color);
  background: var(--surface-hover);
}

.headerButtons :global(.p-button.p-button-text:focus) {
  box-shadow: none;
  background: var(--surface-hover);
}

.headerButtons :global(.p-button:not(.p-button-text)) {
  padding: 0 1rem;
  background: var(--primary-600);
  border: none;
  font-weight: 500;
}

.headerButtons :global(.p-button:not(.p-button-text).p-button-secondary) {
  background: var(--surface-200);
  color: var(--surface-900);
}

.headerButtons :global(.p-button:not(.p-button-text):hover) {
  background: var(--primary-700);
  transform: translateY(-1px);
}

.headerButtons :global(.p-button:not(.p-button-text).p-button-secondary:hover) {
  background: var(--surface-300);
}

.headerButtons :global(.p-button .p-button-icon) {
  font-size: 0.875rem;
}

.headerButtons :global(.p-button:disabled) {
  opacity: 0.6;
  pointer-events: none;
}

.content {
  flex: 1;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  min-height: fit-content;
}

.steps {
  background: #fff;
  padding: 0.5rem;
  border-radius: 8px;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
  width: 100%;
}

.steps :global(.p-steps) {
  padding: 0;
  margin: 0;
}

.steps :global(.p-steps .p-steps-item) {
  flex: 1;
}

.steps :global(.p-steps .p-steps-item:before) {
  border-top: 1px solid #e2e8f0;
  margin-top: 8px;
}

.steps :global(.p-steps .p-steps-item.p-highlight:before) {
  border-top-color: var(--primary-color);
}

.steps :global(.p-steps .p-steps-number) {
  width: 20px;
  height: 20px;
  border: none;
  background: #f1f5f9;
  color: #64748b;
  font-weight: 600;
  font-size: 0.75rem;
  margin-bottom: 0.25rem;
}

.steps :global(.p-steps .p-steps-item.p-highlight .p-steps-number) {
  background: var(--primary-color);
  color: #fff;
}

.steps :global(.p-steps .p-steps-item .p-steps-title) {
  font-weight: 500;
  color: #64748b;
  font-size: 0.75rem;
  margin-top: 0.25rem;
}

.steps :global(.p-steps .p-steps-item.p-highlight .p-steps-title) {
  color: #334155;
}

.steps :global(.p-steps .p-steps-item .p-menuitem-link) {
  padding: 0.25rem;
  background: transparent !important;
}

.steps :global(.p-steps .p-steps-item .p-menuitem-link:hover) {
  background: transparent !important;
}

.steps :global(.p-steps .p-steps-item .p-menuitem-link:focus) {
  box-shadow: none;
  background: transparent !important;
}

.steps :global(.p-steps .p-steps-item .p-steps-icon) {
  display: none;
}

.steps :global(.p-steps) :global(.p-steps-item) :global(.p-menuitem-link) {
  background: transparent !important;
}

.steps :global(.p-steps .p-steps-item .p-menuitem-link) {
  padding: 0.25rem;
  background: transparent !important;
}

.steps :global(.p-steps .p-steps-item .p-menuitem-link:hover) {
  background: transparent !important;
}

.steps :global(.p-steps .p-steps-item .p-menuitem-link:focus) {
  box-shadow: none;
  background: transparent !important;
}

.questionContainer {
  display: flex;
  flex-direction: column;
  position: relative;
  background: #fff;
  border-radius: 8px;
  border: 1px solid #e2e8f0;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  overflow: hidden;
  width: 100%;
  margin: 0 auto;
}

.questionHeader {
  flex-shrink: 0;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.75rem 1.25rem;
  background: #f8fafc;
  border-bottom: 1px solid #e2e8f0;
}

.questionHeader h3 {
  margin: 0;
  font-size: 1rem;
  font-weight: 600;
  color: #334155;
}

.questionContent {
  padding: 1.5rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.questionHelp {
  font-size: 0.9rem;
  color: #64748b;
  background: rgba(59, 130, 246, 0.08);
  padding: 0.75rem 1rem;
  border-radius: 6px;
  margin-bottom: 1rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.questionHelp i {
  color: #3b82f6;
  font-size: 1rem;
}

.questionEditor {
  border: 1px solid #e2e8f0;
  border-radius: 8px;
  overflow: hidden;
  background: #fff;
  width: 100%;
  min-height: 200px;
  position: relative;
  transition: all 0.2s ease;
}

.questionEditor:focus-within {
  border-color: #3b82f6;
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);
}

.questionEditor :global(.ProseMirror) {
  padding: 1.25rem;
  min-height: 200px !important;
  outline: none;
  font-size: 1rem;
  line-height: 1.6;
  color: #1e293b;
}

.questionEditor :global(.ProseMirror-focused) {
  outline: none;
}

.questionEditor :global(.ProseMirror p) {
  margin: 0.75rem 0;
}

.questionFooter {
  padding: 0.75rem 1.25rem;
  background: #f8fafc;
  border-top: 1px solid #e2e8f0;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.questionTips {
  font-size: 0.85rem;
  color: #64748b;
}

.emptyEditor {
  border-color: #ef4444;
  background-color: #fff5f5;
}

.emptyEditor:focus-within {
  border-color: #ef4444;
  box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.2);
}

.pollTypeContainer {
  display: flex;
  flex-direction: column;
  width: 100%;
  margin: 0 auto;
  background: #fff;
  border-radius: 8px;
  padding: 1.5rem;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
  border: 1px solid #e2e8f0;
}

.pollTypeHeader {
  margin-bottom: 1.5rem;
  text-align: center;
}

.pollTypeHeader h3 {
  margin: 0 0 0.5rem;
  font-size: 1.1rem;
  font-weight: 600;
  color: #334155;
}

.pollTypeHeader p {
  color: #64748b;
  font-size: 0.9rem;
  margin: 0;
}

.pollTypeOptions {
  display: flex;
  gap: 1.5rem;
  justify-content: center;
  margin: 1rem 0 2rem;
}

.pollTypeCard {
  width: 240px;
  border: 2px solid #e2e8f0;
  border-radius: 8px;
  padding: 1.5rem;
  cursor: pointer;
  transition: all 0.2s ease;
  background: #f8fafc;
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
}

.pollTypeCard:hover {
  border-color: #cbd5e1;
  transform: translateY(-2px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
}

.pollTypeCard.active {
  border-color: #3b82f6;
  background: #f0f7ff;
}

.pollTypeIcon {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  background: white;
  display: flex;
  align-items: center;
  justify-content: center;
  margin-bottom: 1rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  color: #64748b;
}

.pollTypeCard.active .pollTypeIcon {
  background: #3b82f6;
  color: white;
}

.pollTypeIcon i {
  font-size: 1.25rem;
}

.pollTypeTitle {
  font-weight: 600;
  font-size: 1rem;
  color: #334155;
  margin-bottom: 0.5rem;
}

.pollTypeCard.active .pollTypeTitle {
  color: #1e40af;
}

.pollTypeDescription {
  font-size: 0.85rem;
  color: #64748b;
  line-height: 1.4;
}

.pollTypeCard.active .pollTypeDescription {
  color: #3b82f6;
}

.pollTypeHelp {
  margin-top: 1rem;
  text-align: center;
  color: #64748b;
  font-size: 0.85rem;
  background: rgba(59, 130, 246, 0.08);
  padding: 0.75rem 1rem;
  border-radius: 6px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.scaleSettings {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding: 2rem;
  background: #fff;
  border-radius: 8px;
  border: 1px solid #e2e8f0;
  max-width: 400px;
  margin: 0 auto;
}

.label {
  font-size: 1rem;
  font-weight: 600;
  color: #334155;
  margin-bottom: 1rem;
  text-align: center;
}

.scaleInput {
  width: 100%;
  max-width: 200px;
  margin: 0 auto;
}

.scaleInput :global(.p-inputnumber) {
  width: 100%;
}

.scaleInput :global(.p-inputnumber-input) {
  text-align: center;
  font-size: 1.5rem;
  font-weight: 600;
  color: #334155;
  padding: 0.75rem;
  border: 1px solid #e2e8f0;
  border-radius: 8px;
  width: 100%;
  transition: all 0.2s ease;
}

.scaleInput :global(.p-inputnumber-button) {
  background: #f8fafc;
  border: 1px solid #e2e8f0;
  color: #64748b;
  width: 2.5rem;
  height: 100%;
  transition: all 0.2s ease;
}

.scaleInput :global(.p-inputnumber-button.p-inputnumber-button-up) {
  border-radius: 0 8px 8px 0;
  border-left: none;
}

.scaleInput :global(.p-inputnumber-button.p-inputnumber-button-down) {
  border-radius: 8px 0 0 8px;
  border-right: none;
}

.scaleInput :global(.p-inputnumber-button:hover) {
  background: #f1f5f9;
  color: #334155;
}

.scaleInput :global(.p-inputnumber-button:active) {
  background: #e2e8f0;
}

.scaleInput :global(.p-inputnumber-button .p-button-icon) {
  font-size: 0.875rem;
}

.scaleHelp {
  font-size: 0.875rem;
  color: #64748b;
  text-align: center;
  margin-top: 1rem;
}

.scalePreview {
  margin-top: 1rem;
  padding: 1.5rem;
  background: #f8fafc;
  border-radius: 6px;
  border: 1px dashed #e2e8f0;
}

.scalePreviewTitle {
  font-size: 0.75rem;
  font-weight: 600;
  color: #64748b;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  margin-bottom: 1rem;
}

.scaleValues {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem;
  background: #fff;
  border-radius: 6px;
  border: 1px solid #e2e8f0;
  overflow-x: auto;
}

.scaleValue {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 2rem;
  height: 2rem;
  font-size: 0.875rem;
  font-weight: 500;
  color: #64748b;
  background: #f1f5f9;
  border-radius: 4px;
  transition: all 0.2s ease;
}

.scaleValue:hover {
  background: #e2e8f0;
  color: #475569;
}

.settingsContainer {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  max-width: 500px;
  margin: 0 auto;
}

.setting {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
  align-items: center;
  text-align: center;
  padding: 1.5rem;
  background: #f8fafc;
  border-radius: 8px;
}

.settingButton {
  min-width: 180px;
}

.settingDescription {
  margin: 0;
  color: #64748b;
  font-size: 0.875rem;
}

@media screen and (max-width: 768px) {
  .header {
    padding: 0.5rem 1rem;
    height: 44px;
  }

  .headerButtons {
    gap: 0.25rem;
  }

  .headerButtons :global(.p-button) {
    height: 28px;
    font-size: 0.813rem;
  }

  .headerButtons :global(.p-button.p-button-text) {
    padding: 0 0.5rem;
  }

  .headerButtons :global(.p-button:not(.p-button-text)) {
    padding: 0 0.75rem;
  }

  .pollTypeSelect :global(.p-selectbutton .p-button) {
    min-width: 140px;
    padding: 0.5rem 0.75rem;
  }

  .scaleSettings {
    padding: 1rem;
    gap: 1rem;
  }

  .scalePreview {
    padding: 1rem;
  }

  .scaleValue {
    width: 1.75rem;
    height: 1.75rem;
    font-size: 0.813rem;
  }

  .setting {
    padding: 1rem;
  }

  .steps {
    padding: 0.25rem;
  }

  .steps :global(.p-steps .p-steps-number) {
    width: 16px;
    height: 16px;
    font-size: 0.625rem;
  }

  .steps :global(.p-steps .p-steps-title) {
    font-size: 0.625rem;
  }

  .steps :global(.p-steps .p-steps-item .p-menuitem-link) {
    padding: 0.25rem;
  }
}

.settingsGrid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 2rem;
  padding: 1.5rem;
  background: #fff;
  border-radius: 0.75rem;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.formField {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.formField :global(.p-float-label) {
  width: 100%;
}

.formField :global(.p-inputtext),
.formField :global(.p-dropdown),
.formField :global(.p-inputnumber-input) {
  width: 100%;
  transition: all 0.2s ease;
}

.formField :global(.p-dropdown-label) {
  padding-right: 2.5rem;
}

.formField :global(.p-chips) {
  width: 100%;
}

.formField :global(.p-chips-multiple-container) {
  width: 100%;
  min-height: 3rem;
  padding: 0.25rem;
  gap: 0.5rem;
  flex-wrap: wrap;
  background: #fff;
  border: 1px solid #ced4da;
  border-radius: 6px;
  transition: all 0.2s ease;
}

.formField :global(.p-chips-token) {
  background: var(--primary-100);
  border: 1px solid var(--primary-200);
  color: var(--primary-700);
  border-radius: 4px;
  padding: 0.25rem 0.5rem;
  font-size: 0.875rem;
  display: inline-flex;
  align-items: center;
  gap: 0.25rem;
  transition: all 0.2s ease;
}

.formField :global(.p-chips-token-icon) {
  color: var(--primary-600);
  font-size: 0.75rem;
}

.formField :global(.p-chips-input-token) {
  padding: 0.25rem;
  flex: 1;
  min-width: 150px;
}

.formField :global(.p-chips-input-token input) {
  width: 100%;
  padding: 0.25rem;
  font-size: 0.875rem;
  border: none;
  outline: none;
  background: transparent;
}

.tagsField {
  grid-column: 1 / -1;
}

/* Hover and Focus states */
.formField :global(.p-inputtext:hover),
.formField :global(.p-dropdown:hover),
.formField :global(.p-chips:hover .p-chips-multiple-container) {
  border-color: var(--primary-400);
}

.formField :global(.p-inputtext:focus),
.formField :global(.p-dropdown:focus),
.formField :global(.p-chips.p-focus .p-chips-multiple-container) {
  border-color: var(--primary-500);
  box-shadow: 0 0 0 2px var(--primary-100);
}

.formField :global(.p-chips-token:hover) {
  background: var(--primary-200);
  border-color: var(--primary-300);
}

/* Error states */
.formField :global(.p-invalid),
.formField :global(.p-invalid:hover),
.formField :global(.p-invalid:focus) {
  border-color: var(--red-500);
}

.formField :global(.p-error) {
  color: var(--red-500);
  font-size: 0.75rem;
  margin-top: 0.25rem;
}

@media screen and (max-width: 768px) {
  .settingsGrid {
    grid-template-columns: 1fr;
    padding: 1rem;
    gap: 1rem;
  }
}

.optionsSection {
  width: 100%;
}

.validationError {
  color: #ef4444;
  font-size: 0.875rem;
  margin-top: 0.25rem;
  padding: 0.5rem;
  background-color: #fee2e2;
  border-radius: 0.25rem;
  border-left: 3px solid #ef4444;
}

.successDialogContent {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  padding: 1rem;
  gap: 1rem;
}

.successDialogContent p {
  margin: 0.5rem 0;
  font-size: 1.1rem;
}

.dialogFooter {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
} 